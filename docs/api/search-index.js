var searchIndex = JSON.parse('{\
"maplibre":{"doc":"Maplibre-rs","t":"","n":["benchmarking","context","coords","debug","define_label","environment","event_loop","io","kernel","map","multi_stage","platform","plugin","raster","render","schedule","style","tcs","tessellation","tile","util","vector","window","io","tessellation","IndexDataType","OverAlignedVertexBuffer","VertexConstructor","buffer","usable_indices","zero_tessellator","ZeroTessellator","buffer","current_index","feature_indices","is_point","path_builder","path_open","MapContext","as_any","as_any_mut","borrow","borrow_mut","downcast","from","into","into_any","into_any_rc","is_within","renderer","resize","style","try_from","try_into","type_id","upcast","view_state","world","AlignedWorldTileCoords","EARTH_CIRCUMFRENCE","EARTH_RADIUS","EXTENT","EXTENT_SINT","EXTENT_UINT","InnerCoords","LatLon","MAX_ZOOM","Quadkey","TILE_SIZE","TileCoords","ViewRegion","WorldCoords","WorldTileCoords","ZOOM_BOUNDS","Zoom","ZoomLevel","add","add","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","as_dyn_eq","at_ground","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_quad_key","circumference_at_latitude","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","create_zoom_bounds","default","default","default","default","default","default","default","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_lat_lon","get_children","get_parent","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into_aligned","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_tile","into_world_tile","into_world_tile","is_in_view","is_root","is_valid_bit_pattern","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","iter","latitude","longitude","lower_left","lower_right","max_n_tiles","max_tile","mercator_x_from_lng","mercator_y_from_lat","mercator_z_from_altitude","min_tile","ne","new","new","new","new","new","padding","partial_cmp","partial_cmp","partial_cmp","scale_delta","scale_to_tile","scale_to_zoom_level","serialize","serialize","stencil_reference_value_3d","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","transform_for_zoom","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upper_left","upper_right","x","x","x","x","y","y","y","y","z","z","zoom_level","zoom_level","zoom_level","DebugPipeline","DebugPlugin","TileDebugItem","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","cleanup_system","debug_pass","default","deref","downcast","downcast","downcast","draw_function","draw_function","draw_graph","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_within","is_within","is_within","queue_system","render_commands","resource_system","sort_key","source_shape","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","cleanup_system","DebugPassNode","as_any","as_any_mut","borrow","borrow_mut","downcast","from","input","into","into_any","into_any_arc","into_any_rc","is_within","new","run","try_from","try_into","type_id","upcast","update","NAME","input","node","DEBUG_PASS","MAIN_PASS","queue_system","DrawDebugOutline","DrawDebugOutlines","SetDebugPipeline","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","downcast","downcast","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_within","is_within","render","render","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","resource_system","AsyncProcedureCall","Environment","HttpClient","HttpClient","MapWindowConfig","OffscreenKernelEnvironment","OffscreenKernelEnvironment","Scheduler","create","source_client","Closed","EventLoop","EventLoopConfig","EventLoopProxy","EventLoopProxy","EventLoopProxy","EventType","SendEventError","as_any","as_any_mut","borrow","borrow_mut","create_proxy","create_proxy","downcast","fmt","fmt","from","into","into_any","into_any_arc","into_any_rc","is_within","provide","run","send_event","to_string","try_from","try_into","type_id","upcast","RawLayer","apc","extent","features","geometry_index","keys","name","scheduler","source_client","source_type","values","version","AsyncProcedure","AsyncProcedureCall","AsyncProcedureFuture","CallError","CastError","Context","Context","Deserialize","DeserializeInput","Execution","IncompatibleInput","Input","IntoMessage","Message","MessageError","MessageTag","NotYetImplemented","ProcedureError","ReceiveIterator","Schedule","SchedulerAsyncProcedureCall","SchedulerContext","Send","SendError","Serialize","TileRequest","Transmission","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","call","call","channel","clone","clone","clone_into","clone_into","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","has_tag","hash","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_transferable","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","new","new","phantom_k","provide","provide","provide","provide","receive","receive","scheduler","send","send","sender","serialize","tag","tag","to_owned","to_owned","to_string","to_string","to_string","to_string","transferable","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","coords","style","ExactGeometry","GeometryIndex","IndexProcessor","IndexedGeometry","LineString","Linear","Polygon","Spatial","TileIndex","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","build_tree","clone","clone","clone_into","clone_into","contains_point","dataset_begin","dataset_end","default","default","distance_2","downcast","downcast","downcast","downcast","downcast","envelope","exact","feature_begin","feature_end","fmt","fmt","from","from","from","from","from","from_linestring","from_polygon","geo_writer","geometries","geometry_begin","geometry_end","get_geometries","index","index_tile","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_within","is_within","is_within","is_within","is_within","linestring_begin","linestring_end","multilinestring_begin","multilinestring_end","multipoint_begin","multipolygon_begin","multipolygon_end","new","new","point_begin","point_end","point_query","polygon_begin","polygon_end","properties","properties","properties_begin","properties_end","property","query_point","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","xy","list","tree","NopScheduler","NotImplemented","ScheduleError","Scheduler","Scheduling","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","downcast","downcast","fmt","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","is_within","is_within","provide","schedule","schedule","to_string","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","HTTPClientFactory","HttpClient","HttpSourceClient","SourceClient","SourceFetchError","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","downcast","downcast","downcast","fetch","fetch","fetch","fmt","fmt","from","from","from","from","from","http","inner_client","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_within","is_within","is_within","new","new","provide","source","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","Raster","RasterSource","SourceType","Tessellate","TessellateSource","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","downcast","downcast","downcast","filetype","filetype","format","format","format","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_within","is_within","is_within","key","new","new","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","url","url","Kernel","KernelBuilder","apc","apc","apc","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","build","default","downcast","downcast","from","from","http_client","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_within","is_within","map_window_config","map_window_config","map_window_config","new","scheduler","scheduler","scheduler","source_client","source_client","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","with_apc","with_http_client","with_map_window_config","with_scheduler","CurrentMapContext","DeviceInit","Map","MapError","Pending","Ready","RenderGraphInit","RendererAlreadySet","RendererNotReady","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","context","context_mut","downcast","downcast","downcast","fmt","fmt","from","from","from","initialize_renderer","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_initialized","is_within","is_within","is_within","kernel","kernel","map_context","new","plugins","provide","reset","run_schedule","schedule","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","window","window","window_mut","renderer_builder","style","MIN_WEBGL_BUFFER_SIZE","ReqwestOffscreenKernelEnvironment","http_client","noweb","run_multithreaded","scheduler","trace","ReqwestHttpClient","client","ReqwestOffscreenKernelEnvironment","as_any","as_any_mut","borrow","borrow_mut","create","downcast","from","http_client","into","into_any","into_any_arc","into_any_rc","is_within","run_multithreaded","scheduler","source_client","trace","try_from","try_into","type_id","upcast","ReqwestHttpClient","as_any","as_any_mut","borrow","borrow_mut","client","clone","clone_into","downcast","fetch","from","into","into_any","into_any_arc","into_any_rc","is_within","new","to_owned","try_from","try_into","type_id","upcast","TokioScheduler","as_any","as_any_mut","borrow","borrow_mut","default","downcast","from","into","into_any","into_any_arc","into_any_rc","is_within","new","schedule","try_from","try_into","type_id","upcast","TokioScheduler","Plugin","build","Available","AvailableRasterLayerData","DefaultRasterTransferables","LayerRaster","LayerRaster","LayerRasterMissing","LayerRasterMissing","Missing","MissingRasterLayerData","RasterLayerData","RasterLayersDataComponent","RasterPlugin","RasterTransferables","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_from","build_from","coords","coords","coords","coords","default","default","downcast","downcast","downcast","downcast","downcast","from","from","from","from","from","image","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_within","is_within","is_within","is_within","is_within","layers","message_tag","message_tag","populate_world_system","process_raster","queue_system","render_commands","request_system","resource","resource_system","source_layer","source_layer","to_layer","to_layer","transferables","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upload_system","PopulateWorldSystem","as_any","as_any_mut","borrow","borrow_mut","downcast","from","into","into_any","into_any_rc","is_within","kernel","name","new","phantom_t","run","try_from","try_into","type_id","upcast","ProcessRasterContext","ProcessRasterError","Processing","RasterTileRequest","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","context","coords","downcast","downcast","downcast","fmt","fmt","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_within","is_within","is_within","layer_raster_finished","new","phantom_t","process_raster_tile","provide","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","queue_system","DrawRasterTile","DrawRasterTiles","SetRasterTilePipeline","SetRasterViewBindGroup","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","downcast","downcast","downcast","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_within","is_within","is_within","render","render","render","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","RequestSystem","as_any","as_any_mut","borrow","borrow_mut","downcast","fetch_raster_apc","from","into","into_any","into_any_rc","is_within","kernel","name","new","phantom_t","run","try_from","try_into","type_id","upcast","raster","RasterResources","as_any","as_any_mut","bind_texture","borrow","borrow_mut","bound_textures","create_texture","downcast","from","get_bound_texture","has_tile","into","into_any","into_any_arc","into_any_rc","is_within","msaa","new","pipeline","pipeline","sampler","try_from","try_into","type_id","upcast","resource_system","DefaultLayerRaster","DefaultLayerRasterMissing","DefaultRasterTransferables","LayerRaster","LayerRaster","LayerRaster","LayerRasterMissing","LayerRasterMissing","LayerRasterMissing","RasterMessageTag","RasterTransferables","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_from","build_from","build_from","build_from","clone","clone","clone_into","clone_into","coords","coords","coords","coords","coords","coords","downcast","downcast","downcast","downcast","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","hash","image","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_within","is_within","is_within","is_within","layer_name","message_tag","message_tag","message_tag","message_tag","to_layer","to_layer","to_layer","to_layer","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upload_raster_layer","upload_system","Cleanup","Extract","INDEX_FORMAT","MaskPipeline","PhaseSort","Prepare","Queue","Render","RenderPlugin","RenderResources","RenderStageLabel","Renderer","ShaderVertex","adapter","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","camera","clone","clone_into","default","depth_texture","deref","device","device","downcast","downcast","downcast","downcast","downcast","draw_graph","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","error","eventually","fmt","from","from","from","from","from","graph","graph_runner","hash","initialize","initialize_headless","instance","instance","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_within","is_within","is_within","is_within","is_within","main_graph","main_pass","multisampling_texture","new","queue","queue","recreate_surface","render_commands","render_graph","render_phase","render_target","request_device","resize_surface","resource","resources","settings","settings","shaders","state","surface","surface","surface","systems","tile_view_pattern","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","view_state","wgpu_settings","Gone","InitializationResult","Initialized","InitializedRenderer","RendererBuilder","Uninitialized","UninitializedRenderer","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","default","default","downcast","downcast","downcast","downcast","from","from","from","from","initialize_renderer","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_option","is_within","is_within","is_within","is_within","new","renderer","renderer_settings","renderer_settings","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrap_renderer","upcast","upcast","upcast","upcast","wgpu_settings","wgpu_settings","with_renderer_settings","with_wgpu_settings","Camera","EdgeInsets","FLIP_Y","InvertedViewProjection","MAX_PITCH","MAX_YAW","MIN_PITCH","MIN_YAW","ModelViewProjection","OPENGL_TO_WGPU_MATRIX","Perspective","ViewProjection","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","calc_matrix","calc_matrix","calc_matrix_with_center","center","clone","clone","clone","clone_into","clone_into","clone_into","default","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","eq","fmt","fmt","fovx","fovy","fovy","from","from","from","from","from","from","get_pitch","get_roll","get_yaw","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","invert","is_within","is_within","is_within","is_within","is_within","is_within","left","move_relative","move_to","ne","new","new","offset_x","offset_y","pitch","pitch","position","position","position_vector","project","project","right","roll","roll","set_pitch","set_roll","set_yaw","to_3d","to_model_view_projection","to_owned","to_owned","to_owned","top","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","x_tan","y_tan","yaw","yaw","NAME","input","node","MAIN_PASS","CreateSurfaceError","Graph","RenderError","RequestDevice","Surface","as_any","as_any_mut","borrow","borrow_mut","downcast","fmt","fmt","from","from","from","from","from","into","into_any","into_any_arc","into_any_rc","is_within","provide","should_exit","source","to_string","try_from","try_into","type_id","upcast","Criteria","Eventually","HasChanged","Initialized","Uninitialized","as_any","as_any_mut","borrow","borrow_mut","default","downcast","expect_initialized_mut","from","has_changed","has_tile","initialize","into","into_any","into_any_arc","into_any_rc","is_within","reinitialize","take","try_from","try_into","type_id","upcast","Buffer","Buffer","DoesNotExist","Edge","EdgeAlreadyExists","EdgeDoesNotExist","EdgeExistence","Edges","EmptyNode","Exists","GraphInputNode","Id","Index","InputSlotError","InputSlotError","InvalidInputNodeSlot","InvalidNode","InvalidOutputNodeSlot","InvalidSlot","InvalidSlot","MismatchedInputSlotType","MismatchedNodeSlots","MismatchedSlotType","MismatchedSlotType","MissingInput","MissingSubGraph","Name","Name","Node","NodeEdge","NodeId","NodeInputSlotAlreadyOccupied","NodeLabel","NodeRunError","NodeState","OutputSlotError","OutputSlotError","RenderContext","RenderGraph","RenderGraphContext","RenderGraphError","RunSubGraph","RunSubGraphError","RunSubGraphError","Sampler","Sampler","SlotEdge","SlotInfo","SlotInfos","SlotLabel","SlotType","SlotValue","SubGraphHasNoInputs","TextureView","TextureView","UnconnectedNodeInputSlot","UnconnectedNodeOutputSlot","WrongNodeType","as_any","as_any","as_any_mut","borrow","borrow_mut","command_encoder","context","current_id","device","downcast","dyn_eq","edge","edges","eq","equivalent","equivalent","equivalent","fmt","fmt","from","graph","graph","id","id","input_edges","input_node","input_slots","inputs","inputs","inputs","into","into_any","into_any_arc","into_any_rc","is_within","name","name","name","node","node","node","node_names","node_slot","nodes","output_edges","output_slots","outputs","provide","run","run_sub_graphs","slot_type","slots","sub_graphs","to_string","try_from","try_into","type_id","type_name","upcast","input_index","input_node","input_node","output_index","output_node","output_node","actual","expected","label","actual","expected","label","input_node","input_slot","input_slot","input_slot","node","node","node","occupied_by_node","output_node","output_slot","output_slot","actual","expected","graph_name","graph_name","label","slot_index","slot_index","slot_name","InputSlotError","InvalidSlot","InvalidSlot","MismatchedInputSlotType","MismatchedSlotType","MismatchedSlotType","MissingInput","MissingSubGraph","OutputSlotError","RenderGraphContext","RunSubGraph","RunSubGraphError","SubGraphHasNoInputs","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_eq","dyn_eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_input","get_input_buffer","get_input_sampler","get_input_texture","graph","input_info","inputs","inputs","inputs","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_within","is_within","is_within","is_within","is_within","name","new","node","output_info","outputs","provide","provide","provide","run_sub_graph","run_sub_graphs","set_output","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","actual","expected","label","actual","expected","label","actual","expected","graph_name","graph_name","label","slot_index","slot_index","slot_name","DoesNotExist","Edge","EdgeExistence","Exists","NodeEdge","SlotEdge","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","downcast","downcast","dyn_eq","dyn_eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from","get_input_node","get_output_node","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_within","is_within","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","input_index","input_node","input_node","output_index","output_node","output_node","GraphInputNode","INPUT_NODE_NAME","RenderGraph","add_node","add_node_edge","add_slot_edge","add_sub_graph","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","current_id","default","downcast","downcast","fmt","from","from","get_node","get_node_id","get_node_mut","get_node_state","get_node_state_mut","get_sub_graph","get_sub_graph_mut","has_edge","input","input_node","input_node","inputs","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_within","is_within","iter_node_inputs","iter_node_outputs","iter_nodes","iter_nodes_mut","iter_sub_graphs","iter_sub_graphs_mut","node_names","nodes","output","remove_node","remove_node_edge","remove_slot_edge","remove_sub_graph","run","set_input","sub_graphs","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","update","validate_edge","Edges","EmptyNode","Id","InputSlotError","Name","Node","NodeId","NodeLabel","NodeRunError","NodeState","OutputSlotError","RenderContext","RunSubGraphError","add_input_edge","add_output_edge","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","command_encoder","device","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast_mut","downcast_rc","downcast_ref","dyn_eq","dyn_eq","dyn_eq","dyn_hash","edges","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_input_slot_edge","get_output_slot_edge","has_input_edge","has_output_edge","hash","id","id","id","input","input","input_edges","input_edges","input_slots","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","is_within","is_within","is_within","is_within","is_within","is_within","is_within","name","new","new","node","node","node_mut","output","output","output_edges","output_edges","output_slots","partial_cmp","provide","remove_input_edge","remove_output_edge","run","run","source","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update","validate_input_slots","validate_output_slots","Buffer","Buffer","Index","Name","Sampler","Sampler","SlotInfo","SlotInfos","SlotLabel","SlotType","SlotValue","TextureView","TextureView","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_slot","get_slot_index","get_slot_mut","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_empty","is_within","is_within","is_within","is_within","is_within","iter","len","name","new","slot_type","slot_type","slots","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","EmptyNodeOutputSlot","MismatchedInputSlotType","MissingInput","NodeRunError","RenderGraphRunner","RenderGraphRunnerError","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","downcast","downcast","fmt","fmt","from","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_within","is_within","provide","run","run_graph","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","actual","expected","graph_name","label","slot_index","slot_index","slot_index","slot_name","slot_name","type_name","input","node","MAIN_PASS_DEPENDENCIES","MAIN_PASS_DRIVER","MainPassDriverNode","MainPassNode","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","downcast","downcast","from","from","input","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_within","is_within","new","run","run","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","update","DrawMask","DrawMasks","SetMaskPipeline","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","downcast","downcast","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_within","is_within","render","render","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","Draw","DrawState","Failure","LayerItem","PhaseItem","RenderCommand","RenderCommandResult","RenderPhase","SortKey","Success","TileMaskItem","add","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","default","downcast","downcast","downcast","draw","draw","draw_function","draw_function","draw_function","draw_function","draw_function","from","from","from","index","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_within","is_within","is_within","items","phantom_c","phantom_p","render","size","sort","sort_key","sort_key","sort_key","source_shape","source_shape","style_layer","tile","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","Draw","DrawState","Failure","PhaseItem","RenderCommand","RenderCommandResult","SortKey","Success","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","downcast","downcast","draw","draw","draw_function","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_within","is_within","new","phantom_c","phantom_p","render","render_command_tuple_impl","sort_key","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","BackingBufferDescriptor","BufferDimensions","BufferedTextureHead","FragmentState","Head","Headed","Headless","Queue","RenderPipeline","RenderPipelineDescriptor","Surface","SurfaceTexture","Texture","TextureView","TextureView","TilePipeline","TrackedRenderPass","VertexBufferLayout","VertexState","WindowHead","array_stride","attributes","buffer","buffer","buffer_dimensions","buffers","debug_stencil","depth_stencil","depth_stencil_enabled","describe_render_pipeline","entry_point","entry_point","fragment","fragment_state","head","height","inner_size","label","layout","msaa","multisample","name","output_buffer","padded_bytes_per_row","pass","pipeline","present_mode","primitive","raster","settings","shader","size","size","size","source","source","step_mode","surface","surface","targets","texture","texture","texture","texture_format","texture_format","texture_format_features","tile_pipeline","tracked_render_pass","unpadded_bytes_per_row","update_stencil","vertex","vertex_state","view","width","wireframe","write_buffer","texture","view","BackingBufferDescriptor","as_any","as_any_mut","borrow","borrow_mut","buffer","downcast","from","inner_size","into","into_any","into_any_arc","into_any_rc","is_within","new","try_from","try_into","type_id","upcast","RenderPipeline","RenderPipelineDescriptor","as_any","as_any_mut","borrow","borrow_mut","depth_stencil","describe_render_pipeline","downcast","fragment","from","initialize","into","into_any","into_any_arc","into_any_rc","is_within","label","layout","multisample","primitive","try_from","try_into","type_id","upcast","vertex","FragmentState","VertexBufferLayout","VertexState","array_stride","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","attributes","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffers","clone","clone","clone","clone_into","clone_into","clone_into","downcast","downcast","downcast","dyn_eq","entry_point","entry_point","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_within","is_within","is_within","source","source","step_mode","targets","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","BufferDimensions","BufferedTextureHead","Head","Headed","Headless","Surface","WindowHead","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_dimensions","configure","create_view","downcast","downcast","downcast","downcast","downcast","from","from","from","from","from","from_image","from_surface","has_changed","head","head","head_mut","height","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_multisampling_supported","is_within","is_within","is_within","is_within","is_within","new","output_buffer","padded_bytes_per_row","present_mode","reconfigure","recreate","recreate_surface","resize","resize_and_configure","size","size","size","surface","surface","surface_format","texture","texture_format","texture_format","texture_format_features","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unpadded_bytes_per_row","upcast","upcast","upcast","upcast","upcast","width","SurfaceTexture","Texture","TextureView","TextureView","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","deref","downcast","downcast","fmt","from","from","from","from","has_changed","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_within","is_within","new","size","take_surface_texture","texture","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","view","texture","view","TilePipeline","as_any","as_any_mut","borrow","borrow_mut","debug_stencil","depth_stencil_enabled","describe_render_pipeline","downcast","fragment_state","from","into","into_any","into_any_arc","into_any_rc","is_within","msaa","name","new","raster","settings","try_from","try_into","type_id","upcast","update_stencil","vertex_state","wireframe","TrackedRenderPass","as_any","as_any_mut","borrow","borrow_mut","downcast","draw","draw_indexed","draw_indexed_indirect","draw_indirect","from","insert_debug_marker","into","into_any","into_any_arc","into_any_rc","is_within","new","pass","pop_debug_group","push_debug_group","set_bind_group","set_blend_constant","set_index_buffer","set_push_constants","set_render_pipeline","set_scissor_rect","set_stencil_reference","set_vertex_buffer","set_viewport","try_from","try_into","type_id","upcast","ADDRESS_MODE_CLAMP_TO_BORDER","ADDRESS_MODE_CLAMP_TO_ZERO","Astc","BROWSER_WEBGPU","BUFFER_BINDING_ARRAY","Backends","Bc1RgbaUnorm","Bc1RgbaUnormSrgb","Bc2RgbaUnorm","Bc2RgbaUnormSrgb","Bc3RgbaUnorm","Bc3RgbaUnormSrgb","Bc4RSnorm","Bc4RUnorm","Bc5RgSnorm","Bc5RgUnorm","Bc6hRgbFloat","Bc6hRgbUfloat","Bc7RgbaUnorm","Bc7RgbaUnormSrgb","Bgra8Unorm","Bgra8UnormSrgb","CLEAR_TEXTURE","CONSERVATIVE_RASTERIZATION","DEPTH32FLOAT_STENCIL8","DEPTH_CLIP_CONTROL","DX11","DX12","Depth16Unorm","Depth24Plus","Depth24PlusStencil8","Depth32Float","Depth32FloatStencil8","EacR11Snorm","EacR11Unorm","EacRg11Snorm","EacRg11Unorm","Etc2Rgb8A1Unorm","Etc2Rgb8A1UnormSrgb","Etc2Rgb8Unorm","Etc2Rgb8UnormSrgb","Etc2Rgba8Unorm","Etc2Rgba8UnormSrgb","Features","GL","Headed","Headless","HighPerformance","INDIRECT_FIRST_INSTANCE","Limits","LowPower","MAPPABLE_PRIMARY_BUFFERS","METAL","MULTIVIEW","MULTI_DRAW_INDIRECT","MULTI_DRAW_INDIRECT_COUNT","Msaa","None","PARTIALLY_BOUND_BINDING_ARRAY","PIPELINE_STATISTICS_QUERY","POLYGON_MODE_LINE","POLYGON_MODE_POINT","PRIMARY","PUSH_CONSTANTS","PowerPreference","R16Float","R16Sint","R16Snorm","R16Uint","R16Unorm","R32Float","R32Sint","R32Uint","R8Sint","R8Snorm","R8Uint","R8Unorm","RG11B10UFLOAT_RENDERABLE","RendererSettings","Rg11b10Float","Rg16Float","Rg16Sint","Rg16Snorm","Rg16Uint","Rg16Unorm","Rg32Float","Rg32Sint","Rg32Uint","Rg8Sint","Rg8Snorm","Rg8Uint","Rg8Unorm","Rgb10a2Unorm","Rgb9e5Ufloat","Rgba16Float","Rgba16Sint","Rgba16Snorm","Rgba16Uint","Rgba16Unorm","Rgba32Float","Rgba32Sint","Rgba32Uint","Rgba8Sint","Rgba8Snorm","Rgba8Uint","Rgba8Unorm","Rgba8UnormSrgb","SAMPLED_TEXTURE_AND_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING","SECONDARY","SHADER_EARLY_DEPTH_TEST","SHADER_F16","SHADER_F64","SHADER_I16","SHADER_PRIMITIVE_INDEX","SPIRV_SHADER_PASSTHROUGH","STORAGE_RESOURCE_BINDING_ARRAY","Stencil8","SurfaceType","TEXTURE_ADAPTER_SPECIFIC_FORMAT_FEATURES","TEXTURE_BINDING_ARRAY","TEXTURE_COMPRESSION_ASTC","TEXTURE_COMPRESSION_ASTC_HDR","TEXTURE_COMPRESSION_BC","TEXTURE_COMPRESSION_ETC2","TEXTURE_FORMAT_16BIT_NORM","TIMESTAMP_QUERY","TIMESTAMP_QUERY_INSIDE_PASSES","TextureFormat","UNIFORM_BUFFER_AND_STORAGE_TEXTURE_ARRAY_NON_UNIFORM_INDEXING","VERTEX_ATTRIBUTE_64BIT","VERTEX_WRITABLE_STORAGE","VULKAN","WgpuSettings","add_srgb_suffix","all","all","all_native_mask","all_webgpu_mask","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","aspect_specific_format","backends","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","block_dimensions","block_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_limits","check_limits_with_fail_fn","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","components","components_with_aspect","constrained_limits","contains","contains","contains_invalid_bits","contains_invalid_bits","default","default","default","default","default","default","depth_texture_format","device_label","difference","difference","disabled_features","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downlevel_defaults","downlevel_webgl2_defaults","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","empty","empty","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","features","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","guaranteed_format_features","has_color_aspect","has_depth_aspect","has_stencil_aspect","hash","hash","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","is_all","is_all","is_combined_depth_stencil_format","is_compressed","is_depth_stencil_component","is_depth_stencil_format","is_empty","is_empty","is_multisampling","is_srgb","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","iter","iter","iter_names","iter_names","limits","max_bind_groups","max_bindings_per_bind_group","max_buffer_size","max_compute_invocations_per_workgroup","max_compute_workgroup_size_x","max_compute_workgroup_size_y","max_compute_workgroup_size_z","max_compute_workgroup_storage_size","max_compute_workgroups_per_dimension","max_dynamic_storage_buffers_per_pipeline_layout","max_dynamic_uniform_buffers_per_pipeline_layout","max_inter_stage_shader_components","max_push_constant_size","max_sampled_textures_per_shader_stage","max_samplers_per_shader_stage","max_storage_buffer_binding_size","max_storage_buffers_per_shader_stage","max_storage_textures_per_shader_stage","max_texture_array_layers","max_texture_dimension_1d","max_texture_dimension_2d","max_texture_dimension_3d","max_uniform_buffer_binding_size","max_uniform_buffers_per_shader_stage","max_vertex_attributes","max_vertex_buffer_array_stride","max_vertex_buffers","min_storage_buffer_offset_alignment","min_uniform_buffer_offset_alignment","msaa","not","not","power_preference","present_mode","record_trace","remove","remove","remove_srgb_suffix","required_features","sample_type","samples","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","texture_format","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","using_alignment","using_resolution","block","channel","Mat4x4f32","RasterTileShader","Shader","ShaderCamera","ShaderFeatureStyle","ShaderGlobals","ShaderLayerMetadata","ShaderTextureVertex","ShaderTileMetadata","ShaderVertex","TileMaskShader","Vec2f32","Vec3f32","Vec4f32","VectorTileShader","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","camera","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","debug_lines","default","default","default","describe_fragment","describe_fragment","describe_fragment","describe_fragment","describe_vertex","describe_vertex","describe_vertex","describe_vertex","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw_colors","fmt","format","format","format","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","new","new","new","new","new","new","normal","position","position","tex_coords","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","view_position","view_proj","z_index","zoom_factor","cleanup_system","graph_runner_system","resource_system","sort_phase_system","tile_view_pattern_system","upload_system","cleanup_system","GraphRunnerSystem","as_any","as_any_mut","borrow","borrow_mut","default","downcast","from","into","into_any","into_any_arc","into_any_rc","is_within","name","run","try_from","try_into","type_id","upcast","ResourceSystem","as_any","as_any_mut","borrow","borrow_mut","default","downcast","from","into","into_any","into_any_arc","into_any_rc","is_within","name","run","try_from","try_into","type_id","upcast","sort_phase_system","tile_view_pattern_system","upload_system","Children","DEFAULT_TILE_SIZE","DEFAULT_TILE_VIEW_PATTERN_SIZE","HasTile","None","Parent","QueryHasTile","SourceEqTarget","SourceShapes","TileShape","TileViewPattern","ViewTile","ViewTileSources","WgpuTileViewPattern","add","add_resource_query","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_range","buffer_range","clear","clone","clone","clone","clone_into","clone_into","clone_into","coords","coords","coords","default","default","downcast","downcast","downcast","downcast","downcast","fmt","fmt","fmt","from","from","from","from","from","get_available_children","get_available_parent","has_tile","has_tile","has_tile","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_within","is_within","is_within","is_within","is_within","items","new","pattern","phantom_q","phantom_q","render","set_buffer_range","source","target","to_owned","to_owned","to_owned","transform","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","view_tiles","view_tiles_buffer","zoom_factor","BackingBuffer","CHILDREN_SEARCH_DEPTH","DEFAULT_TILE_VIEW_PATTERN_SIZE","TileViewPattern","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","buffer","downcast","downcast","fmt","from","from","generate_pattern","inner","inner_size","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_within","is_within","iter","new","new","phantom_q","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","update_pattern","upload_pattern","view_tiles","view_tiles_buffer","MAX_N_TILES","VIEW_REGION_PADDING","ViewState","as_any","as_any_mut","borrow","borrow_mut","camera","camera","camera_mut","camera_to_center_distance","clip_to_window","clip_to_window_transform","clip_to_window_vulkan","create_view_region","did_camera_change","did_zoom_change","downcast","edge_insets","edge_insets","from","furthest_distance","get_intersection_time","height","into","into_any","into_any_arc","into_any_rc","is_within","new","perspective","resize","set_edge_insets","try_from","try_into","type_id","upcast","update_references","update_zoom","view_projection","view_region_bounding_box","view_region_bounding_box_ndc","width","window_to_world","window_to_world_at_ground","window_to_world_nalgebra","zoom","zoom","BoxedStageLabel","MultiStage","NopStage","Schedule","Stage","StageLabel","add_stage","add_stage_after","add_stage_before","add_system_to_stage","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","default","downcast","downcast","downcast","downcast","downcast_mut","downcast_rc","downcast_ref","eq","from","from","from","get_stage","get_stage_mut","hash","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is","is_within","is_within","is_within","iter_stages","new","remove_stage","run","run","run","run","run_once","stage","stage_order","stages","stages","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","Aces2065","Aces2065","AcesCc","AcesCc","AcesCct","AcesCct","AcesCg","AcesCg","Alpha","Bt2020","Bt2020","Bt2100","Bt2100","CieLCh","CieLCh","CieLab","CieLab","CieXYZ","CieXYZ","CintTy","ColorInterop","ColorType","ComponentTy","DciP3","DciP3","DciXYZPrime","DciXYZPrime","DisplayP3","DisplayP3","EncodedBt2020","EncodedBt2020","EncodedBt2100HLG","EncodedBt2100HLG","EncodedBt2100PQ","EncodedBt2100PQ","EncodedDisplayP3","EncodedDisplayP3","EncodedRec709","EncodedRec709","EncodedSrgb","EncodedSrgb","GenericColor1","GenericColor1","GenericColor3","GenericColor3","Hsl","Hsl","Hsv","Hsv","ICtCpHLG","ICtCpHLG","ICtCpPQ","ICtCpPQ","LinearSrgb","LinearSrgb","Luma","Luma","Luminance","Luminance","NUM_COMPONENTS","Oklab","Oklab","Oklch","Oklch","PremultipliedAlpha","Rec709","Rec709","SPACE","Spaces","Style","YCbCr","YCbCr","YCxCz","YCxCz","YPbPr","YPbPr","YPrimeCbCr","YPrimeCbCr","YPrimePbPr","YPrimePbPr","Yuv","Yuv","a","a","alpha","alpha","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","b","b","b","b","b","b","b","b","b","b","b","b","b","b","b","b","b","b","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","c","cb","cb","center","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","color","color","cp","cp","cr","cr","ct","ct","cx","cz","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_cint","g","g","g","g","g","g","g","g","g","g","g","g","g","g","g","g","h","h","h","h","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","i","i","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_cint","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","l","l","l","l","l","l","l","layer","layers","metadata","name","num_components","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pb","pb","pitch","pr","pr","r","r","r","r","r","r","r","r","r","r","r","r","r","r","r","r","raster","s","s","source","sources","style","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","v","v","version","x","x","x","x","y","y","y","y","y","y","y","y","y","z","z","z","zoom","Background","BackgroundPaint","Fill","FillPaint","LayerPaint","Line","LinePaint","Raster","StyleLayer","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","background_color","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","fill_color","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_color","id","index","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_within","is_within","is_within","is_within","is_within","line_color","maxzoom","metadata","minzoom","paint","serialize","serialize","serialize","serialize","serialize","source","source_layer","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","Linear","Nearest","RasterLayer","RasterResampling","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize","downcast","downcast","fmt","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_within","is_within","raster_brightness_max","raster_brightness_min","raster_contrast","raster_fade_duration","raster_hue_rotate","raster_opacity","raster_resampling","raster_saturation","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","Raster","Source","TMS","TileAddressingScheme","TileJSONUrl","TileUrl","Vector","VectorSource","XYZ","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","attribution","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounds","clone","clone","clone","clone_into","clone_into","clone_into","default","deserialize","deserialize","deserialize","downcast","downcast","downcast","fmt","fmt","fmt","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_within","is_within","is_within","maxzoom","minzoom","scheme","serialize","serialize","serialize","tiles","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","Style","as_any","as_any_mut","borrow","borrow_mut","center","clone","clone_into","default","deserialize","downcast","fmt","from","into","into_any","into_any_arc","into_any_rc","is_within","layers","metadata","name","pitch","serialize","sources","to_owned","try_from","try_into","type_id","upcast","version","zoom","EphemeralQueryState","GlobalQueryState","QueryState","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone_to","clone_to","create","create","default","downcast","downcast","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_within","is_within","mutably_borrowed","resources","state","system","tiles","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","world","Item","MutItem","Resource","ResourceQuery","ResourceQueryMut","ResourceQueryUnsafe","Resources","State","State","as_any","as_any_mut","borrow","borrow_mut","default","downcast","downcast","downcast_mut","downcast_rc","downcast_ref","exists","from","get","get_mut","get_or_init_mut","impl_resource_query","index","init","insert","into","into_any","into_any_rc","is","is_within","query","query","query_mut","query_mut","query_unsafe","resources","try_from","try_into","type_id","upcast","BoxedSystem","IntoSystemContainer","System","SystemContainer","as_any","as_any_mut","borrow","borrow_mut","downcast","from","function","into","into_any","into_any_rc","into_container","into_container","is_within","name","new","run","stage","system","try_from","try_into","type_id","upcast","FunctionSystem","IntoSystem","System","as_any","as_any_mut","borrow","borrow_mut","downcast","from","func","into","into_any","into_any_arc","into_any_rc","into_system","is_within","name","run","try_from","try_into","type_id","upcast","SystemStage","add_system","as_any","as_any_mut","borrow","borrow_mut","default","downcast","from","into","into_any","into_any_rc","is_within","run","systems","try_from","try_into","type_id","upcast","with_system","ComponentQuery","ComponentQueryMut","ComponentQueryUnsafe","EphemeralQueryState","GlobalQueryState","Item","MutItem","QueryState","State","State","Tile","TileComponent","TileSpawnResult","Tiles","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone_into","clone_to","clone_to","components","coords","create","create","default","default","downcast","downcast","downcast","downcast","downcast","downcast","downcast_mut","downcast_rc","downcast_ref","exists","fmt","from","from","from","from","from","geometry_index","insert","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","is_within","is_within","is_within","is_within","is_within","mutably_borrowed","query","query","query_mut","query_mut","query_unsafe","spawn_mut","state","tile","tiles","tiles","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","World","as_any","as_any_mut","borrow","borrow_mut","default","downcast","from","into","into_any","into_any_rc","is_within","resources","tiles","try_from","try_into","type_id","upcast","Align","DEFAULT_TOLERANCE","IndexDataType","OverAlignedVertexBuffer","VertexConstructor","align_indices","align_vertices","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","buffer","clone","clone_into","downcast","downcast","empty","from","from","from","from_iters","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_within","is_within","new_vertex","new_vertex","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","usable_indices","zero_tessellator","GeoResult","ZeroTessellator","as_any","as_any_mut","borrow","borrow_mut","buffer","current_index","default","downcast","end","feature_end","feature_indices","from","into","into_any","into_any_rc","is_point","is_within","linestring_begin","linestring_end","multilinestring_begin","multilinestring_end","multipoint_begin","multipoint_end","multipolygon_begin","multipolygon_end","path_builder","path_open","point_begin","point_end","polygon_begin","polygon_end","tessellate_fill","tessellate_strokes","try_from","try_into","type_id","upcast","update_feature_indices","xy","Feature","GeomType","Layer","Linestring","Point","Polygon","Unknown","Value","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_str_name","bool_value","bool_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","default","default","default","default","double_value","double_value","downcast","downcast","downcast","downcast","dyn_eq","dyn_hash","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","equivalent","equivalent","equivalent","extent","extent","features","float_value","float_value","fmt","fmt","fmt","fmt","from","from","from","from","from","from_i32","from_str_name","geometry","hash","id","id","int_value","int_value","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_valid","is_within","is_within","is_within","is_within","keys","name","partial_cmp","process","process_geom","set_type","sint_value","sint_value","string_value","string_value","tags","to_geo","to_mvt","to_mvt_unscaled","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type","type","type_id","type_id","type_id","type_id","uint_value","uint_value","upcast","upcast","upcast","upcast","values","version","ChangeObserver","Epsilon","FPSMeter","SignificantlyDifferent","as_any","as_any_mut","borrow","borrow_mut","default","deref","deref_mut","did_change","downcast","fps_meter","frame_count","from","grid","inner","into","into_any","into_any_arc","into_any_rc","is_within","label","math","ne","new","next_report","reference_value","try_from","try_into","type_id","upcast","update_reference","FPSMeter","as_any","as_any_mut","borrow","borrow_mut","default","downcast","frame_count","from","into","into_any","into_any_arc","into_any_rc","is_within","new","next_report","try_from","try_into","type_id","upcast","update_and_print","google_mercator","tile_coordinates_bavaria","DynEq","DynHash","as_any","as_dyn_eq","dyn_eq","dyn_hash","Aabb2","Aabb3","FloatOrd","Plane","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds_from_points","clone","clone_into","cmp","d","div_away","div_ceil","div_floor","downcast","downcast","downcast","downcast","dyn_eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_point_normal","from_points","intersection_distance_ray","intersection_points_aabb3","intersection_polygon_aabb3","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_within","is_within","is_within","is_within","max","max","max","min","min","min","n","new","new","new","partial_cmp","to_corners","to_corners","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","Available","AvailableVectorLayerData","DefaultVectorTransferables","LayerIndexed","LayerIndexed","LayerMissing","LayerMissing","LayerTessellated","LayerTessellated","Missing","MissingVectorLayerData","ProcessVectorContext","ProcessVectorError","Processing","SendError","TileTessellated","TileTessellated","VectorBufferPool","VectorLayerData","VectorLayersDataComponent","VectorPipeline","VectorPlugin","VectorTileRequest","VectorTilesDone","VectorTransferables","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","build","build_from","build_from","build_from","build_from","context","coords","coords","coords","coords","coords","coords","coords","default","default","default","deref","done","downcast","downcast","downcast","downcast","downcast","downcast","downcast","feature_indices","from","from","from","from","from","from","from","has_tile","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_empty","is_within","is_within","is_within","is_within","is_within","is_within","is_within","layer_name","layers","layers","message_tag","message_tag","message_tag","message_tag","phantom_t","populate_world_system","process_vector","process_vector_tile","queue_system","render_commands","request_system","resource","resource_system","source_layer","source_layer","to_layer","to_layer","to_tile_index","transferables","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upload_system","PopulateWorldSystem","as_any","as_any_mut","borrow","borrow_mut","downcast","from","into","into_any","into_any_rc","is_within","kernel","name","new","phantom_t","run","try_from","try_into","type_id","upcast","ProcessVectorContext","ProcessVectorError","Processing","SendError","VectorTileRequest","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","context","coords","downcast","downcast","downcast","fmt","fmt","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_within","is_within","is_within","layer_indexing_finished","layer_missing","layer_tesselation_finished","layers","new","phantom_t","process_vector_tile","provide","take_context","tile_finished","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","queue_system","DrawVectorTile","DrawVectorTiles","SetVectorTilePipeline","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","downcast","downcast","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_within","is_within","render","render","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","RequestSystem","as_any","as_any_mut","borrow","borrow_mut","downcast","fetch_vector_apc","from","into","into_any","into_any_rc","is_within","kernel","name","new","phantom_t","run","try_from","try_into","type_id","upcast","buffer_pool","BackingBuffer","BackingBufferType","BufferPool","FEATURE_METADATA_SIZE","FeatureMetadata","INDICES_SIZE","IndexEntry","Indices","LAYER_METADATA_SIZE","Metadata","RingIndex","RingIndexEntry","VERTEX_SIZE","Vertices","align","allocate_layer_geometry","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","back","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_feature_metadata","buffer_indices","buffer_layer_metadata","buffer_vertices","clear","clear","clone","clone","clone_into","clone_into","coords","default","downcast","downcast","downcast","downcast","downcast","downcast","feature_metadata","feature_metadata","feature_metadata_buffer_range","find_largest_gap","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_device","front","get_layers","get_loaded_source_layers_at","has_tile","index","index","indices","indices","indices_buffer_range","indices_range","inner","inner_size","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_within","is_within","is_within","is_within","is_within","is_within","iter","layer_metadata","layer_metadata_buffer_range","layers","linear_index","make_room","metadata","new","new","new","phantom_fm","phantom_i","phantom_m","phantom_q","phantom_v","pop_front","push_back","style_layer","to_owned","to_owned","tree_index","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","typ","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","update_feature_metadata","update_layer_metadata","usable_indices","vertices","vertices","vertices_buffer_range","resource_system","DefaultLayerIndexed","DefaultLayerMissing","DefaultLayerTesselated","DefaultTileTessellated","DefaultVectorTransferables","LayerIndexed","LayerIndexed","LayerIndexed","LayerMissing","LayerMissing","LayerMissing","LayerTessellated","LayerTessellated","LayerTessellated","TileTessellated","TileTessellated","TileTessellated","VectorMessageTag","VectorTransferables","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","build_from","build_from","build_from","build_from","build_from","build_from","build_from","build_from","clone","clone","clone","clone_into","clone_into","clone_into","coords","coords","coords","coords","coords","coords","coords","coords","coords","coords","coords","coords","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","feature_indices","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","index","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_empty","is_empty","is_within","is_within","is_within","is_within","is_within","is_within","layer_data","layer_name","layer_name","layer_name","message_tag","message_tag","message_tag","message_tag","message_tag","message_tag","message_tag","message_tag","to_layer","to_layer","to_layer","to_layer","to_owned","to_owned","to_owned","to_tile_index","to_tile_index","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upload_system","upload_tesselated_layer","HeadedMapWindow","MapWindow","MapWindow","MapWindowConfig","RawWindow","WindowSize","as_any","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","create","downcast","dyn_eq","eq","equivalent","equivalent","equivalent","from","height","height","height_non_zero","id","into","into_any","into_any_arc","into_any_rc","is_within","new","raw","request_redraw","size","to_owned","try_from","try_into","type_id","upcast","width","width","width_non_zero"],"q":[[0,"maplibre"],[23,"maplibre::benchmarking"],[25,"maplibre::benchmarking::tessellation"],[31,"maplibre::benchmarking::tessellation::zero_tessellator"],[38,"maplibre::context"],[58,"maplibre::coords"],[386,"maplibre::debug"],[446,"maplibre::debug::cleanup_system"],[447,"maplibre::debug::debug_pass"],[467,"maplibre::debug::draw_graph"],[470,"maplibre::debug::draw_graph::node"],[472,"maplibre::debug::queue_system"],[473,"maplibre::debug::render_commands"],[508,"maplibre::debug::resource_system"],[509,"maplibre::environment"],[519,"maplibre::event_loop"],[550,"maplibre::io"],[562,"maplibre::io::apc"],[751,"maplibre::io::apc::Input"],[753,"maplibre::io::geometry_index"],[887,"maplibre::io::geometry_index::TileIndex"],[889,"maplibre::io::scheduler"],[929,"maplibre::io::source_client"],[998,"maplibre::io::source_type"],[1069,"maplibre::kernel"],[1120,"maplibre::map"],[1191,"maplibre::map::CurrentMapContext"],[1193,"maplibre::platform"],[1200,"maplibre::platform::http_client"],[1202,"maplibre::platform::noweb"],[1224,"maplibre::platform::noweb::http_client"],[1246,"maplibre::platform::noweb::scheduler"],[1265,"maplibre::platform::scheduler"],[1266,"maplibre::plugin"],[1268,"maplibre::raster"],[1382,"maplibre::raster::populate_world_system"],[1402,"maplibre::raster::process_raster"],[1460,"maplibre::raster::queue_system"],[1461,"maplibre::raster::render_commands"],[1513,"maplibre::raster::request_system"],[1534,"maplibre::raster::resource"],[1535,"maplibre::raster::resource::raster"],[1561,"maplibre::raster::resource_system"],[1562,"maplibre::raster::transferables"],[1673,"maplibre::raster::upload_system"],[1675,"maplibre::render"],[1820,"maplibre::render::builder"],[1904,"maplibre::render::camera"],[2061,"maplibre::render::draw_graph"],[2064,"maplibre::render::draw_graph::node"],[2065,"maplibre::render::error"],[2095,"maplibre::render::eventually"],[2122,"maplibre::render::graph"],[2239,"maplibre::render::graph::Edge"],[2245,"maplibre::render::graph::InputSlotError"],[2248,"maplibre::render::graph::OutputSlotError"],[2251,"maplibre::render::graph::RenderGraphError"],[2262,"maplibre::render::graph::RunSubGraphError"],[2270,"maplibre::render::graph::context"],[2404,"maplibre::render::graph::context::InputSlotError"],[2407,"maplibre::render::graph::context::OutputSlotError"],[2410,"maplibre::render::graph::context::RunSubGraphError"],[2418,"maplibre::render::graph::edge"],[2472,"maplibre::render::graph::edge::Edge"],[2478,"maplibre::render::graph::graph"],[2548,"maplibre::render::graph::node"],[2753,"maplibre::render::graph::node_slot"],[2892,"maplibre::render::graph_runner"],[2936,"maplibre::render::graph_runner::RenderGraphRunnerError"],[2946,"maplibre::render::main_graph"],[2948,"maplibre::render::main_graph::node"],[2950,"maplibre::render::main_pass"],[2987,"maplibre::render::render_commands"],[3022,"maplibre::render::render_phase"],[3101,"maplibre::render::render_phase::draw"],[3148,"maplibre::render::resource"],[3224,"maplibre::render::resource::TextureView"],[3226,"maplibre::render::resource::buffer"],[3245,"maplibre::render::resource::pipeline"],[3271,"maplibre::render::resource::shader"],[3346,"maplibre::render::resource::surface"],[3460,"maplibre::render::resource::texture"],[3504,"maplibre::render::resource::texture::TextureView"],[3506,"maplibre::render::resource::tile_pipeline"],[3534,"maplibre::render::resource::tracked_render_pass"],[3568,"maplibre::render::settings"],[4071,"maplibre::render::settings::TextureFormat"],[4073,"maplibre::render::shaders"],[4301,"maplibre::render::systems"],[4307,"maplibre::render::systems::cleanup_system"],[4308,"maplibre::render::systems::graph_runner_system"],[4327,"maplibre::render::systems::resource_system"],[4346,"maplibre::render::systems::sort_phase_system"],[4347,"maplibre::render::systems::tile_view_pattern_system"],[4348,"maplibre::render::systems::upload_system"],[4349,"maplibre::render::tile_view_pattern"],[4477,"maplibre::render::tile_view_pattern::pattern"],[4524,"maplibre::render::view_state"],[4572,"maplibre::schedule"],[4649,"maplibre::style"],[6526,"maplibre::style::layer"],[6653,"maplibre::style::raster"],[6708,"maplibre::style::source"],[6787,"maplibre::style::style"],[6818,"maplibre::tcs"],[6862,"maplibre::tcs::resources"],[6905,"maplibre::tcs::system"],[6931,"maplibre::tcs::system::function"],[6953,"maplibre::tcs::system::stage"],[6973,"maplibre::tcs::tiles"],[7092,"maplibre::tcs::world"],[7110,"maplibre::tessellation"],[7158,"maplibre::tessellation::zero_tessellator"],[7199,"maplibre::tile"],[7345,"maplibre::util"],[7379,"maplibre::util::fps_meter"],[7400,"maplibre::util::grid"],[7402,"maplibre::util::label"],[7408,"maplibre::util::math"],[7509,"maplibre::vector"],[7684,"maplibre::vector::populate_world_system"],[7704,"maplibre::vector::process_vector"],[7768,"maplibre::vector::queue_system"],[7769,"maplibre::vector::render_commands"],[7804,"maplibre::vector::request_system"],[7825,"maplibre::vector::resource"],[7826,"maplibre::vector::resource::buffer_pool"],[7996,"maplibre::vector::resource_system"],[7997,"maplibre::vector::transferables"],[8176,"maplibre::vector::upload_system"],[8178,"maplibre::window"]],"d":["Collection of utilities used to perform certain …","","Provides utilities related to coordinates.","","Macro to define a new label trait","","","Handles IO related processing as well as multithreading.","","","","Handles platform specific code. Depending on the …","","","This module implements the rendering algorithm of …","","Vector tile format styling.","","Tessellation for lines and polygons is implemented here.","Nested message and enum types in <code>Tile</code>.","Utils which are used internally","","Utilities for the window system.","Re-export of the io module.","Re-export of the tessellation module.","Vertex buffers index data type.","Vertex buffer which includes additional padding to fulfill …","Constructor for Fill and Stroke vertices.","","","Tessellator implementation.","Build tessellations with vectors.","","","","","","","Stores the context of the map.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","An aligned world tile coordinate aligns a world coordinate …","The average circumference of the world in meters.","Approximate radius of the earth in meters. Uses the WGS-84 …","","","","Within each tile there is a separate coordinate system. …","","","Represents the position of a node within a quad tree. The …","","Every tile has tile coordinates. These tile coordinates …","Defines a bounding box on a tiled map with a <code>ZoomLevel</code> and …","Actual coordinates within the 3D world. The <code>z</code> value of the …","Every tile has tile coordinates. Every tile coordinate can …","","<code>Zoom</code> is an exponential scale that defines the zoom of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adopted from tilebelt","The circumference at a line of latitude in meters.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Adopted from tilebelt","Get the tile which is one zoom level lower and contains …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the tile coords according to an addressing scheme. …","Transforms the tile coordinates as defined by the tile …","","","","","","","","","","","","","","","","","","","","The maximum amount of tiles this view region contains","","","","","","","","","","","","Padding around this view region","","","","","","","","","Returns unique stencil reference values for …","","","","","","","","","","","","","","","","","Adopted from Transform::calculatePosMatrix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adopted from Transform::coveringZoomLevel","","At which zoom level does this region exist","","","","","","","","","","","","","","","","","","","","","","","","","","Labels for the “draw” graph","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Queues PhaseItems for rendering.","Specifies the instructions which are going to be sent to …","Prepares GPU-owned resources by initializing them if they …","","","","","","","","","","","","","","","","Pass which renders debug information on top of the map.","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","The environment defines which types must be injected into …","","","","","","","","","The event loop was already closed","","","","","","","When sending events to an event loop errors can occur.","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Layers are described in section 4.1 of the specification","","Although this is an “optional” field it is required by …","The actual features in this tile.","Geometry index.","Dictionary encoding for keys","","Scheduling.","HTTP client.","","Dictionary encoding for values","Any compliant implementation must first read the version …","Type definitions for asynchronous procedure calls. These …","APCs define an interface for performing work …","","","","Allows sending messages from workers to back to the caller.","","","","","The <code>Input</code> is not compatible with the procedure","Inputs for an <code>AsyncProcedure</code>","","The result of the tessellation of a tile. This is sent as …","","Defines a set of strongly-typed labels for a class of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Call an <code>AsyncProcedure</code> using some <code>Input</code>. This function is …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to receive a message non-blocking.","","","Send a message back to the caller.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains either a polygon or line vector.","A quad tree storing the currently loaded tiles.","A processor able to create geometries using …","An indexed geometry contains an exact vector geometry, …","","","","","Index of tiles which can be of two types: spatial or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Begin of dataset processing.","End of dataset processing.","","","","","","","","","","","Begin of feature processing.","End of feature processing.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Begin of feature geometry processing.","End of feature geometry processing.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Begin of feature property processing.","End of feature property processing.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Async/await scheduler. Can schedule a task from a future …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","A closure that returns a HTTP client.","On the web platform futures are not thread-safe (i.e. not …","Gives access to the HTTP client which can be of multiple …","Defines the different types of HTTP clients such as basic …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a source from which the raster tile are fetched.","Represents the tiles’ different types of source.","","Represents a source from which the vector tile are fetched.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Holds references to core constructs of maplibre. Based on …","A convenient builder for Kernels.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","No need to set renderer again","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Resets the complete state of this map - a new renderer and …","","","","","","","","","","","","","","","","","","","","","Minimum WebGPU buffer size","","Http client for non-web targets.","Module which is used target platform is not web related.","","Scheduler for non-web targets.","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","cache_path: Under which path should we cache requests.","","","","","","Multi-threading with Tokio.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Multi-threading with Tokio.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Queues PhaseItems for rendering.","","Requests tiles which are currently in view","","Prepares GPU-owned resources by initializing them if they …","","","","","","","","","","","","","","","","","","","","","","","","","","Uploads data to the GPU which is needed for rendering.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Error during processing of the pipeline","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Holds the resources necessary for the raster tiles such as …","","","Creates a bind group for each fetched raster tile and …","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cleanup render resources here.","Extract data from the world.","","","Sort the <code>RenderPhases</code> here.","Prepare render resources from the extracted data for the …","Queues PhaseItems that depend on <code>Prepare</code> data and queue up …","Actual rendering happens here. In most cases, only the …","","","The labels of the default App rendering stages.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Main camera","","","","","","","","","","","","","Labels for the “draw” graph","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Executes a <code>RenderGraph</code>","","Initializes the renderer by retrieving and preparing the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","The main render pass for this application.","","","","","","Specifies the instructions which are going to be sent to …","","Describes the concept of a <code>RenderPhase</code> and <code>PhaseItem</code>","","Requests a device","","Utilities which holds references to GPU-owned. Usually a …","","Settings for the renderer","","","","","","","Rendering specific systems","Utility for generating a tile pattern which can be used …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Initializes the whole rendering pipeline for the given …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Utility method that computes the new apprent center or …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Wrapper around a resource which can be initialized or …","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","A GPU-accessible [<code>Buffer</code>].","A GPU-accessible [<code>Buffer</code>].","","An edge, which connects two <code>Nodes</code> in a <code>RenderGraph</code>.","","","","A collection of input and output <code>Edges</code> for a <code>Node</code>.","A <code>Node</code> without any inputs, outputs and subgraphs, which …","","A <code>Node</code> which acts as an entry point for a <code>RenderGraph</code> with …","","","","","","","","","","","","","","","","","","A render node that can be added to a <code>RenderGraph</code>.","An edge describing to ordering of both nodes (<code>output_node</code> …","A <code>Node</code> identifier. It automatically generates its own …","","A <code>NodeLabel</code> is used to reference a <code>NodeState</code> by either its …","","The internal representation of a <code>Node</code>, with all data …","","","The context with all information required to interact with …","The render graph configures the modular, parallel and …","The context with all graph information required to run a …","","A command that signals the graph runner to run the sub …","","","A texture [<code>Sampler</code>] defines how a pipeline will sample …","A texture [<code>Sampler</code>] defines how a pipeline will sample …","An edge describing to ordering of both nodes (<code>output_node</code> …","The internal representation of a slot, which specifies its …","A collection of input or output <code>SlotInfos</code> for a <code>NodeState</code>.","A <code>SlotLabel</code> is used to reference a slot by either its name …","Describes the render resources created (output) or used …","A value passed between render <code>Nodes</code>. Corresponds to the …","","A <code>TextureView</code> describes a texture used in a pipeline.","A <code>TextureView</code> describes a texture used in a pipeline.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Runs the graph node logic, issues draw calls, updates the …","","","","","","","","","The name of the type that implements <code>Node</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The context with all graph information required to run a …","A command that signals the graph runner to run the sub …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finishes the context for this <code>Node</code> by returning the sub …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retrieves the input slot value referenced by the <code>label</code>.","Retrieves the input slot value referenced by the <code>label</code> as …","Retrieves the input slot value referenced by the <code>label</code> as …","Retrieves the input slot value referenced by the <code>label</code> as …","","Returns the <code>SlotInfos</code> of the inputs.","Returns the input slot values for the node.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Creates a new render graph context for the <code>node</code>.","","Returns the <code>SlotInfos</code> of the outputs.","","","","","Queues up a sub graph for execution after the node has …","","Sets the output slot value referenced by the <code>label</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An edge, which connects two <code>Nodes</code> in a <code>RenderGraph</code>.","","","An edge describing to ordering of both nodes (<code>output_node</code> …","An edge describing to ordering of both nodes (<code>output_node</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the id of the <code>input_node</code>.","Returns the id of the <code>output_node</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","A <code>Node</code> which acts as an entry point for a <code>RenderGraph</code> with …","The name of the <code>GraphInputNode</code> of this graph. Used to …","The render graph configures the modular, parallel and …","Adds the <code>node</code> with the <code>name</code> to the graph. If the name is …","Adds the <code>Edge::NodeEdge</code> to the graph. This guarantees that …","Adds the <code>Edge::SlotEdge</code> to the graph. This guarantees that …","Adds the <code>sub_graph</code> with the <code>name</code> to the graph. If the name …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Retrieves the <code>Node</code> referenced by the <code>label</code>.","Retrieves the <code>NodeId</code> referenced by the <code>label</code>.","Retrieves the <code>Node</code> referenced by the <code>label</code> mutably.","Retrieves the <code>NodeState</code> referenced by the <code>label</code>.","Retrieves the <code>NodeState</code> referenced by the <code>label</code> mutably.","Retrieves the sub graph corresponding to the <code>name</code>.","Retrieves the sub graph corresponding to the <code>name</code> mutably.","Checks whether the <code>edge</code> already exists in the graph.","","Returns the <code>NodeState</code> of the input node of this graph..","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns an iterator over a tuple of the input edges and …","Returns an iterator over a tuple of the output edges and …","Returns an iterator over the <code>NodeStates</code>.","Returns an iterator over the <code>NodeStates</code>, that allows …","Returns an iterator over the sub graphs.","Returns an iterator over the sub graphs, that allows …","","","","Removes the <code>node</code> with the <code>name</code> from the graph. If the name …","Removes the <code>Edge::NodeEdge</code> from the graph. If either node …","Removes the <code>Edge::SlotEdge</code> from the graph. If any nodes or …","Removes the <code>sub_graph</code> with the <code>name</code> from the graph. If the …","","Creates an <code>GraphInputNode</code> with the specified slots if not …","","","","","","","","","","Updates all nodes and sub graphs of the render graph. …","Verifies that the edge existence is as expected and checks …","A collection of input and output <code>Edges</code> for a <code>Node</code>.","A <code>Node</code> without any inputs, outputs and subgraphs, which …","","","","A render node that can be added to a <code>RenderGraph</code>.","A <code>Node</code> identifier. It automatically generates its own …","A <code>NodeLabel</code> is used to reference a <code>NodeState</code> by either its …","","The internal representation of a <code>Node</code>, with all data …","","The context with all information required to interact with …","","Adds an edge to the <code>input_edges</code> if it does not already …","Adds an edge to the <code>output_edges</code> if it does not already …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a boxed object from a boxed trait object if the …","","","","","","","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Searches the <code>input_edges</code> for a <code>Edge::SlotEdge</code>, which …","Searches the <code>output_edges</code> for a <code>Edge::SlotEdge</code>, which …","Checks whether the input edge already exists.","Checks whether the output edge already exists.","","Returns this node’s id.","","","Specifies the required input slots for this node. They …","Specifies the required input slots for this node. They …","Returns all “input edges” (edges going “in”) for …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","","","","","","","","","Creates an <code>NodeState</code> without edges, but the <code>input_slots</code> …","","Retrieves the <code>Node</code>.","","Retrieves the <code>Node</code> mutably.","Specifies the produced output slots for this node. They …","Specifies the produced output slots for this node. They …","Returns all “output edges” (edges going “out”) for …","","","","","Removes an edge from the <code>input_edges</code> if it exists.","Removes an edge from the <code>output_edges</code> if it exists.","Runs the graph node logic, issues draw calls, updates the …","","","","","","","","","","","","","","","","","","","","","","","","","","","The name of the type that implements <code>Node</code>.","","","","","","","","Updates internal node state using the current …","Updates internal node state using the current …","Validates that each input slot corresponds to an input …","Validates that each output slot corresponds to an output …","A GPU-accessible [<code>Buffer</code>].","A GPU-accessible [<code>Buffer</code>].","","","A texture [<code>Sampler</code>] defines how a pipeline will sample …","A texture [<code>Sampler</code>] defines how a pipeline will sample …","The internal representation of a slot, which specifies its …","A collection of input or output <code>SlotInfos</code> for a <code>NodeState</code>.","A <code>SlotLabel</code> is used to reference a slot by either its name …","Describes the render resources created (output) or used …","A value passed between render <code>Nodes</code>. Corresponds to the …","A <code>TextureView</code> describes a texture used in a pipeline.","A <code>TextureView</code> describes a texture used in a pipeline.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Retrieves the <code>SlotInfo</code> for the provided label.","Retrieves the index (inside input or output slots) of the …","Retrieves the <code>SlotInfo</code> for the provided label mutably.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns true if there are no slots.","","","","","","Returns an iterator over the slot infos.","Returns the count of slots.","","","Returns the <code>SlotType</code> of this value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","A draw function which is used to draw a specific <code>PhaseItem</code>.","","","","An item which will be drawn to the screen. A phase item …","<code>RenderCommand</code> is a trait that runs an ECS query and …","","A resource to collect and sort draw requests for specific …","The type used for ordering the items. The smallest values …","","","Adds a <code>PhaseItem</code> to this render phase.","","","","","","","","","","","","","","","","","","","Draws the <code>PhaseItem</code> by issuing draw calls via the …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Renders the <code>PhaseItem</code> by issuing draw calls via the …","","Sorts all of its <code>PhaseItems</code>.","Determines the order in which the items are drawn during …","","","","","","","","","","","","","","","","","","","A draw function which is used to draw a specific <code>PhaseItem</code>.","","","An item which will be drawn to the screen. A phase item …","<code>RenderCommand</code> is a trait that runs an ECS query and …","","The type used for ordering the items. The smallest values …","","","","","","","","","","","","Draws the <code>PhaseItem</code> by issuing draw calls via the …","Prepares data for the wrapped <code>RenderCommand</code> and then …","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Renders the <code>PhaseItem</code> by issuing draw calls via the …","","Determines the order in which the items are drawn during …","","","","","","","","","","","","Describes the fragment process in a render pipeline.","","","","","","","","The value is a wgpu <code>SurfaceTexture</code>, but dereferences to a …","","Describes a <code>TextureView</code>.","The value is an actual wgpu <code>TextureView</code>.","","A [<code>RenderPass</code>], which tracks the current pipeline state to …","Describes how the vertex buffer is interpreted.","","","The stride, in bytes, between elements of this buffer.","The list of attributes which comprise a single vertex.","","The buffer which is used","","The format of any vertex buffers used with this pipeline.","Force a write and ignore stencil","The effect of draw calls on the depth and stencil aspects …","Is the depth stencil used?","","The name of the entry point in the compiled shader. There …","The name of the entry point in the compiled shader. There …","The compiled fragment stage, its entry point, and the …","","","","The size of buffer","Debug label of the pipeline. This will show up in graphics …","The layout of bind groups for this pipeline.","","The multi-sampling properties of the pipeline.","","","","","Utility for creating RenderPipelines","","The properties of the pipeline at the primitive assembly …","","","Utilities for creating shader states.","","","","The shader source","The shader source","How often this vertex buffer is “stepped” forward.","Utilities for handling surfaces which can be either …","","The color state of the render targets.","Utility for a texture view which can either be created by …","","","","","","Utility for declaring pipelines.","A render pass which allows tracking, for example using a …","","This pipeline updates the stenctil","The compiled vertex stage, its entry point, and the input …","","","","","","","","","","","","","The buffer which is used","","Returns the argument unchanged.","The size of buffer","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","The effect of draw calls on the depth and stencil aspects …","","","The compiled fragment stage, its entry point, and the …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Debug label of the pipeline. This will show up in graphics …","The layout of bind groups for this pipeline.","The multi-sampling properties of the pipeline.","The properties of the pipeline at the primitive assembly …","","","","","The compiled vertex stage, its entry point, and the input …","Describes the fragment process in a render pipeline.","Describes how the vertex buffer is interpreted.","","The stride, in bytes, between elements of this buffer.","","","","","","","","The list of attributes which comprise a single vertex.","","","","","","","The format of any vertex buffers used with this pipeline.","","","","","","","","","","","The name of the entry point in the compiled shader. There …","The name of the entry point in the compiled shader. There …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The shader source","The shader source","How often this vertex buffer is “stepped” forward.","The color state of the render targets.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The value is a wgpu <code>SurfaceTexture</code>, but dereferences to a …","","Describes a <code>TextureView</code>.","The value is an actual wgpu <code>TextureView</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the <code>SurfaceTexture</code> of the texture view if it is of …","","","","","","","","","","","","","","","","","","Force a write and ignore stencil","Is the depth stencil used?","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","This pipeline updates the stenctil","","","A [<code>RenderPass</code>], which tracks the current pipeline state to …","","","","","","Draws primitives from the active vertex buffer(s).","Draws indexed primitives using the active index buffer and …","Draws indexed primitives using the active index buffer and …","Draws primitives from the active vertex buffer(s) based on …","Returns the argument unchanged.","Insert a single debug marker.","Calls <code>U::from(self)</code>.","","","","","Tracks the supplied render pass.","","End the current debug group.","Start a new debug group.","Sets the active [<code>BindGroup</code>] for a given bind group index. …","","Sets the active index buffer.","Set push constant data.","Sets the active [<code>RenderPipeline</code>].","Sets the scissor region.","Sets the stencil reference.","Assign a vertex buffer to a slot.","Set the rendering viewport.","","","","","Allows the use of <code>AddressMode::ClampToBorder</code> with a border …","Allows the use of <code>AddressMode::ClampToBorder</code> with a border …","block compressed texture. 16 bytes per block.","Supported when targeting the web through webassembly","Allows the user to create arrays of buffers in shaders:","Represents the backends that wgpu will use.","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Blue, green, red, and alpha channels. 8 bit integer per …","Blue, green, red, and alpha channels. 8 bit integer per …","Enables clear to zero for textures.","Allows the user to set a …","Allows for explicit creation of textures of format …","By default, polygon depth is clipped to 0-1 range …","Supported on Windows 7+","Supported on Windows 10","Special depth format with 16 bit integer depth.","Special depth format with at least 24 bit integer depth.","Special depth/stencil format with at least 24 bit integer …","Special depth format with 32 bit floating point depth.","Special depth/stencil format with 32 bit floating point …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Features that are not guaranteed to be supported.","Supported on Linux/Android, the web through webassembly …","","","Adapter that has the highest performance. This is often a …","Allows non-zero value for the “first instance” in …","Represents the sets of limits an adapter/device supports.","Adapter that uses the least possible power. This is often …","Webgpu only allows the MAP_READ and MAP_WRITE buffer usage …","Supported on macOS/iOS","Enables multiview render passes and <code>builtin(view_index)</code> in …","Allows the user to call <code>RenderPass::multi_draw_indirect</code> …","Allows the user to call …","Configuration resource for Multi-Sample Anti-Aliasing.","Power usage is not considered when choosing an adapter.","Allows the user to create bind groups continaing arrays …","Enables use of Pipeline Statistics Queries. These queries …","Allows the user to set <code>PolygonMode::Line</code> in …","Allows the user to set <code>PolygonMode::Point</code> in …","All the apis that wgpu offers first tier of support for.","Allows the use of push constants: small, fast bits of …","Power Preference when choosing a physical adapter.","Red channel only. 16 bit float per channel. Float in …","Red channel only. 16 bit integer per channel. Signed in …","Red channel only. 16 bit integer per channel. [0, 65535] …","Red channel only. 16 bit integer per channel. Unsigned in …","Red channel only. 16 bit integer per channel. [0, 65535] …","Red channel only. 32 bit float per channel. Float in …","Red channel only. 32 bit integer per channel. Signed in …","Red channel only. 32 bit integer per channel. Unsigned in …","Red channel only. 8 bit integer per channel. Signed in …","Red channel only. 8 bit integer per channel. [-127, 127] …","Red channel only. 8 bit integer per channel. Unsigned in …","Red channel only. 8 bit integer per channel. [0, 255] …","Allows for usage of textures of format …","","Red, green, and blue channels. 11 bit float with no sign …","Red and green channels. 16 bit float per channel. Float in …","Red and green channels. 16 bit integer per channel. Signed …","Red and green channels. 16 bit integer per channel. [0, …","Red and green channels. 16 bit integer per channel. …","Red and green channels. 16 bit integer per channel. [0, …","Red and green channels. 32 bit float per channel. Float in …","Red and green channels. 32 bit integer per channel. Signed …","Red and green channels. 32 bit integer per channel. …","Red and green channels. 8 bit integer per channel. Signed …","Red and green channels. 8 bit integer per channel. [-127, …","Red and green channels. 8 bit integer per channel. …","Red and green channels. 8 bit integer per channel. [0, 255]…","Red, green, blue, and alpha channels. 10 bit integer for …","Packed unsigned float with 9 bits mantisa for each RGB …","Red, green, blue, and alpha channels. 16 bit float per …","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha. 16 bit integer per channel. […","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha channels. 32 bit float per …","Red, green, blue, and alpha channels. 32 bit integer per …","Red, green, blue, and alpha channels. 32 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Allows shaders to index sampled texture and storage buffer …","All the apis that wgpu offers second tier of support for. …","Allows shaders to use the <code>early_depth_test</code> attribute.","Allows shaders to acquire the FP16 ability","Enables 64-bit floating point types in SPIR-V shaders.","Allows shaders to use i16. Not currently supported in <code>naga</code>…","Enables <code>builtin(primitive_index)</code> in fragment shaders.","Enables creating shader modules from SPIR-V binary data …","Allows the user to create uniform arrays of storage …","Stencil format with 8 bit integer stencil.","","Enables device specific texture format features.","Allows the user to create uniform arrays of textures in …","Enables ASTC family of compressed textures. ASTC textures …","Enables ASTC HDR family of compressed textures.","Enables BCn family of compressed textures. All BCn …","Enables ETC family of compressed textures. All ETC …","Enables normalized <code>16-bit</code> texture formats.","Enables use of Timestamp Queries. These queries tell the …","Allows for timestamp queries inside render passes.","Underlying texture data format.","Allows shaders to index uniform buffer and storage texture …","Enables using 64-bit types for vertex attributes.","Enables bindings of writable storage buffers and textures …","Supported on Windows, Linux/Android, and macOS/iOS via …","Provides configuration for renderer initialization. Use …","Adds an <code>Srgb</code> suffix to the given texture format, if the …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Mask of all features that are only available when …","Mask of all features which are part of the upstream WebGPU …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the aspect-specific format of the original format","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns the dimension of a block of texels.","Returns the texel block size of this format.","","","","","","","","","","","","","","","","","","","Compares every limits within self is within the limits …","Compares every limits within self is within the limits …","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Returns the number of components this format has.","Returns the number of components this format has taking …","The constraints on limits allowed regardless of what the …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The features to ensure are disabled regardless of what the …","","","","","","","","","","These default limits are guaranteed to be compatible with …","These default limits are guaranteed to be compatible with …","","","","","","","","","","","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The features to ensure are enabled regardless of what the …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Returns the format features guaranteed by the WebGPU spec.","Returns <code>true</code> if the format has a color aspect","Returns <code>true</code> if the format has a depth aspect","Returns <code>true</code> if the format has a stencil aspect","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Returns <code>true</code> if the format is a combined depth-stencil …","Returns <code>true</code> for compressed formats.","Returns <code>true</code> if <code>self</code> is a depth or stencil component of …","Returns <code>true</code> if the format is a depth and/or stencil format","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","","Returns <code>true</code> for srgb formats.","","","","","","","","","","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The imposed limits.","Amount of bind groups that can be attached to a pipeline …","Maximum binding index allowed in <code>create_bind_group_layout</code>. …","A limit above which buffer allocations are guaranteed to …","Maximum value of the product of the <code>workgroup_size</code> …","The maximum value of the workgroup_size X dimension for a …","The maximum value of the workgroup_size Y dimension for a …","The maximum value of the workgroup_size Z dimension for a …","Maximum number of bytes used for workgroup memory in a …","The maximum value for each dimension of a …","Amount of storage buffer bindings that can be dynamic in a …","Amount of uniform buffer bindings that can be dynamic in a …","Maximum allowed number of components (scalars) of input or …","Amount of storage available for push constants in bytes. …","Amount of sampled textures visible in a single shader …","Amount of samplers visible in a single shader stage. …","Maximum size in bytes of a binding to a storage buffer. …","Amount of storage buffers visible in a single shader …","Amount of storage textures visible in a single shader …","Maximum allowed value for the <code>size.depth_or_array_layers</code> …","Maximum allowed value for the <code>size.width</code> of a texture …","Maximum allowed value for the <code>size.width</code> and <code>size.height</code> …","Maximum allowed value for the <code>size.width</code>, <code>size.height</code>, and …","Maximum size in bytes of a binding to a uniform buffer. …","Amount of uniform buffers visible in a single shader …","Maximum length of <code>VertexBufferLayout::attributes</code>, summed …","Maximum value for <code>VertexBufferLayout::array_stride</code> when …","Maximum length of <code>VertexState::buffers</code> when creating a …","Required <code>BufferBindingType::Storage</code> alignment for …","Required <code>BufferBindingType::Uniform</code> alignment for …","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Present mode for surfaces if a surface is used.","Whether a trace is recorded an stored in the current …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Strips the <code>Srgb</code> suffix from the given texture format.","Returns the required features (if any) in order to use the …","Returns the sample type compatible with this format and …","The number of samples to run for Multi-Sample …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Explicitly set a texture format or let the renderer …","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","Modify the current limits to use the buffer alignment …","Modify the current limits to use the resolution limits of …","compressed block dimensions","ASTC RGBA channel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Executes the [<code>RenderGraph</code>] current render graph.","Prepares GPU-owned resources by initializing them if they …","","Extracts data from the current state.","Uploads data to the GPU which is needed for rendering.","","Updates the [<code>RenderGraph</code>] with all of its nodes and then …","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","This system sorts all <code>RenderPhases</code> for the [<code>PhaseItem</code>] …","","","Children are the source. We construct the <code>target</code> from …","If not otherwise specified, raster tiles usually are 512.0 …","","","No data available so nothing to render","Parent tile is the source. We construct the <code>target</code> from …","","Source and target are equal, so no need to differentiate. …","This defines the source tile shaped from which the content …","Defines the exact location where a specific tile on the …","The tile mask pattern assigns each tile a value which can …","Defines the <code>target</code> tile and its <code>source</code> from which data …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The tile mask pattern assigns each tile a value which can …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","The internal structure which is used for storage","The size of the <code>inner</code> buffer","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Transforms coordinates in clip space to window coordinates.","A transform which can be used to transform between clip …","Alternative implementation to <code>clip_to_window</code>. Transforms …","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","This function matches how maplibre-gl-js implements …","Calculates an <code>Aabb2</code> bounding box which contains at least …","An alternative implementation for <code>view_bounding_box</code>.","","Order of transformations reversed: …","Gets the world coordinates for the specified <code>window</code> …","Alternative implementation to <code>window_to_world</code>","","","","","","A container of <code>Stage</code>s set to be run in a linear order.","","Defines a set of strongly-typed labels for a class of …","Adds the given <code>stage</code> at the last position of the schedule.","Adds the given <code>stage</code> immediately after the <code>target</code> stage.","Adds the given <code>stage</code> immediately before the <code>target</code> stage.","Adds a system to the <code>Stage</code> identified by <code>stage_label</code>.","","","","","","","","","","","","","","","","","Returns a boxed object from a boxed trait object if the …","","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a shared reference to the stage identified by <code>label</code>…","Returns a unique, mutable reference to the stage …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns true if the trait object wraps an object of type …","","","","Iterates over all of schedule’s stages and their labels, …","","","Runs the stage; this happens once per update. Implementors …","","","","Executes each <code>Stage</code> contained in the schedule, one at a …","Fetches the <code>Stage</code> of type <code>T</code> marked with <code>label</code>, then …","","","","","","","","","","","","","","","","A color in the ACES 2065-1 color space.","A color in the ACES 2065-1 color space.","A color in the ACEScc color space.","A color in the ACEScc color space.","A color in the ACEScct color space.","A color in the ACEScct color space.","A color in the ACEScg color space.","A color in the ACEScg color space.","A color with an alpha component.","A color in the BT.2020 color space.","A color in the BT.2020 color space.","A color in the BT.2100 color space.","A color in the BT.2100 color space.","A color in the CIE L*C*h° color space.","A color in the CIE L*C*h° color space.","A color in the CIE L*a*b* color space.","A color in the CIE L*a*b* color space.","A color in the CIE XYZ color space.","A color in the CIE XYZ color space.","","A trait that should be implemented by provider crates on …","A trait used to simpify the interface of the <code>Alpha</code> and …","","A color in the DCI-P3 (aka P3 DCI and P3 D60) color space.","A color in the DCI-P3 (aka P3 DCI and P3 D60) color space.","A color in the X’Y’Z’ color space, a DCI …","A color in the X’Y’Z’ color space, a DCI …","A color in the Display P3 (aka P3 D65) color space.","A color in the Display P3 (aka P3 D65) color space.","A color in the encoded BT.2020 color space.","A color in the encoded BT.2020 color space.","A color in the encoded BT.2100 color space with HLG …","A color in the encoded BT.2100 color space with HLG …","A color in the encoded BT.2100 color space with PQ …","A color in the encoded BT.2100 color space with PQ …","A color in the Display P3 (aka P3 D65) color space.","A color in the Display P3 (aka P3 D65) color space.","A color in the encoded Rec.709/BT.709 color space.","A color in the encoded Rec.709/BT.709 color space.","A color in the encoded sRGB color space.","A color in the encoded sRGB color space.","A color in a generic color space that can be represented …","A color in a generic color space that can be represented …","A color in a generic color space that can be represented …","A color in a generic color space that can be represented …","A color in the HSL color space.","A color in the HSL color space.","A color in the HSV color space.","A color in the HSV color space.","A color in the ICtCp color space with HLG (Hybrid …","A color in the ICtCp color space with HLG (Hybrid …","A color in the ICtCp color space with PQ (Perceptual …","A color in the ICtCp color space with PQ (Perceptual …","A color in the linear (decoded) sRGB color space.","A color in the linear (decoded) sRGB color space.","A single-channel CIE luma (non-linear transform from …","A single-channel CIE luma (non-linear transform from …","A single-channel CIE luminance.","A single-channel CIE luminance.","","A color in the Oklab color space.","A color in the Oklab color space.","A color in the Oklch color space (a transformation from …","A color in the Oklch color space (a transformation from …","A premultiplied color with an alpha component.","A color in the Rec.709/BT.709 color space.","A color in the Rec.709/BT.709 color space.","","An enum with a variant for each of the color spaces …","Stores the style for a multi-layered map.","A color in the YCbCr color space. See discussion of the …","A color in the YCbCr color space. See discussion of the …","A color in the YCxCz (also called YyCxCz) color space, …","A color in the YCxCz (also called YyCxCz) color space, …","A color in the YPbPr color space. See discussion of the …","A color in the YPbPr color space. See discussion of the …","A color in the Y’CbCr color space. See discussion of the …","A color in the Y’CbCr color space. See discussion of the …","A color in the Y’PbPr color space. See discussion of the …","A color in the Y’PbPr color space. See discussion of the …","A color in the YUV color space. See discussion of the …","A color in the YUV color space. See discussion of the …","The a component, representing green-red chroma difference.","The a component, representing green-red chroma difference.","The alpha component.","The alpha componenthe blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The blue component.","The b component, representing blue-yellow chroma …","The b component, representing blue-yellow chroma …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The C (chroma) component. Varies from 0 to a hue dependent …","The C (chroma) component. Varies from 0 to a hue dependent …","The Cb (chroma-blue/yellow) component.","The Cb (chroma-blue/yellow) component.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The contained color, which is completely separate from the …","The contained color, which has been premultiplied with …","The Cp (chroma-protan) component.","The Cp (chroma-protan) component.","The Cr (chroma-red/green) component.","The Cr (chroma-red/green) component.","The Ct (chroma-tritan) component.","The Ct (chroma-tritan) component.","The Cx (chroma difference blue/yellow) component","The Cz (chroma difference red/green) componenteturns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","Convert <code>self</code> into its canonical <code>cint</code> type.","The green component.","The green component.","The green component.","The green component.","The green component.","The green component.","The green component.","The green component.","The green component.","The green component.","The green component.","The green component.","The green component.","The green component.","The green component.","The green component.","The h (hue) component. Varies from -PI to PI.","The h (hue) component. Varies from -PI to PI.","The H (hue) component. Varies from 0 to 1.","The H (hue) component. Varies from 0 to 1.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The I (intensity) component.","The I (intensity) component.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a <code>Self</code> from its canonical <code>cint</code> type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","CIE luminance.","CIE luminance.","The L (lightness) component. Varies from 0 to 100.","The L (lightness) component. Varies from 0 to 100.","The L (lightness) component. Varies from 0 to 1","The L (lightness) component. Varies from 0 to 1.","The L (lightness) component. Varies from 0 to 1.","Vector tile layer drawing utilities.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Pb (chroma-blue/yellow) component.","The Pb (chroma-blue/yellow) component.","","The Pr (chroma-red/green) component.","The Pr (chroma-red/green) component.","The red component.","The red component.","The red component.","The red component.","The red component.","The red component.","The red component.","The red component.","The red component.","The red component.","The red component.","The red component.","The red component.","The red component.","The red component.","The red component.","Raster tile layer description","The S (saturation) component. Varies from 0 to 1.","The S (saturation) component. Varies from 0 to 1.","Vector tile data utilities.","","Default vector tile styles configuration.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The U (chroma-blue/yellow) component.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The V (value) component. Varies from 0 to 1.","The V (chroma-red/green) component.","","The first component.","The first component.","The X’ component.","The X component.","The second component.","The Y’ component.","The Y component.","The Y (luminance) component.","The Y’ (luma) component.","The Y (luminance) component.","The Y’ (luma) component.","The Y (luminance) component.","The Yy (luminance) component.","The third component.","The Z’ component.","The Z component.","","","","","","The different types of paints.","","","","Stores all the styles for a specific layer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tiles can be positioned using either the xyz coordinates …","String url to a JSON tile.","String url to a tile.","","Source properties for tiles or rasters.","","","","","","","","String which contains attribution information for the used …","","","","","","","The bounds in which tiles are available.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Max zoom level at which tiles are available.","Min zoom level at which tiles are available.","","","","","Array of URLs which can contain place holders like {x}, …","","","","","","","","","","","","","","","","Stores the style for a multi-layered map.","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a boxed object from a boxed trait object if the …","","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","Returns true if the trait object wraps an object of type …","","","","","","","","","","","","A convenience type alias for a boxed <code>System</code> trait object.","","An system that can be added to a <code>Schedule</code>","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Returns the system’s name.","","","","","","","","","","Conversion trait to turn something into a <code>System</code>.","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Turns this value into its corresponding <code>System</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","A component is data associated with an <code>Entity</code>. Each entity …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a boxed object from a boxed trait object if the …","","","","","","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Vertex buffers index data type.","Vertex buffer which includes additional padding to fulfill …","Constructor for Fill and Stroke vertices.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Tessellator implementation.","","Build tessellations with vectors.","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Features are described in section 4.2 of the specification","GeomType is described in section 4.3.4 of the specification","Layers are described in section 4.1 of the specification","","","","","Variant type encoding The use of values is described in …","","","","","","","","","","","String value of the enum field names used in the ProtoBuf …","Returns the value of <code>bool_value</code>, or the default value if …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>double_value</code>, or the default value if …","","","","","","","","","","","","","","","","","","Returns the value of <code>extent</code>, or the default value if <code>extent</code>…","Although this is an “optional” field it is required by …","The actual features in this tile.","Returns the value of <code>float_value</code>, or the default value if …","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>GeomType</code>, or <code>None</code> if <code>value</code> is not a …","Creates an enum from field names used in the ProtoBuf …","Contains a stream of commands and parameters (vertices). A …","","Returns the value of <code>id</code>, or the default value if <code>id</code> is …","","Returns the value of <code>int_value</code>, or the default value if …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>GeomType</code>.","","","","","Dictionary encoding for keys","","","","","Sets <code>type</code> to the provided enum value.","Returns the value of <code>sint_value</code>, or the default value if …","","Returns the value of <code>string_value</code>, or the default value if …","Exactly one of these values must be present in a valid …","Tags of this feature are encoded as repeated pairs of …","","","","","","","","","","","","","","","","Returns the enum value of <code>type</code>, or the default if the …","The type of geometry stored in this feature.","","","","","Returns the value of <code>uint_value</code>, or the default value if …","","","","","","Dictionary encoding for values","Any compliant implementation must first read the version …","","","Measures the frames per second.","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Traits used by label implementations","","This method tests for <code>self</code> and <code>other</code> values to be …","","","","","","","","","Measures the frames per second.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns coordinates for tiles within bavaria according to …","","","","","","","A two-dimensional AABB, aka a rectangle.","A three-dimensional AABB, aka a rectangular prism.","A wrapper type that enables ordering floats. This is a …","A 3-dimensional plane formed from the equation: …","","","","","","","","","","","","","","","","","","","","","","Plane distance value","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a plane from a point and a normal vector. The …","Constructs a plane that passes through the the three …","","Returns unsorted intersection points with an Aabb3 Adopted …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Maximum point of the AABB","Maximum point of the AABB","","Minimum point of the AABB","Minimum point of the AABB","Plane normal","Construct a plane from a normal vector and a scalar …","Construct a new axis-aligned bounding box from two points.","Construct a new axis-aligned bounding box from two points.","","Compute corners.","Compute corners.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error during processing of the pipeline","Sending of results failed","","","","","","","","A request for a tile at the given coordinates and in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Holds for each feature the count of indices.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Queues PhaseItems for rendering.","Specifies the instructions which are going to be sent to …","Requests tiles which are currently in view","","Prepares GPU-owned resources by initializing them if they …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Uploads data to the GPU which is needed for rendering.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Error during processing of the pipeline","Sending of results failed","A request for a tile at the given coordinates and in the …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","A ring-buffer like pool of buffers.","","","This is inspired by the memory pool in Vulkan documented …","","","","","","","","","","","","The VertexBuffers can contain padding elements. Not …","Allocates","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","The internal structure which is used for storage","The size of the <code>inner</code> buffer","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Holds for each feature the count of indices.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Window which references a physical <code>RawWindow</code>. This is only …","Window of a certain <code>WindowSize</code>. This can either be a …","","A configuration for a window which determines the …","","Window size with a width and an height in pixels.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,349,349,0,0,359,359,359,359,359,359,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,13,30,18,18,11,11,19,13,20,21,21,17,17,16,28,30,18,11,19,13,20,21,17,16,28,11,21,17,16,30,18,11,19,13,20,21,17,16,28,30,18,11,19,13,20,21,17,16,28,17,19,18,11,19,13,20,21,17,16,18,11,19,13,20,21,17,16,18,11,17,0,11,19,13,20,21,17,16,11,17,30,18,11,19,13,20,21,17,16,28,18,11,21,17,11,21,17,18,11,20,21,17,16,18,18,18,11,11,11,21,21,21,17,17,17,18,11,11,19,19,13,13,20,21,21,17,17,16,16,28,30,18,11,11,19,13,13,20,21,21,17,17,16,16,16,16,28,16,17,17,11,21,17,30,18,11,19,13,20,21,17,16,28,17,30,18,11,19,13,20,21,17,16,28,30,18,11,19,13,20,21,17,16,28,30,18,11,19,13,20,21,17,16,28,17,21,16,28,11,11,30,18,11,19,13,20,21,17,16,28,28,19,19,30,30,28,28,19,19,19,28,13,18,11,19,13,28,28,18,11,17,13,13,13,11,17,17,11,13,18,11,19,13,20,21,17,16,11,19,13,21,17,16,17,30,18,11,19,13,20,21,17,16,28,30,18,11,19,13,20,21,17,16,28,30,18,11,19,13,20,21,17,16,28,30,18,11,19,13,20,21,17,16,28,30,30,20,21,17,16,20,21,17,16,21,17,13,28,28,0,0,0,47,48,41,47,48,41,47,48,41,47,48,41,41,0,0,41,47,47,48,41,48,48,0,47,48,41,47,48,41,47,48,41,47,41,47,48,41,47,48,41,0,0,0,48,48,47,48,41,47,48,41,47,48,41,47,48,41,0,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,0,0,0,0,0,0,0,0,409,410,409,410,409,410,409,410,409,410,409,410,409,410,409,410,409,410,409,410,409,410,409,410,409,410,409,410,409,410,409,410,0,43,0,43,68,43,0,43,43,68,68,61,0,0,0,411,412,411,0,61,61,61,61,411,412,61,61,61,61,61,61,61,61,61,61,412,413,61,61,61,61,61,0,0,364,364,0,364,364,0,0,0,364,364,0,0,0,0,73,0,414,67,67,76,76,0,0,0,0,0,65,0,414,67,0,0,76,0,67,65,75,70,73,74,65,75,76,67,71,70,73,74,65,75,76,67,71,70,73,74,65,75,76,67,71,70,73,74,65,75,76,67,71,70,414,70,70,65,71,65,71,65,70,73,74,65,75,76,67,71,72,73,73,74,75,75,76,76,67,67,70,73,74,65,75,76,67,71,74,72,78,70,73,74,65,75,76,67,71,70,73,74,65,75,76,67,71,70,65,75,71,70,73,74,65,75,76,67,71,74,70,73,74,65,75,76,67,71,70,74,70,73,75,76,67,414,70,70,129,71,71,65,74,74,65,71,73,75,76,67,74,70,73,74,65,75,76,67,71,70,73,74,65,75,76,67,71,70,73,74,65,75,76,67,71,70,73,74,65,75,76,67,71,415,415,0,0,0,0,86,95,86,95,0,90,95,79,80,86,90,95,79,80,86,90,95,79,80,86,90,95,79,80,86,80,79,80,86,80,86,80,79,79,90,79,80,90,95,79,80,86,80,80,79,79,80,86,90,95,79,80,86,80,80,79,79,79,79,79,90,90,90,95,79,80,86,90,95,79,80,86,90,95,79,80,86,90,95,79,80,86,90,95,79,80,86,79,79,79,79,79,79,79,90,79,79,79,95,79,79,79,80,79,79,79,90,80,86,90,95,79,80,86,90,95,79,80,86,90,95,79,80,86,90,95,79,80,86,79,416,417,0,97,0,0,97,100,97,100,97,100,97,100,97,100,97,97,97,100,97,100,97,100,97,100,100,97,100,97,97,69,100,97,100,97,100,97,100,97,100,97,0,0,0,0,0,102,106,60,102,106,60,102,106,60,102,106,60,102,60,102,60,102,106,60,101,102,60,106,106,102,106,106,106,60,60,102,102,106,60,102,106,60,102,60,102,106,60,102,106,60,102,60,106,106,102,60,106,102,106,60,102,106,60,102,106,60,102,106,60,105,0,0,105,0,110,111,105,110,111,105,110,111,105,110,111,105,110,111,105,110,111,105,110,111,110,111,105,110,111,110,111,105,110,111,105,110,111,105,110,111,105,110,111,105,110,111,105,110,111,105,111,110,111,110,111,105,110,111,105,110,111,105,110,111,105,110,111,105,110,111,0,0,44,44,112,44,112,44,112,44,112,44,112,112,112,44,112,44,112,112,44,112,44,112,44,112,44,112,44,112,44,44,112,112,44,44,112,44,44,44,112,44,112,44,112,44,112,112,112,112,112,0,113,0,0,418,418,113,113,113,418,63,113,418,63,113,418,63,113,418,63,113,63,63,418,63,113,113,113,418,63,113,63,418,63,113,418,63,113,113,418,63,113,63,418,63,113,63,63,63,63,63,113,63,63,63,113,418,63,113,418,63,113,418,63,113,418,63,113,63,63,63,419,419,0,0,0,0,0,0,0,0,118,0,117,117,117,117,117,117,117,0,117,117,117,117,117,0,0,117,0,117,117,117,117,0,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,0,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,0,0,116,420,0,0,0,120,0,120,420,0,0,0,0,0,121,124,125,420,123,121,124,125,420,123,121,124,125,420,123,121,124,125,420,123,121,421,422,421,422,124,125,121,123,121,124,125,420,123,121,124,125,420,123,124,121,124,125,420,123,121,124,125,420,123,121,124,125,420,123,121,124,125,420,123,121,124,125,420,123,123,421,422,0,0,0,0,0,0,0,124,125,421,422,0,121,124,125,420,123,121,124,125,420,123,121,124,125,420,123,121,124,125,420,123,0,0,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,0,0,128,0,131,130,128,131,130,128,131,130,128,131,130,128,130,131,131,130,128,128,128,131,130,128,131,130,128,131,130,128,131,130,131,130,128,131,130,128,130,130,130,0,128,128,131,130,128,131,130,128,131,130,128,131,130,128,0,0,0,0,0,423,424,425,423,424,425,423,424,425,423,424,425,423,424,425,423,424,425,423,424,425,423,424,425,423,424,425,423,424,425,423,424,425,423,424,425,423,424,425,423,424,425,423,424,425,423,424,425,0,134,134,134,134,134,0,134,134,134,134,134,134,134,134,134,134,134,134,134,134,0,0,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,0,0,0,0,0,146,120,0,146,120,0,0,144,145,146,146,147,144,145,146,147,146,144,145,146,147,144,145,146,147,421,422,144,145,146,147,146,147,421,422,144,145,144,145,144,145,146,147,146,146,146,146,146,146,144,145,146,144,145,146,147,146,144,144,144,145,145,146,147,144,145,146,147,144,145,146,147,144,145,146,147,144,145,146,147,144,421,422,144,145,421,422,144,145,146,147,144,145,146,147,144,145,146,147,144,145,146,147,144,145,146,147,0,0,151,151,0,0,151,151,151,151,0,0,0,0,0,153,55,153,152,151,151,150,55,153,152,151,150,151,55,153,152,151,150,55,153,152,151,150,150,0,0,151,151,150,55,152,153,153,55,153,152,151,150,0,151,151,151,151,151,151,0,0,151,55,153,152,151,150,0,0,151,153,153,153,153,55,153,152,151,150,55,153,152,151,150,55,153,152,151,150,55,153,152,151,150,55,153,152,151,150,0,0,55,55,153,153,55,0,153,0,55,153,153,0,153,0,153,0,153,55,153,55,0,0,151,55,153,152,151,150,55,153,152,151,150,55,153,152,151,150,55,153,152,151,150,0,153,164,0,164,0,0,164,0,164,163,165,115,164,163,165,115,164,163,165,115,164,163,165,115,115,115,115,164,115,164,163,165,115,164,163,165,115,163,164,163,165,115,164,163,165,115,164,163,165,115,164,163,165,115,164,164,163,165,115,115,165,163,115,115,164,163,165,115,164,163,165,115,164,163,165,115,164,164,163,165,115,163,115,115,115,0,0,0,0,0,0,0,0,0,0,0,0,174,171,166,170,167,169,174,171,166,170,167,169,174,171,166,170,167,169,174,171,166,170,167,169,169,166,167,166,169,170,167,169,170,167,169,169,174,171,171,166,170,170,167,169,169,170,167,166,166,166,174,171,166,170,167,169,167,167,167,174,171,166,170,167,169,174,171,166,170,167,169,174,171,166,170,167,169,174,171,166,170,167,169,170,174,171,166,170,167,169,169,167,167,167,166,167,166,166,167,167,167,167,167,174,170,169,167,167,167,167,167,167,170,170,167,169,169,174,171,166,170,167,169,174,171,166,170,167,169,174,171,166,170,167,169,174,171,166,170,167,169,166,166,167,167,0,0,0,0,158,158,0,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,183,0,0,181,181,181,181,181,181,181,181,181,181,183,181,181,181,181,181,181,181,181,181,181,181,181,181,189,204,196,0,179,179,0,0,0,196,0,199,188,0,56,179,179,179,185,186,184,179,185,186,184,184,199,188,0,195,0,179,0,0,0,0,56,0,0,0,0,0,0,56,189,204,195,0,0,0,0,0,184,189,204,179,179,179,179,179,179,179,179,54,0,46,54,179,179,0,194,179,179,179,179,179,179,179,0,53,194,202,202,46,194,187,53,201,179,179,179,179,179,187,194,51,0,53,194,46,0,46,202,194,53,179,198,53,51,193,46,179,179,179,179,194,179,426,426,427,426,426,427,428,428,428,429,429,429,430,430,431,432,431,433,432,432,430,430,433,434,434,435,434,434,435,434,435,0,185,186,184,185,186,184,184,0,0,0,0,184,187,53,184,184,185,185,186,186,187,53,184,185,186,187,53,184,185,186,187,53,184,185,186,187,53,184,185,186,184,185,186,184,185,186,184,184,184,185,185,185,186,186,186,53,184,184,185,185,186,186,187,53,184,185,186,53,53,53,53,53,53,53,187,53,187,53,184,185,186,187,53,184,185,186,184,185,186,187,53,184,185,186,187,53,184,185,186,187,53,53,53,53,184,185,186,53,53,53,184,185,186,187,53,184,185,186,187,53,184,185,186,187,53,184,185,186,187,53,184,185,186,428,428,428,429,429,429,434,434,435,434,434,435,434,435,196,0,0,196,195,195,195,195,196,196,195,196,195,196,195,196,195,195,195,196,195,196,195,196,195,195,195,196,196,196,195,195,196,195,195,195,196,195,196,195,196,195,196,195,196,195,195,196,195,196,195,196,195,196,426,426,427,426,426,427,0,46,0,46,46,46,46,201,46,201,46,201,46,201,46,46,46,201,46,46,201,46,46,46,46,46,46,46,46,46,201,46,46,201,201,46,201,46,201,46,201,46,201,46,46,46,46,46,46,46,46,46,201,46,46,46,46,201,46,46,201,46,201,46,201,46,201,46,46,46,0,0,199,56,199,0,0,0,0,0,56,0,56,202,202,54,194,203,197,197,56,56,202,199,199,54,194,203,197,56,202,199,197,54,194,203,197,56,202,199,54,194,203,197,56,202,199,197,199,197,199,197,54,54,54,198,194,203,197,56,202,199,198,198,198,197,56,199,197,194,197,56,199,197,197,197,56,56,56,199,199,199,194,197,56,56,202,199,54,194,203,197,56,56,56,56,202,199,199,199,199,199,202,202,202,202,197,202,194,202,198,198,202,202,194,54,194,203,197,56,202,199,54,194,203,197,56,202,199,54,194,203,197,56,202,199,54,194,203,197,56,202,199,198,54,194,203,197,56,202,199,194,194,197,194,194,194,198,198,202,202,194,197,56,202,202,198,203,56,197,199,56,54,194,203,197,56,202,199,54,194,203,197,56,202,199,54,194,203,197,56,202,199,194,54,194,203,197,56,202,199,198,198,194,194,189,204,188,188,189,204,0,0,0,0,0,189,204,189,204,204,188,188,51,193,189,204,188,51,193,189,204,188,51,193,189,204,188,51,193,189,204,188,51,189,204,188,51,193,189,204,188,51,193,204,188,204,188,204,204,204,188,188,188,189,204,204,188,51,193,189,189,189,189,204,188,188,188,188,188,188,51,193,193,193,193,193,189,204,188,51,193,189,204,188,51,193,204,188,51,193,189,204,188,51,193,193,189,204,188,51,193,193,193,51,51,189,51,193,189,204,188,51,204,189,204,188,51,193,189,204,188,51,193,189,204,188,51,193,189,204,188,51,193,206,206,206,206,0,0,436,206,436,206,436,206,436,206,436,206,206,206,436,206,206,436,206,436,206,436,206,436,206,436,206,206,436,436,206,206,436,206,436,206,436,206,436,206,437,437,438,437,439,438,437,439,438,439,0,0,0,0,0,0,207,208,207,208,207,208,207,208,207,208,207,208,207,207,208,207,208,207,208,207,208,207,208,207,207,208,207,208,207,208,207,208,207,208,207,0,0,0,440,441,440,441,440,441,440,441,440,441,440,441,440,441,440,441,440,441,440,441,440,441,440,441,440,441,440,441,440,441,440,441,0,0,59,0,0,0,0,0,57,59,0,210,210,132,209,210,132,209,210,132,209,210,132,209,210,210,210,132,209,0,49,57,132,209,132,209,210,132,209,132,210,132,209,210,132,209,210,210,132,209,210,210,132,209,210,212,212,211,210,210,57,132,209,132,209,132,132,210,132,209,210,132,209,210,132,209,210,132,209,0,0,59,0,0,0,57,59,59,212,59,212,59,212,59,212,59,212,49,212,57,59,212,59,212,59,212,59,212,59,212,59,212,212,212,212,211,0,57,59,212,59,212,59,212,59,212,0,0,0,0,0,222,222,0,0,0,0,192,0,0,192,0,0,0,0,0,216,216,0,215,442,218,227,213,227,443,217,218,213,227,160,224,215,213,213,227,213,227,442,224,58,0,219,213,227,227,0,219,160,137,217,218,216,0,219,217,0,442,137,219,442,219,0,0,224,227,213,227,137,224,227,268,444,444,0,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,0,0,213,213,213,213,213,443,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,0,0,0,216,216,217,217,218,216,217,218,216,216,217,218,216,217,218,218,216,217,218,216,217,218,216,217,218,217,217,218,217,217,217,217,216,217,218,216,217,218,216,217,218,216,217,218,216,217,218,216,217,218,216,217,218,217,218,216,217,216,217,218,216,217,218,216,217,218,216,217,218,216,217,218,0,0,0,222,222,0,0,224,219,442,222,160,224,219,442,222,160,224,219,442,222,160,224,219,442,222,160,442,219,160,224,219,442,222,160,224,219,442,222,160,160,160,219,160,160,160,224,224,219,442,222,160,224,219,442,222,160,224,219,442,222,160,224,219,442,222,160,160,224,219,442,222,160,224,442,224,219,160,160,219,160,219,160,219,160,219,219,160,442,219,442,219,224,219,442,222,160,224,219,442,222,160,224,219,442,222,160,224,224,219,442,222,160,224,192,0,0,192,137,192,137,192,137,192,137,192,192,137,192,192,137,192,192,192,137,137,192,137,192,137,192,137,192,137,192,137,137,192,137,137,192,137,192,137,192,137,192,137,444,444,0,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,235,235,139,234,235,0,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,235,235,235,235,234,234,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,0,234,239,239,238,235,0,238,235,234,235,235,235,0,238,235,235,235,235,234,235,0,139,139,139,139,139,139,139,139,139,139,139,139,235,0,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,235,234,235,235,235,235,235,235,235,139,0,235,235,235,235,235,235,235,235,235,0,235,235,235,234,0,139,234,235,235,235,238,238,234,234,235,235,237,237,139,139,156,239,142,157,238,234,235,237,139,156,239,142,157,238,234,235,237,139,139,156,234,235,234,235,234,235,234,235,234,234,235,235,234,235,234,235,139,139,238,234,235,237,139,156,239,142,157,238,234,235,237,139,156,239,142,157,237,237,238,234,235,237,139,156,239,142,157,238,234,235,237,139,156,239,142,157,234,235,139,139,156,234,235,234,235,238,235,237,156,142,157,157,156,234,235,156,238,234,235,237,139,156,239,142,157,237,237,238,234,235,237,139,238,234,235,237,139,234,235,238,234,235,237,139,238,238,238,234,234,234,235,235,235,237,237,237,139,139,139,234,235,156,238,234,234,234,234,234,235,235,235,235,235,237,139,238,234,234,235,237,139,156,239,142,157,234,235,234,234,235,235,234,235,234,235,234,235,139,139,139,139,238,234,235,237,139,234,235,234,235,234,235,238,234,235,237,139,156,239,142,157,238,234,235,237,139,156,239,142,157,238,234,235,237,139,156,239,142,157,238,234,235,237,139,156,239,142,157,234,235,234,235,139,139,139,139,234,235,142,139,238,234,235,237,139,156,239,142,157,234,235,234,235,156,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,157,234,235,156,157,156,234,235,139,139,139,142,234,235,234,235,234,235,234,235,157,238,234,235,237,139,156,239,142,157,234,235,238,234,235,237,139,156,239,142,157,238,234,235,237,139,156,239,142,157,238,234,235,237,139,156,239,142,157,234,235,238,234,235,237,139,156,239,142,157,237,237,445,445,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,254,255,246,247,248,249,250,251,252,253,254,255,246,247,248,249,250,251,252,253,254,255,246,247,248,249,250,251,252,253,254,255,246,247,248,249,250,251,252,247,246,247,248,249,250,251,252,246,247,248,249,250,251,252,249,253,246,248,252,446,253,254,255,446,253,254,255,253,254,255,246,247,248,249,250,251,252,253,249,253,254,255,256,253,254,255,246,247,248,249,250,251,252,253,254,255,246,247,248,249,250,251,252,253,254,255,246,247,248,249,250,251,252,253,254,255,246,247,248,249,250,251,252,253,254,255,246,247,248,249,250,251,252,246,247,248,249,250,251,252,253,254,255,246,247,248,249,250,251,252,246,247,248,250,251,252,248,248,252,252,246,247,248,249,250,251,252,251,253,254,255,246,247,248,249,250,251,252,253,254,255,246,247,248,249,250,251,252,253,254,255,246,247,248,249,250,251,252,253,254,255,246,247,248,249,250,251,252,246,246,250,251,0,0,0,0,0,0,0,0,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,0,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,0,0,0,264,0,0,0,264,264,0,264,0,0,0,0,0,0,262,262,267,264,265,263,262,267,264,265,263,262,267,264,265,263,262,267,264,265,263,262,263,263,262,264,265,263,264,265,263,265,263,263,267,262,267,264,265,263,262,264,265,263,267,264,265,263,262,182,182,182,267,262,267,264,265,263,262,267,264,265,263,262,267,264,265,263,267,264,265,263,262,267,264,265,263,262,262,263,0,269,267,265,263,265,265,264,265,263,263,267,264,265,263,262,267,264,265,263,262,267,264,265,263,262,267,264,265,263,262,269,269,263,0,0,0,0,269,270,269,270,269,270,269,270,269,269,270,270,269,270,269,270,270,269,270,269,270,269,270,269,270,269,270,269,269,270,269,269,270,269,270,269,270,269,270,269,269,269,269,0,0,0,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,0,0,0,0,0,0,42,42,42,42,278,277,42,278,277,42,278,277,42,278,277,42,42,42,278,277,275,42,275,275,275,274,278,277,42,42,42,274,278,277,42,278,277,42,278,277,278,277,42,275,278,277,42,42,277,42,275,278,277,42,42,42,42,277,42,278,277,42,278,277,42,278,277,42,278,277,42,0,319,0,319,0,319,0,319,0,0,319,0,319,0,319,0,319,0,319,447,0,0,318,0,319,0,319,0,319,0,319,0,319,0,319,0,319,0,319,0,319,0,319,0,319,0,319,0,319,0,319,0,319,0,319,0,319,0,319,318,0,319,0,319,0,0,319,318,0,0,0,319,0,319,0,319,0,319,0,319,0,319,291,290,281,317,281,281,317,317,319,319,288,288,304,304,289,289,285,285,296,296,287,287,282,282,283,283,316,316,310,310,280,280,305,305,284,284,314,314,309,309,292,292,299,299,313,313,315,315,307,307,293,293,312,312,298,298,295,295,291,291,286,286,290,290,311,311,297,297,302,302,301,301,300,300,303,303,308,308,294,294,306,306,281,317,319,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,281,317,319,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,288,304,289,285,316,310,280,305,284,314,309,299,313,315,307,293,291,290,281,317,319,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,281,317,319,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,286,311,301,300,114,281,317,319,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,281,317,319,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,281,317,312,298,301,300,312,298,306,306,281,317,319,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,281,317,319,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,281,317,319,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,281,317,319,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,281,281,281,317,317,317,319,319,319,288,288,288,304,304,304,289,289,289,285,285,285,296,296,296,287,287,287,282,282,282,283,283,283,316,316,316,310,310,310,280,280,280,305,305,305,284,284,284,314,314,314,309,309,309,292,292,292,299,299,299,313,313,313,315,315,315,307,307,307,293,293,293,312,312,312,298,298,298,295,295,295,291,291,291,286,286,286,290,290,290,311,311,311,297,297,297,302,302,302,301,301,301,300,300,300,303,303,303,308,308,308,294,294,294,306,306,306,281,317,319,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,319,288,288,288,288,288,288,288,304,304,304,304,289,289,289,289,285,285,285,285,296,296,296,296,287,287,287,287,282,282,282,282,283,283,283,283,316,316,316,316,310,310,310,310,280,280,280,280,305,305,305,305,284,284,284,284,314,314,314,314,309,309,309,309,292,292,292,292,299,299,299,299,313,313,313,313,315,315,315,315,307,307,307,307,293,293,293,293,312,312,312,312,298,298,298,298,295,295,295,295,291,291,291,291,286,286,286,286,290,290,290,290,311,311,311,311,297,297,297,297,302,302,302,302,301,301,301,301,300,300,300,300,303,303,303,303,308,308,308,308,294,294,294,294,306,306,306,306,447,288,304,289,285,316,310,280,305,284,314,309,299,313,315,307,293,286,311,297,302,281,317,319,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,312,298,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,319,288,288,304,304,289,289,285,285,296,296,287,287,282,282,283,283,316,316,310,310,280,280,305,305,284,284,314,314,309,309,292,292,299,299,313,313,315,315,307,307,293,293,312,312,298,298,295,295,291,291,286,286,290,290,311,311,297,297,302,302,301,301,300,300,303,303,308,308,294,294,306,306,281,317,319,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,281,317,319,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,281,317,319,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,447,281,317,319,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,282,283,291,286,290,311,297,0,114,114,114,319,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,303,308,114,303,308,288,304,289,285,316,310,280,305,284,314,309,299,313,315,307,293,0,297,302,0,114,0,281,317,319,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,281,317,319,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,281,317,319,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,281,317,319,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,294,281,317,319,288,304,289,285,296,287,282,283,316,310,280,305,284,314,309,292,299,313,315,307,293,312,298,295,291,286,290,311,297,302,301,300,303,308,294,306,302,294,114,296,287,292,295,296,292,295,301,300,303,308,294,306,296,292,295,114,327,0,327,0,0,327,0,327,0,324,325,326,327,328,324,325,326,327,328,324,324,325,326,327,328,324,325,326,327,328,324,325,326,327,328,324,325,326,327,328,328,324,325,326,327,328,324,325,326,327,328,325,324,325,326,327,328,324,325,326,327,328,327,328,328,324,325,326,327,328,324,325,326,327,328,324,325,326,327,328,324,325,326,327,328,324,325,326,327,328,326,328,328,328,328,324,325,326,327,328,328,328,324,325,326,327,328,324,325,326,327,328,324,325,326,327,328,324,325,326,327,328,324,325,326,327,328,329,329,0,0,329,330,329,330,329,330,329,330,329,330,329,330,330,329,330,329,330,329,330,329,330,329,330,329,330,329,330,329,330,329,330,330,330,330,330,330,330,330,330,329,330,329,330,329,330,329,330,329,330,329,330,332,0,32,0,0,0,332,0,32,32,331,332,32,331,332,331,32,331,332,32,331,332,331,32,331,332,32,331,332,32,32,331,332,32,331,332,32,331,332,32,331,332,32,331,332,32,331,332,32,331,332,32,331,332,32,331,332,331,331,331,32,331,332,331,32,331,332,32,331,332,32,331,332,32,331,332,32,331,332,0,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,0,0,0,334,335,334,335,334,335,334,335,333,334,333,334,335,334,335,334,335,334,335,334,335,334,335,334,335,334,335,335,0,334,0,0,334,335,334,335,334,335,334,335,0,266,448,0,0,0,0,0,266,448,336,336,336,336,336,337,336,337,337,337,336,336,336,336,336,0,336,336,336,336,336,336,337,336,266,336,448,336,449,336,336,336,336,336,0,0,0,0,339,339,339,339,339,339,0,339,339,339,276,339,339,340,339,340,0,339,339,339,339,339,0,0,450,341,341,341,341,341,341,341,341,341,341,341,450,341,341,341,341,341,341,341,0,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,0,0,0,0,0,451,452,0,451,452,0,0,0,0,348,345,343,149,346,348,345,343,149,346,348,345,343,149,346,348,345,343,149,346,149,343,343,344,345,149,343,344,345,149,346,347,348,345,343,149,346,347,347,347,149,343,348,345,343,149,346,149,348,348,345,343,149,346,348,345,343,149,346,345,343,346,348,345,343,149,346,347,348,345,343,149,346,346,451,149,452,149,453,149,345,348,348,149,343,348,345,343,149,346,348,345,343,149,346,348,345,343,149,346,348,345,343,149,346,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,0,0,0,0,454,454,352,349,352,349,352,349,352,349,349,349,349,352,349,349,352,349,349,349,352,349,352,349,352,349,352,349,352,349,352,352,349,352,349,352,349,352,349,352,349,349,0,0,0,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,0,0,0,361,361,361,361,0,362,363,364,361,361,362,363,364,361,361,361,362,362,362,363,364,361,362,363,364,361,362,363,364,362,363,364,361,362,363,364,361,361,362,363,364,361,362,362,362,363,364,361,361,361,362,363,364,362,363,364,361,361,361,361,364,364,364,362,362,362,363,364,361,362,362,363,364,361,361,361,363,361,363,363,362,362,362,363,364,361,362,363,364,361,362,363,364,361,362,363,364,361,361,362,363,364,361,364,364,361,364,363,363,362,362,362,362,363,363,363,363,362,363,364,361,362,363,364,361,362,363,364,361,363,363,362,363,364,361,362,362,362,363,364,361,364,364,0,371,0,0,370,370,370,370,370,370,370,370,370,0,372,370,0,370,370,370,370,370,370,0,0,371,370,372,370,370,370,370,370,370,0,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,0,0,0,0,14,455,14,455,0,0,0,0,376,35,378,374,374,376,35,378,374,376,35,378,374,376,35,378,374,0,374,374,374,376,0,0,0,376,35,378,374,374,374,374,374,374,376,35,378,374,376,35,378,374,376,376,376,376,376,376,35,378,374,376,35,378,374,376,35,378,374,376,35,378,374,376,35,378,374,0,35,378,0,35,378,376,376,35,378,374,35,378,374,376,35,378,374,376,35,378,374,376,35,378,374,376,35,378,374,456,0,0,0,379,0,379,0,379,456,0,0,0,388,388,0,379,0,0,0,0,0,0,0,0,385,380,390,389,456,383,384,385,380,390,389,456,383,384,385,380,390,389,456,383,384,385,380,390,389,456,383,384,390,380,457,458,459,460,387,457,458,459,460,386,390,389,380,383,384,385,384,385,380,390,389,456,383,384,390,385,380,390,389,456,383,384,383,385,380,390,389,456,383,384,385,380,390,389,456,383,384,385,380,390,389,456,383,384,385,380,390,389,456,383,384,459,385,380,390,389,456,383,384,458,386,384,457,458,459,460,387,0,0,0,0,0,0,0,0,390,389,458,459,460,0,385,380,390,389,456,383,384,385,380,390,389,456,383,384,385,380,390,389,456,383,384,385,380,390,389,456,383,384,0,0,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,0,0,388,388,0,386,387,388,386,387,388,386,387,388,386,387,388,387,386,386,387,388,388,388,386,387,388,386,387,388,386,387,388,386,387,386,387,388,386,387,388,387,387,387,386,387,387,0,388,387,387,388,386,387,388,386,387,388,386,387,388,386,387,388,0,0,0,0,461,462,461,462,461,462,461,462,461,462,461,462,461,462,461,462,461,462,461,462,461,462,461,462,461,462,461,462,461,462,461,462,0,392,392,392,392,392,0,392,392,392,392,392,392,392,392,392,392,392,392,392,392,0,0,0,0,0,396,0,0,396,0,396,0,0,0,396,393,393,393,396,397,395,398,394,393,396,397,395,398,394,394,393,396,397,395,398,394,393,396,397,395,398,394,395,395,395,395,393,394,396,395,396,395,395,394,393,396,397,395,398,394,393,393,395,394,393,396,397,395,398,394,393,396,397,395,398,394,393,394,394,393,393,393,393,393,393,395,395,397,397,393,396,397,395,398,394,393,396,397,395,398,394,393,396,397,395,398,394,393,396,397,395,398,394,393,396,397,395,398,394,394,393,395,398,394,394,393,393,397,394,393,393,393,393,393,394,394,395,396,395,394,393,396,397,395,398,394,393,396,397,395,398,394,397,393,396,397,395,398,394,393,396,397,395,398,394,393,393,395,393,393,395,0,0,0,0,0,0,0,405,379,0,405,379,0,405,379,0,405,379,0,0,401,402,403,405,405,404,406,401,402,403,405,404,406,405,401,402,403,405,404,406,401,402,403,405,404,406,404,457,458,459,460,401,402,403,404,405,404,406,405,404,406,457,458,459,460,401,402,403,404,401,402,403,404,401,402,403,405,404,406,405,405,405,405,405,405,404,401,402,403,405,404,401,402,403,405,404,406,405,403,401,401,402,402,403,403,405,404,404,406,401,402,403,405,404,406,401,402,403,405,404,406,401,402,403,405,404,406,459,404,401,402,403,405,404,406,404,458,402,402,457,458,459,460,401,402,403,404,458,459,402,404,405,404,406,460,403,401,402,403,405,404,406,401,402,403,405,404,406,401,402,403,405,404,406,401,402,403,405,404,406,0,0,0,0,463,0,155,0,223,223,223,223,223,223,223,463,223,223,223,223,223,223,223,223,223,223,155,223,223,223,223,223,223,155,155,154,223,223,223,223,223,223,223,223],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[4,[[4,[1]]]],[[],5],0,[[6,7,7]],0,[[],8],[[],8],[[],9],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[11,12]],[[13,13]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],14],[[],14],[[],14],[[15,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,[[10,[18]]]],[19,15],[18,18],[11,11],[19,19],[13,13],[20,20],[21,21],[17,17],[16,16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[18,18],22],[[11,11],22],[[17,17],22],[[],[[23,[7]]]],[[],11],[[],19],[[],13],[[],20],[[],21],[[],17],[[],16],[24,[[8,[11]]]],[24,[[8,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,5],[14,5],[14,5],[14,5],[25],[25],[25],[[18,18],5],[[11,11],5],[[20,20],5],[[21,21],5],[[17,17],5],[[16,16],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[18,26],27],[[11,26],27],[[11,26],27],[[19,26],27],[[19,26],27],[[13,26],27],[[13,26],27],[[20,26],27],[[21,26],27],[[21,26],27],[[17,26],27],[[17,26],27],[[16,26],27],[[16,26],27],[[28,26],27],[[]],[[]],[[]],[12,11],[[]],[11,13],[[]],[[]],[[]],[[],21],[[]],[[],17],[[],16],[[]],[[],16],[[[29,[15]]],16],[[]],[[19,13],16],[17,[[23,[17]]]],[17,[[10,[17]]]],[[11,25]],[[21,25]],[[17,25]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,30],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[17,32],[[10,[21]]]],[[21,32],[[10,[17]]]],[[16,11,13],17],[[28,17],5],[11,5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[28,33],0,0,[30,17],[30,17],0,0,[19,15],[19,15],[[19,15],15],0,[[13,13],5],[[[34,[11]]],18],[12,11],[[15,15],19],[15,13],[[[35,[15]],36,37,13,11],28],0,[[18,18],[[10,[22]]]],[[11,11],[[10,[22]]]],[[17,17],[[10,[22]]]],[[13,13],15],[[13,17],15],[[13,11],15],[[11,38],8],[[17,38],8],[17,12],[[11,12]],[[13,13]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[17,13],[[40,[15]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[30,17],[30,17],0,0,0,0,0,0,0,0,0,0,[[13,15],11],[28,11],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[41,42,[4,[[44,[43]]]],45,46]],0,0,[[],41],[47],[[]],[[]],[[]],[48,49],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[],5],0,0,0,[48],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[6],0,[[],1],[[],1],[[]],[[]],[[]],[[]],[50,[[52,[51]]]],[[]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[[],5],[[],50],[[50,53,54,55,45],[[8,[56]]]],[[],8],[[],8],[[],9],[[],10],[[50,55]],0,0,0,0,0,[6],0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[45,57,58],59],[[45,48,58],59],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],10],[[],10],[6],0,0,0,0,0,0,0,0,[[]],[[],60],0,0,0,0,0,0,0,0,[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[61,26],27],[[61,26],27],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[[],5],[62],[[[63,[43]],[10,[64]]]],[[],[[8,[61]]]],[[],39],[[],8],[[],8],[[],9],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[65,66],[[8,[67]]]],[[[70,[68,69]],65,[66,[68]]],[[8,[67]]]],0,[65,65],[71,71],[[]],[[]],[24,[[8,[65]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[72,72],5],[[73,26],27],[[73,26],27],[[74,26],27],[[75,26],27],[[75,26],27],[[76,26],27],[[76,26],27],[[67,26],27],[[67,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[74,72],5],[[72,25]],[[],74],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[74,3],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[69,[[70,[68,69]]]],[[72,[3,[1]]],74],0,[62],[62],[62],[62],[77],[[[70,[68,69]],77]],0,[78,[[8,[75]]]],[[71,78],[[8,[75]]]],0,[[65,38],8],[74,72],0,[[]],[[]],[[],39],[[],39],[[],39],[[],39],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[79,[[81,[[80,[15]]]]]],[[[80,[[0,[82,83,84,85]]]]],[[80,[[0,[82,83,84,85]]]]]],[[[86,[[0,[82,83,84,85]]]]],[[86,[[0,[82,83,84,85]]]]]],[[]],[[]],[[[80,[[0,[82,83,84,87]]]]],5],[[79,[10,[88]]],[[8,[89]]]],[79,[[8,[89]]]],[[],90],[[],79],[[[80,[[0,[82,83,84,87]]]]]],[[]],[[]],[[]],[[]],[[]],[[[80,[[0,[82,83,84,87]]]]]],0,[[79,64],[[8,[89]]]],[[79,64],[[8,[89]]]],[[[80,[[0,[82,83,84,91]]]],26],27],[[[86,[[0,[82,83,84,91]]]],26],27],[[]],[[]],[[]],[[]],[[]],[[[92,[[0,[82,83,84,87]]]],[93,[39,39]]],[[10,[[80,[[0,[82,83,84,87]]]]]]]],[[[94,[[0,[82,83,84,87]]]],[93,[39,39]]],[[10,[[80,[[0,[82,83,84,87]]]]]]]],0,0,[79,[[8,[89]]]],[79,[[8,[89]]]],[79,[[52,[[80,[15]]]]]],0,[[90,17,95]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[79,5,37,37],[[8,[89]]]],[[79,5,37],[[8,[89]]]],[[79,37,37],[[8,[89]]]],[[79,37],[[8,[89]]]],[[79,37,37],[[8,[89]]]],[[79,37,37],[[8,[89]]]],[[79,37],[[8,[89]]]],[[],90],[[],79],[[79,37],[[8,[89]]]],[[79,37],[[8,[89]]]],[[95,20],[[52,[[80,[15]]]]]],[[79,5,37,37],[[8,[89]]]],[[79,5,37],[[8,[89]]]],0,0,[79,[[8,[89]]]],[79,[[8,[89]]]],[[79,37,88,96],[[8,[5,89]]]],[[90,16,11,13],[[10,[[52,[[80,[15]]]]]]]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],[[79,15,15,37],[[8,[89]]]],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[97,26],27],[[97,26],27],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[62],[[[0,[98,99]]],[[8,[97]]]],[[100,[0,[98,99]]],[[8,[97]]]],[[],39],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[[102,[[0,[101,85]]]]],[[102,[[0,[101,85]]]]]],[[[60,[[0,[101,85]]]]],[[60,[[0,[101,85]]]]]],[[]],[[]],[[]],[[]],[[]],[88,[[104,[[3,[103]]]]]],[[[102,[101]],17,105],[[8,[[52,[12]],106]]]],[[[60,[101]],17,105],[[8,[[52,[12]],106]]]],[[106,26],27],[[106,26],27],[[]],[[]],[107,106],[108,106],[[]],0,0,[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[],5],[101,[[102,[101]]]],[[[102,[101]]],[[60,[101]]]],[62],[106,[[10,[109]]]],[[]],[[]],[[],39],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[110,110],[111,111],[105,105],[[]],[[]],[[]],[[],110],[[],111],[[]],[[]],[[]],0,0,[[110,17],39],[[111,17],39],[[105,17],39],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[],5],0,[[88,88],110],[[88,88,88],111],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],0,0,0,0,[[[44,[43]]]],0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[[112,[43]]],[[44,[43]]]],[[],[[112,[43]]]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[[44,[43]]]],0,0,[[],[[112,[43]]]],[[[44,[43]]]],0,0,[[[44,[43]]],60],0,[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],10],[[],10],[[[112,[43]]],[[112,[43]]]],[[[112,[43]]],[[112,[43]]]],[[[112,[43]]],[[112,[43]]]],[[[112,[43]]],[[112,[43]]]],0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[[63,[43]]],[[8,[6,113]]]],[[[63,[43]]],[[8,[6,113]]]],[[]],[[]],[[]],[[113,26],27],[[113,26],27],[[]],[[]],[[]],[[[63,[43]]],[[8,[113]]]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[[63,[43]]],5],[[],5],[[],5],[[],5],[[[63,[43]]],[[4,[[44,[43]]]]]],0,0,[[114,[44,[43]],115,[52,[[3,[116]]]]],[[8,[[63,[43]],113]]]],0,[62],[[[63,[43]]]],[[[63,[43]]],[[8,[113]]]],0,[[],39],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[[63,[43]]]],0,[[[63,[43]]]],0,0,0,0,0,0,[103],0,0,0,0,0,[[],1],[[],1],[[]],[[]],[[],117],[[]],[[]],0,[[]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[[],5],[103],0,[117,60],0,[[],8],[[],8],[[],9],[[],10],0,[[],1],[[],1],[[]],[[]],0,[118,118],[[]],[[]],[[118,88],[[104,[[3,[103]]]]]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[[],5],[[[10,[39]]],118],[[]],[[],8],[[],8],[[],9],[[],10],0,[[],1],[[],1],[[]],[[]],[[],119],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[[],5],[[],119],[[119,98],[[8,[97]]]],[[],8],[[],8],[[],9],[[],10],0,0,[[42,[4,[44]],45,46]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[121,[120]],42,[4,[[44,[43]]]],45,46]],[[17,39,122]],[17],[[],17],[[],17],0,0,[[],[[121,[120]]]],[[],123],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[],72],[[],72],0,0,0,0,0,0,0,0,0,[[],124],[[],125],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[4,[[4,[1]]]],[[],5],0,[[[126,[43,120]]],[[127,[88]]]],[[[4,[[44,[43]]]]],[[126,[43]]]],0,[[[126,[43,120]],6]],[[],8],[[],8],[[],9],[[],10],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[128,26],27],[[128,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[],5],[[[130,[120,129]],17,39,122],[[8,[128]]]],[129,[[130,[120,129]]]],0,[[[34,[12]],131,[130,[120,129]]],[[8,[128]]]],[62],[[],39],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[6],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[],5],[[45,57,58],59],[[45,132,58],59],[[45,132,58],59],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],0,[[],1],[[],1],[[]],[[]],[[]],[[65,[0,[129,85,99]],68],133],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[4,[[4,[1]]]],[[],5],0,[[[134,[43,120]]],[[127,[88]]]],[[[4,[[44,[43]]]]],[[134,[43,120]]]],0,[[[134,[43,120]],6]],[[],8],[[],8],[[],9],[[],10],0,0,[[],1],[[],1],[[135,136,17,137]],[[]],[[]],0,[[135,138,136,139,7,7,140],137],[[]],[[]],[[135,17],[[10,[141]]]],[[135,17,45],5],[[]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[[],5],0,[[142,136,143],135],[135,143],0,0,[[],8],[[],8],[[],9],[[],10],[6],0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[17,39,122]],[17],[[17,39,122],144],[17,145],[146,146],[147,147],[[]],[[]],[[],17],[[],17],[144,17],[145,17],0,0,[[]],[[]],[[]],[[]],[14,5],[25],[[146,146],5],[[],5],[[],5],[[],5],[[144,26],27],[[145,26],27],[[146,26],27],[[]],[[]],[[]],[[]],[[146,25]],0,[144,74],[[]],[145,74],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[],5],[[],5],0,[[],72],[[],72],[[],72],[[],72],[[],124],[[],125],[144,124],[145,125],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[135,136,148,149,114,28]],[6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[150,42,[4,[[44,[43]]]],45,46]],0,0,[151,151],[[]],[[],150],0,[152],[153,136],0,[[]],[[]],[[]],[[]],[[]],0,[14,5],[25],[[151,151],5],[[],5],[[],5],[[],5],0,0,[[151,26],27],[[]],[[]],[[]],[[]],[[]],0,0,[[151,25]],[[[0,[154,155]],156,157],[[8,[153,158]]]],[[154,156,157],[[8,[153,158]]]],[153,159],0,[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,0,[160,55],[153,148],0,[[55,[0,[154,155]],159],[[8,[158]]]],0,0,0,0,[[159,156,161],[[8,[162]]]],[[153,7,7]],0,0,0,0,0,[153,55],[55,160],[153,160],0,0,0,[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[115,163],[115,115],[[]],[[],164],[[],115],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[163,[[8,[164,158]]]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[164,[[10,[153]]]],[[],5],[[],5],[[],5],[[],5],[[],115],0,0,0,[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[164,165],[[],10],[[],10],[[],10],[[],10],0,0,[[115,157],115],[[115,156],115],0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[166,15,15,15],[[40,[15]]]],[[167,15],[[40,[15]]]],[[166,15,15,15,15,[168,[15]]],[[40,[15]]]],[[169,15,15],[[168,[15]]]],[170,170],[167,167],[169,169],[[]],[[]],[[]],[[],169],[[]],[[]],[171,[[40,[172]]]],[[]],[170,[[40,[172]]]],[[]],[[]],[[]],[[169,169],5],[[170,26],27],[[167,26],27],[[166,15,15],[[173,[15]]]],[166,[[173,[15]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[167,[[173,[15]]]],[167,[[173,[15]]]],[167,[[173,[15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[170,174],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[167,[175,[15]]]],[[167,[168,[15]]]],[[167,167],5],[[[176,[[173,[15]]]]],166],[[[176,[[168,[15]]]],[176,[[173,[15]]]],[176,[[173,[15]]]]],167],[[166,[168,[15]],15],15],[[166,[168,[15]],15],15],[[167,[176,[[173,[15]]]]]],0,[167,[[168,[15]]]],0,[167,[[175,[15]]]],[[174,[177,[15]]],[[177,[15]]]],[[170,[177,[15]]],[[177,[15]]]],0,[[167,[176,[[173,[15]]]]]],0,[[167,[176,[[173,[15]]]]]],[[167,[176,[[173,[15]]]]]],[[167,[176,[[173,[15]]]]]],[[167,15],[[29,[15]]]],[[170,[40,[15]]],171],[[]],[[]],[[]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[166,15,15],15],[166,15],[[167,[176,[[173,[15]]]]]],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[]],[[]],[[]],[[158,26],27],[[158,26],27],[162,158],[178,158],[179,158],[[]],[180,158],[[]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[[],5],[62],[158,5],[158,[[10,[109]]]],[[],39],[[],8],[[],8],[[],9],[[],10],0,0,0,0,0,[[],1],[[],1],[[]],[[]],[[],181],[[]],[[181,88]],[[]],[[],5],[[[181,[182]],17,45],5],[[181,98]],[[]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[[],5],[[[181,[183]],98]],[181,181],[[],8],[[],8],[[],9],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[]],[[]],0,0,0,0,[[]],[14,5],0,0,[[179,179],5],[[],5],[[],5],[[],5],[[179,26],27],[[179,26],27],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[[],5],0,0,0,0,0,0,0,0,0,0,0,0,[62],[[53,54,55,45],[[8,[56]]]],0,0,0,0,[[],39],[[],8],[[],8],[[],9],0,[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,5],[14,5],[14,5],[[184,184],5],[[185,185],5],[[186,186],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[53,[[52,[187]]]],[[184,26],27],[[184,26],27],[[185,26],27],[[185,26],27],[[186,26],27],[[186,26],27],[[]],[[]],[[]],[[]],[[]],[[53,[176,[188]]],[[8,[189,186]]]],[[53,[176,[188]]],[[8,[190,186]]]],[[53,[176,[188]]],[[8,[191,186]]]],[[53,[176,[188]]],[[8,[192,186]]]],0,[53,193],[53,[[34,[189]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[46,194,[34,[189]],[34,[[10,[189]]]]],53],0,[53,193],0,[62],[62],[62],[[53,[176,[[127,[88]]]],[52,[189]]],[[8,[184]]]],0,[[53,[176,[188]],[176,[189]]],[[8,[185]]]],[[],39],[[],39],[[],39],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[195,195],[[]],[[]],[[]],[14,5],[14,5],[[195,195],5],[[196,196],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[195,26],27],[[]],[[]],[195,197],[195,197],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[]],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,0,0,0,0,[[46,[176,[[127,[88]]]],198],197],[[46,[176,[199]],[176,[199]]],[[8,[179]]]],[[46,[176,[199]],[176,[188]],[176,[199]],[176,[188]]],[[8,[179]]]],[[46,[176,[[127,[88]]]],46]],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],0,[[],46],[[]],[[]],[[46,26],27],[[]],[[]],[[46,[176,[199]]],[[8,[198,179]]]],[[46,[176,[199]]],[[8,[197,179]]]],[[46,[176,[199]]],[[8,[198,179]]]],[[46,[176,[199]]],[[8,[194,179]]]],[[46,[176,[199]]],[[8,[194,179]]]],[[46,[200,[88]]],[[10,[46]]]],[[46,[200,[88]]],[[10,[46]]]],[[46,195],5],[201,[[52,[51]]]],[46,[[10,[194]]]],0,0,[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[46,[176,[199]]],[[8,[33,179]]]],[[46,[176,[199]]],[[8,[33,179]]]],[46,33],[46,33],[46,33],[46,33],0,0,[201,[[52,[51]]]],[[46,[176,[[127,[88]]]]],[[8,[179]]]],[[46,[176,[199]],[176,[199]]],[[8,[179]]]],[[46,[176,[199]],[176,[188]],[176,[199]],[176,[188]]],[[8,[179]]]],[[46,[176,[[127,[88]]]]]],[[201,53,54,55,45],[[8,[56]]]],[[46,[52,[51]]],197],0,[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],10],[[],10],[[46,55]],[[46,195,196],[[8,[179]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[202,195],[[8,[179]]]],[[202,195],[[8,[179]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[197,197],[199,199],[[]],[[]],[[197,197],22],0,0,[[]],[[[3,[198]]],[[8,[[3,[198]],[3,[198]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[198,[[10,[198]]]],[[[4,[198]]],[[8,[[4,[198]],[4,[198]]]]]],[198,[[10,[198]]]],[14,5],[14,5],[14,5],[25],0,[[197,197],5],[[56,56],5],[[199,199],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[194,26],27],[[197,26],27],[[56,26],27],[[56,26],27],[[202,26],27],[[199,26],27],[[]],[[]],[[]],[[]],[[]],[184,56],[186,56],[185,56],[[]],[[]],[39,199],[197,199],[199,199],[88,199],[[202,37],[[8,[195,179]]]],[[202,37],[[8,[195,179]]]],[[202,195],5],[[202,195],5],[[197,25]],[202,197],0,0,[[],[[52,[51]]]],[[],[[52,[51]]]],[202,[[34,[195]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[198,5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[197,198],194],[37,197],[194,[[8,[198,179]]]],0,[194,[[8,[198,179]]]],[[],[[52,[51]]]],[[],[[52,[51]]]],[202,[[34,[195]]]],0,0,[[197,197],[[10,[22]]]],[62],[[202,195],[[8,[179]]]],[[202,195],[[8,[179]]]],[[53,54,55,45],[[8,[56]]]],[[203,53,54,55,45],[[8,[56]]]],[56,[[10,[109]]]],[[]],[[]],[[],39],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[55],[55],[194,[[8,[179]]]],[194,[[8,[179]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[189,189],[204,204],[188,188],[51,51],[[]],[[]],[[]],[[]],[[],193],[[]],[[]],[[]],[[]],[[]],[14,5],[14,5],[[204,204],5],[[188,188],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[189,26],27],[[204,26],27],[[204,26],27],[[188,26],27],[[51,26],27],[[193,26],27],[[]],[190,189],[192,189],[191,189],[[]],[[]],[88,188],[37,188],[39,188],[188,188],[[[127,[88]]],188],[[]],[[]],[205,193],[[193,[176,[188]]],[[10,[51]]]],[[193,[176,[188]]],[[10,[37]]]],[[193,[176,[188]]],[[10,[51]]]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[193,5],[[],5],[[],5],[[],5],[[],5],[[],5],[193,33],[193,37],0,[[[176,[[127,[88]]]],204],51],[189,204],0,0,[[]],[[]],[[]],[[]],[[],39],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[206,26],27],[[206,26],27],[[]],[[]],[56,206],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[62],[[46,136,148,55,45],[[8,[206]]]],[[46,[10,[[127,[88]]]],54,55,45,[34,[189]]],[[8,[206]]]],[206,[[10,[109]]]],[[],39],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[207,[[52,[51]]]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[],207],[[207,53,54,55,45],[[8,[56]]]],[[208,53,54,55,45],[[8,[56]]]],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],10],[[],10],[[207,55]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[45,57,58],59],[[45,209,58],59],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,[[[210,[57]],57]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[[210,[57]]]],[[],[[210,[57]]]],[[]],[[]],[[]],0,[[58,45]],[[],49],[132,49],[209,49],0,0,[[]],[[]],[[]],0,[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[[210,[57]]]],[[],5],[[],5],[[],5],0,0,0,[[45,58],59],[[[210,[57]]],37],[[[210,[57]]]],[[]],[132],[209],0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[58,45]],[[[212,[57,[211,[57]]]],58,45,57]],[[],49],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[],212],0,0,[[45,58],59],0,[[]],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],213],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[214,[34,[12]]]],0,0,0,[[],1],[[],1],[[]],[[]],0,[[]],[[]],0,[[]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[[],5],[214,215],[[],8],[[],8],[[],9],[[],10],0,0,[[],1],[[],1],[[]],[[]],0,[[],213],[[]],0,[[]],[[213,136],143],[[]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[[],5],0,0,0,0,[[],8],[[],8],[[],9],[[],10],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[216,216],[217,217],[218,218],[[]],[[]],[[]],[[]],[[]],[[]],[14,5],0,0,[[217,217],5],[[],5],[[],5],[[],5],[[216,26],27],[[217,26],27],[[218,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[],5],0,0,0,0,[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[219,136]],[[160,136],192],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[136,154,157],160],[[220,221,[0,[154,155]],157],160],[219,5],[160,222],0,[160,222],0,[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[160,142],5],[[],5],[[],5],[[],5],[[],5],[[],5],[223,224],0,0,0,[[160,136]],[[160,[0,[154,155]],159],[[8,[158]]]],[[219,[0,[154,155]],159],[[8,[158]]]],[[160,7,7]],[[219,7,7,136]],[160,223],0,0,[219,220],0,[160,139],0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],0,[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[192],[[]],[[]],[[192,26],27],[[]],[[]],[225,192],[226,192],[137,5],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[138,136,139,7,7,142,140],137],0,[192,[[10,[226]]]],0,[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],10],[[],10],0,0,0,0,[[],1],[[],1],[[]],[[]],0,0,[227,213],[[]],0,[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[[],5],0,0,[[[127,[88]],157,218,217,5,5,5,5,5,5],227],0,0,[[],8],[[],8],[[],9],[[],10],0,0,0,0,[[],1],[[],1],[[]],[[]],[[]],[[58,[228,[7]],[228,[7]]]],[[58,[228,[7]],36,[228,[7]]]],[[58,190,64]],[[58,190,64]],[[]],[[58,88]],[[]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[[],5],[229,58],0,[58],[[58,88]],[[58,37,141,[34,[7]]]],[[58,230]],[[58,231,232]],[[58,233,7,[34,[12]]]],[[58,143]],[[58,7,7,7,7]],[[58,7]],[[58,37,231]],[[58,172,172,172,172,172,172]],[[],8],[[],8],[[],9],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[139,139],[[],234],[[],235],[[],235],[[],235],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],14],[[],14],[[],14],[[],14],[[],14],[[139,236],[[10,[139]]]],0,[[234,234],234],[[235,235],235],[[234,234]],[[235,235]],[[234,234],234],[[235,235],235],[[234,234]],[[235,235]],[234,7],[234,7],[235,64],[235,64],[[234,234],234],[[235,235],235],[[234,234]],[[235,235]],[139],[[139,[10,[236]]],[[10,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[237,237],5],[[237,237,5,77]],[238,238],[234,234],[235,235],[237,237],[139,139],[156,156],[239,239],[142,142],[157,157],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[234,234],[235,235],[139,12],[[139,236],12],0,[[234,234],5],[[235,235],5],[234,5],[235,5],[[],238],[[],235],[[],237],[[],156],[[],142],[[],157],0,0,[[234,234],234],[[235,235],235],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],237],[[],237],[14,5],[14,5],[14,5],[14,5],[14,5],[25],[25],[25],[25],[25],[[],234],[[],235],[[238,238],5],[[234,234],5],[[235,235],5],[[237,237],5],[[139,139],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[234,205]],[[235,205]],0,[[238,26],[[8,[240]]]],[[234,26],[[8,[240]]]],[[234,26],[[8,[240]]]],[[234,26],[[8,[240]]]],[[234,26],[[8,[240]]]],[[234,26],[[8,[240]]]],[[235,26],[[8,[240]]]],[[235,26],[[8,[240]]]],[[235,26],[[8,[240]]]],[[235,26],[[8,[240]]]],[[235,26],[[8,[240]]]],[[237,26],[[8,[240]]]],[[139,26],[[8,[240]]]],[[]],[[]],[241,234],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,[[10,[234]]]],[64,[[10,[235]]]],[7,234],[7,234],[64,235],[64,235],[7,234],[64,235],[205,234],[205,235],[88,[[10,[234]]]],[88,[[10,[235]]]],[[139,235],242],[139,5],[139,5],[139,5],[[238,25]],[[234,25]],[[235,25]],[[237,25]],[[139,25]],[[234,234]],[[235,235]],[[234,234],234],[[235,235],235],[[234,234],5],[[235,235],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[234],[235],[234,5],[235,5],[139,5],[139,5],[[139,139],5],[139,5],[234,5],[235,5],[142,5],[139,5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[234,[[243,[234]]]],[235,[[243,[235]]]],[234,[[244,[234]]]],[235,[[244,[235]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[234,234],[235,235],0,0,0,[[234,234]],[[235,235]],[139,139],[139,235],[[139,[10,[236]]],[[10,[245]]]],0,[[234,234,5]],[[235,235,5]],[[234,234],234],[[235,235],235],[[234,234]],[[235,235]],[[234,234],234],[[235,235],235],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[234,234]],[[235,235]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[234,234],234],[[235,235],235],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[237,237],237],[[237,237],237],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[246,246],[247,247],[248,248],[249,249],[250,250],[251,251],[252,252],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],246],[[],248],[[],252],[[],217],[253,217],[254,217],[255,217],[[],218],[253,218],[254,218],[255,218],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[249,26],27],0,0,0,[16,256],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[257,258],246],[246,247],[[259,259],248],[172,250],[[257,172],251],[[259,259],252],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,[6],0,[[],1],[[],1],[[]],[[]],[[],260],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[[],5],[260,[[127,[88]]]],[[260,6]],[[],8],[[],8],[[],9],[[],10],0,[[],1],[[],1],[[]],[[]],[[],261],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[[],5],[261,[[127,[88]]]],[[261,6]],[[],8],[[],8],[[],9],[[],10],[6],[6],[6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[262,262],[262,262],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[263,[[10,[[228,[214]]]]]],0,[262],[264,264],[265,265],[263,263],[[]],[[]],[[]],[265,17],[263,17],0,[[],[[267,[266]]]],[[],262],[[]],[[]],[[]],[[]],[[]],[[264,26],27],[[265,26],27],[[263,26],27],[[]],[[]],[[]],[[]],[[]],[[17,45,37],[[10,[[52,[17]]]]]],[[17,45],[[10,[17]]]],[[17,45],5],[[[267,[266]],17,45],5],[[262,17,45],5],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[17,13],263],0,0,0,[[265,77]],[[263,64]],0,0,[[]],[[]],[[]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[[269,[268]]]],[[]],[[]],[[[270,[91]],26],27],[[]],[[]],[[[269,[268]],28,182,13,45],[[52,[265]]]],0,0,[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[[269,[268]]],33],[215,[[269,[268]]]],[214,270],0,[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],10],[[],10],[[[269,[268]],[52,[265]]]],[[[269,[268]],268,170]],0,0,0,0,0,[[],1],[[],1],[[]],[[]],[271,167],0,[271,167],[271,15],[[271,[177,[15]]],[[177,[15]]]],[271,[[40,[15]]]],[[271,[177,[15]]],[[272,[15]]]],[[271,11],[[10,[28]]]],[271,5],[271,5],[[]],[271,169],0,[[]],[[271,15,[168,[15]]],15],[[[272,[15]],[272,[15]],[272,[15]],[272,[15]]],15],0,[[]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[[],5],[[223,16,13,[176,[[273,[15]]]],[176,[[173,[15]]]]],271],0,[[271,7,7]],[[271,169]],[[],8],[[],8],[[],9],[[],10],[271],[[271,13]],[271,170],[[271,174],[[10,[[35,[15]]]]]],[271,[[10,[[35,[15]]]]]],0,[[271,[272,[15]],174],[[272,[15]]]],[[271,[175,[15]],174,5],[[10,[[175,[15]]]]]],[[[272,[15]],174,15,15],[[272,[15]]]],[271,13],0,0,0,0,0,0,0,[[42,274,275],42],[[42,274,274,275],42],[[42,274,274,275],42],[[42,274,276],42],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[42],[[],42],[[]],[[]],[[[3,[275]]],[[8,[[3,[275]],[3,[275]]]]]],[[]],[275,[[10,[275]]]],[[[4,[275]]],[[8,[[4,[275]],[4,[275]]]]]],[275,[[10,[275]]]],[[274,274],5],[[]],[[]],[[]],[[42,274],[[10,[275]]]],[[42,274],[[10,[275]]]],[[274,25]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[275,5],[[],5],[[],5],[[],5],[42,33],[[[23,[275]]],[[277,[275]]]],[[42,274],42],[6],[[278,6]],[[[277,[275]],6]],[[42,6]],[[42,6]],[[42,274,98],42],0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[281,[[280,[279]]]]],[[23,[279]]]],[[[281,[[282,[279]]]]],[[23,[279]]]],[[[281,[[283,[279]]]]],[[23,[279]]]],[[[281,[[284,[279]]]]],[[23,[279]]]],[[[281,[[285,[279]]]]],[[23,[279]]]],[[[281,[[286,[279]]]]],[[23,[279]]]],[[[281,[[287,[279]]]]],[[23,[279]]]],[[[281,[[288,[279]]]]],[[23,[279]]]],[[[281,[[289,[279]]]]],[[23,[279]]]],[[[281,[[290,[279]]]]],[[23,[279]]]],[[[281,[[291,[279]]]]],[[23,[279]]]],[[[281,[[292,[279]]]]],[[23,[279]]]],[[[281,[[293,[279]]]]],[[23,[279]]]],[[[281,[[294,[279]]]]],[[23,[279]]]],[[[281,[[295,[279]]]]],[[23,[279]]]],[[[281,[[296,[279]]]]],[[23,[279]]]],[[[281,[[297,[279]]]]],[[23,[279]]]],[[[281,[[298,[279]]]]],[[23,[279]]]],[[[281,[[299,[279]]]]],[[23,[279]]]],[[[281,[[300,[279]]]]],[[23,[279]]]],[[[281,[[301,[279]]]]],[[23,[279]]]],[[[281,[[302,[279]]]]],[[23,[279]]]],[[[281,[[303,[279]]]]],[[23,[279]]]],[[[281,[[304,[279]]]]],[[23,[279]]]],[[[281,[[305,[279]]]]],[[23,[279]]]],[[[281,[[306,[279]]]]],[[23,[279]]]],[[[281,[[307,[279]]]]],[[23,[279]]]],[[[281,[[308,[279]]]]],[[23,[279]]]],[[[281,[[309,[279]]]]],[[23,[279]]]],[[[281,[[310,[279]]]]],[[23,[279]]]],[[[281,[[311,[279]]]]],[[23,[279]]]],[[[281,[[312,[279]]]]],[[23,[279]]]],[[[281,[[313,[279]]]]],[[23,[279]]]],[[[281,[[314,[279]]]]],[[23,[279]]]],[[[281,[[315,[279]]]]],[[23,[279]]]],[[[281,[[316,[279]]]]],[[23,[279]]]],[[[317,[[285,[279]]]]],[[23,[279]]]],[[[317,[[316,[279]]]]],[[23,[279]]]],[[[317,[[296,[279]]]]],[[23,[279]]]],[[[317,[[298,[279]]]]],[[23,[279]]]],[[[317,[[286,[279]]]]],[[23,[279]]]],[[[317,[[311,[279]]]]],[[23,[279]]]],[[[317,[[297,[279]]]]],[[23,[279]]]],[[[317,[[290,[279]]]]],[[23,[279]]]],[[[317,[[309,[279]]]]],[[23,[279]]]],[[[317,[[308,[279]]]]],[[23,[279]]]],[[[317,[[303,[279]]]]],[[23,[279]]]],[[[317,[[280,[279]]]]],[[23,[279]]]],[[[317,[[306,[279]]]]],[[23,[279]]]],[[[317,[[287,[279]]]]],[[23,[279]]]],[[[317,[[302,[279]]]]],[[23,[279]]]],[[[317,[[307,[279]]]]],[[23,[279]]]],[[[317,[[312,[279]]]]],[[23,[279]]]],[[[317,[[299,[279]]]]],[[23,[279]]]],[[[317,[[300,[279]]]]],[[23,[279]]]],[[[317,[[301,[279]]]]],[[23,[279]]]],[[[317,[[310,[279]]]]],[[23,[279]]]],[[[317,[[313,[279]]]]],[[23,[279]]]],[[[317,[[289,[279]]]]],[[23,[279]]]],[[[317,[[294,[279]]]]],[[23,[279]]]],[[[317,[[288,[279]]]]],[[23,[279]]]],[[[317,[[283,[279]]]]],[[23,[279]]]],[[[317,[[314,[279]]]]],[[23,[279]]]],[[[317,[[291,[279]]]]],[[23,[279]]]],[[[317,[[284,[279]]]]],[[23,[279]]]],[[[317,[[295,[279]]]]],[[23,[279]]]],[[[317,[[304,[279]]]]],[[23,[279]]]],[[[317,[[293,[279]]]]],[[23,[279]]]],[[[317,[[305,[279]]]]],[[23,[279]]]],[[[317,[[315,[279]]]]],[[23,[279]]]],[[[317,[[292,[279]]]]],[[23,[279]]]],[[[317,[[282,[279]]]]],[[23,[279]]]],[288,23],[304,23],[289,23],[285,23],[296,23],[287,23],[282,23],[283,23],[316,23],[310,23],[280,23],[305,23],[284,23],[314,23],[309,23],[292,23],[299,23],[313,23],[315,23],[307,23],[293,23],[312,23],[298,23],[295,23],[291,23],[286,23],[290,23],[311,23],[297,23],[302,23],[301,23],[300,23],[303,23],[308,23],[294,23],[306,23],[[[281,[[310,[279]]]]],[[23,[279]]]],[[[281,[[309,[279]]]]],[[23,[279]]]],[[[281,[[285,[279]]]]],[[23,[279]]]],[[[281,[[296,[279]]]]],[[23,[279]]]],[[[281,[[280,[279]]]]],[[23,[279]]]],[[[281,[[287,[279]]]]],[[23,[279]]]],[[[281,[[302,[279]]]]],[[23,[279]]]],[[[281,[[300,[279]]]]],[[23,[279]]]],[[[281,[[294,[279]]]]],[[23,[279]]]],[[[281,[[311,[279]]]]],[[23,[279]]]],[[[281,[[312,[279]]]]],[[23,[279]]]],[[[281,[[305,[279]]]]],[[23,[279]]]],[[[281,[[298,[279]]]]],[[23,[279]]]],[[[281,[[297,[279]]]]],[[23,[279]]]],[[[281,[[283,[279]]]]],[[23,[279]]]],[[[281,[[301,[279]]]]],[[23,[279]]]],[[[281,[[316,[279]]]]],[[23,[279]]]],[[[281,[[292,[279]]]]],[[23,[279]]]],[[[281,[[313,[279]]]]],[[23,[279]]]],[[[281,[[284,[279]]]]],[[23,[279]]]],[[[281,[[282,[279]]]]],[[23,[279]]]],[[[281,[[288,[279]]]]],[[23,[279]]]],[[[281,[[291,[279]]]]],[[23,[279]]]],[[[281,[[307,[279]]]]],[[23,[279]]]],[[[281,[[314,[279]]]]],[[23,[279]]]],[[[281,[[315,[279]]]]],[[23,[279]]]],[[[281,[[299,[279]]]]],[[23,[279]]]],[[[281,[[303,[279]]]]],[[23,[279]]]],[[[281,[[295,[279]]]]],[[23,[279]]]],[[[281,[[306,[279]]]]],[[23,[279]]]],[[[281,[[290,[279]]]]],[[23,[279]]]],[[[281,[[286,[279]]]]],[[23,[279]]]],[[[281,[[304,[279]]]]],[[23,[279]]]],[[[281,[[308,[279]]]]],[[23,[279]]]],[[[281,[[293,[279]]]]],[[23,[279]]]],[[[281,[[289,[279]]]]],[[23,[279]]]],[[[317,[[312,[279]]]]],[[23,[279]]]],[[[317,[[284,[279]]]]],[[23,[279]]]],[[[317,[[313,[279]]]]],[[23,[279]]]],[[[317,[[315,[279]]]]],[[23,[279]]]],[[[317,[[289,[279]]]]],[[23,[279]]]],[[[317,[[299,[279]]]]],[[23,[279]]]],[[[317,[[302,[279]]]]],[[23,[279]]]],[[[317,[[303,[279]]]]],[[23,[279]]]],[[[317,[[310,[279]]]]],[[23,[279]]]],[[[317,[[282,[279]]]]],[[23,[279]]]],[[[317,[[285,[279]]]]],[[23,[279]]]],[[[317,[[301,[279]]]]],[[23,[279]]]],[[[317,[[305,[279]]]]],[[23,[279]]]],[[[317,[[295,[279]]]]],[[23,[279]]]],[[[317,[[298,[279]]]]],[[23,[279]]]],[[[317,[[304,[279]]]]],[[23,[279]]]],[[[317,[[294,[279]]]]],[[23,[279]]]],[[[317,[[288,[279]]]]],[[23,[279]]]],[[[317,[[311,[279]]]]],[[23,[279]]]],[[[317,[[297,[279]]]]],[[23,[279]]]],[[[317,[[290,[279]]]]],[[23,[279]]]],[[[317,[[309,[279]]]]],[[23,[279]]]],[[[317,[[316,[279]]]]],[[23,[279]]]],[[[317,[[293,[279]]]]],[[23,[279]]]],[[[317,[[307,[279]]]]],[[23,[279]]]],[[[317,[[292,[279]]]]],[[23,[279]]]],[[[317,[[306,[279]]]]],[[23,[279]]]],[[[317,[[280,[279]]]]],[[23,[279]]]],[[[317,[[291,[279]]]]],[[23,[279]]]],[[[317,[[283,[279]]]]],[[23,[279]]]],[[[317,[[314,[279]]]]],[[23,[279]]]],[[[317,[[287,[279]]]]],[[23,[279]]]],[[[317,[[296,[279]]]]],[[23,[279]]]],[[[317,[[300,[279]]]]],[[23,[279]]]],[[[317,[[308,[279]]]]],[[23,[279]]]],[[[317,[[286,[279]]]]],[[23,[279]]]],[288,23],[304,23],[289,23],[285,23],[296,23],[287,23],[282,23],[283,23],[316,23],[310,23],[280,23],[305,23],[284,23],[314,23],[309,23],[292,23],[299,23],[313,23],[315,23],[307,23],[293,23],[312,23],[298,23],[295,23],[291,23],[286,23],[290,23],[311,23],[297,23],[302,23],[301,23],[300,23],[303,23],[308,23],[294,23],[306,23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[[281,[[0,[85,318]]]]],[[281,[[0,[85,318]]]]]],[[[317,[[0,[85,318]]]]],[[317,[[0,[85,318]]]]]],[319,319],[[[288,[85]]],[[288,[85]]]],[[[304,[85]]],[[304,[85]]]],[[[289,[85]]],[[289,[85]]]],[[[285,[85]]],[[285,[85]]]],[[[296,[85]]],[[296,[85]]]],[[[287,[85]]],[[287,[85]]]],[[[282,[85]]],[[282,[85]]]],[[[283,[85]]],[[283,[85]]]],[[[316,[85]]],[[316,[85]]]],[[[310,[85]]],[[310,[85]]]],[[[280,[85]]],[[280,[85]]]],[[[305,[85]]],[[305,[85]]]],[[[284,[85]]],[[284,[85]]]],[[[314,[85]]],[[314,[85]]]],[[[309,[85]]],[[309,[85]]]],[[[292,[85]]],[[292,[85]]]],[[[299,[85]]],[[299,[85]]]],[[[313,[85]]],[[313,[85]]]],[[[315,[85]]],[[315,[85]]]],[[[307,[85]]],[[307,[85]]]],[[[293,[85]]],[[293,[85]]]],[[[312,[85]]],[[312,[85]]]],[[[298,[85]]],[[298,[85]]]],[[[295,[85]]],[[295,[85]]]],[[[291,[85]]],[[291,[85]]]],[[[286,[85]]],[[286,[85]]]],[[[290,[85]]],[[290,[85]]]],[[[311,[85]]],[[311,[85]]]],[[[297,[85]]],[[297,[85]]]],[[[302,[85]]],[[302,[85]]]],[[[301,[85]]],[[301,[85]]]],[[[300,[85]]],[[300,[85]]]],[[[303,[85]]],[[303,[85]]]],[[[308,[85]]],[[308,[85]]]],[[[294,[85]]],[[294,[85]]]],[[[306,[85]]],[[306,[85]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[288,[320]],[288,[320]]],22],[[[304,[320]],[304,[320]]],22],[[[289,[320]],[289,[320]]],22],[[[285,[320]],[285,[320]]],22],[[[296,[320]],[296,[320]]],22],[[[287,[320]],[287,[320]]],22],[[[282,[320]],[282,[320]]],22],[[[283,[320]],[283,[320]]],22],[[[316,[320]],[316,[320]]],22],[[[310,[320]],[310,[320]]],22],[[[280,[320]],[280,[320]]],22],[[[305,[320]],[305,[320]]],22],[[[284,[320]],[284,[320]]],22],[[[314,[320]],[314,[320]]],22],[[[309,[320]],[309,[320]]],22],[[[292,[320]],[292,[320]]],22],[[[299,[320]],[299,[320]]],22],[[[313,[320]],[313,[320]]],22],[[[315,[320]],[315,[320]]],22],[[[307,[320]],[307,[320]]],22],[[[293,[320]],[293,[320]]],22],[[[312,[320]],[312,[320]]],22],[[[298,[320]],[298,[320]]],22],[[[295,[320]],[295,[320]]],22],[[[291,[320]],[291,[320]]],22],[[[286,[320]],[286,[320]]],22],[[[290,[320]],[290,[320]]],22],[[[311,[320]],[311,[320]]],22],[[[297,[320]],[297,[320]]],22],[[[302,[320]],[302,[320]]],22],[[[301,[320]],[301,[320]]],22],[[[300,[320]],[300,[320]]],22],[[[303,[320]],[303,[320]]],22],[[[308,[320]],[308,[320]]],22],[[[294,[320]],[294,[320]]],22],[[[306,[320]],[306,[320]]],22],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[14,5],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[[[281,[[0,[[321,[[0,[[321,[[0,[[321,[[0,[321,318]]]],318]]]],318]]]],318]]]],[281,[[0,[[321,[[0,[[321,[[0,[[321,[[0,[321,318]]]],318]]]],318]]]],318]]]]],5],[[[317,[[0,[[321,[[0,[[321,[[0,[[321,[[0,[321,318]]]],318]]]],318]]]],318]]]],[317,[[0,[[321,[[0,[[321,[[0,[[321,[[0,[321,318]]]],318]]]],318]]]],318]]]]],5],[[319,319],5],[[[288,[[321,[[321,[[321,[321]]]]]]]],[288,[[321,[[321,[[321,[321]]]]]]]]],5],[[[304,[[321,[[321,[[321,[321]]]]]]]],[304,[[321,[[321,[[321,[321]]]]]]]]],5],[[[289,[[321,[[321,[[321,[321]]]]]]]],[289,[[321,[[321,[[321,[321]]]]]]]]],5],[[[285,[[321,[[321,[[321,[321]]]]]]]],[285,[[321,[[321,[[321,[321]]]]]]]]],5],[[[296,[[321,[[321,[[321,[321]]]]]]]],[296,[[321,[[321,[[321,[321]]]]]]]]],5],[[[287,[[321,[[321,[[321,[321]]]]]]]],[287,[[321,[[321,[[321,[321]]]]]]]]],5],[[[282,[[321,[[321,[[321,[321]]]]]]]],[282,[[321,[[321,[[321,[321]]]]]]]]],5],[[[283,[[321,[[321,[[321,[321]]]]]]]],[283,[[321,[[321,[[321,[321]]]]]]]]],5],[[[316,[[321,[[321,[[321,[321]]]]]]]],[316,[[321,[[321,[[321,[321]]]]]]]]],5],[[[310,[[321,[[321,[[321,[321]]]]]]]],[310,[[321,[[321,[[321,[321]]]]]]]]],5],[[[280,[[321,[[321,[[321,[321]]]]]]]],[280,[[321,[[321,[[321,[321]]]]]]]]],5],[[[305,[[321,[[321,[[321,[321]]]]]]]],[305,[[321,[[321,[[321,[321]]]]]]]]],5],[[[284,[[321,[[321,[[321,[321]]]]]]]],[284,[[321,[[321,[[321,[321]]]]]]]]],5],[[[314,[[321,[[321,[[321,[321]]]]]]]],[314,[[321,[[321,[[321,[321]]]]]]]]],5],[[[309,[[321,[[321,[[321,[321]]]]]]]],[309,[[321,[[321,[[321,[321]]]]]]]]],5],[[[292,[[321,[[321,[[321,[321]]]]]]]],[292,[[321,[[321,[[321,[321]]]]]]]]],5],[[[299,[[321,[[321,[[321,[321]]]]]]]],[299,[[321,[[321,[[321,[321]]]]]]]]],5],[[[313,[[321,[[321,[[321,[321]]]]]]]],[313,[[321,[[321,[[321,[321]]]]]]]]],5],[[[315,[[321,[[321,[[321,[321]]]]]]]],[315,[[321,[[321,[[321,[321]]]]]]]]],5],[[[307,[[321,[[321,[[321,[321]]]]]]]],[307,[[321,[[321,[[321,[321]]]]]]]]],5],[[[293,[[321,[[321,[[321,[321]]]]]]]],[293,[[321,[[321,[[321,[321]]]]]]]]],5],[[[312,[[321,[[321,[[321,[321]]]]]]]],[312,[[321,[[321,[[321,[321]]]]]]]]],5],[[[298,[[321,[[321,[[321,[321]]]]]]]],[298,[[321,[[321,[[321,[321]]]]]]]]],5],[[[295,[[321,[[321,[[321,[321]]]]]]]],[295,[[321,[[321,[[321,[321]]]]]]]]],5],[[[291,[[321,[[321,[[321,[321]]]]]]]],[291,[[321,[[321,[[321,[321]]]]]]]]],5],[[[286,[[321,[[321,[[321,[321]]]]]]]],[286,[[321,[[321,[[321,[321]]]]]]]]],5],[[[290,[[321,[[321,[[321,[321]]]]]]]],[290,[[321,[[321,[[321,[321]]]]]]]]],5],[[[311,[[321,[[321,[[321,[321]]]]]]]],[311,[[321,[[321,[[321,[321]]]]]]]]],5],[[[297,[[321,[[321,[[321,[321]]]]]]]],[297,[[321,[[321,[[321,[321]]]]]]]]],5],[[[302,[[321,[[321,[[321,[321]]]]]]]],[302,[[321,[[321,[[321,[321]]]]]]]]],5],[[[301,[[321,[[321,[[321,[321]]]]]]]],[301,[[321,[[321,[[321,[321]]]]]]]]],5],[[[300,[[321,[[321,[[321,[321]]]]]]]],[300,[[321,[[321,[[321,[321]]]]]]]]],5],[[[303,[[321,[[321,[[321,[321]]]]]]]],[303,[[321,[[321,[[321,[321]]]]]]]]],5],[[[308,[[321,[[321,[[321,[321]]]]]]]],[308,[[321,[[321,[[321,[321]]]]]]]]],5],[[[294,[[321,[[321,[[321,[321]]]]]]]],[294,[[321,[[321,[[321,[321]]]]]]]]],5],[[[306,[[321,[[321,[[321,[321]]]]]]]],[306,[[321,[[321,[[321,[321]]]]]]]]],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[281,[[0,[91,318]]]],26],[[8,[240]]]],[[[317,[[0,[91,318]]]],26],[[8,[240]]]],[[319,26],[[8,[240]]]],[[[288,[91]],26],[[8,[240]]]],[[[304,[91]],26],[[8,[240]]]],[[[289,[91]],26],[[8,[240]]]],[[[285,[91]],26],[[8,[240]]]],[[[296,[91]],26],[[8,[240]]]],[[[287,[91]],26],[[8,[240]]]],[[[282,[91]],26],[[8,[240]]]],[[[283,[91]],26],[[8,[240]]]],[[[316,[91]],26],[[8,[240]]]],[[[310,[91]],26],[[8,[240]]]],[[[280,[91]],26],[[8,[240]]]],[[[305,[91]],26],[[8,[240]]]],[[[284,[91]],26],[[8,[240]]]],[[[314,[91]],26],[[8,[240]]]],[[[309,[91]],26],[[8,[240]]]],[[[292,[91]],26],[[8,[240]]]],[[[299,[91]],26],[[8,[240]]]],[[[313,[91]],26],[[8,[240]]]],[[[315,[91]],26],[[8,[240]]]],[[[307,[91]],26],[[8,[240]]]],[[[293,[91]],26],[[8,[240]]]],[[[312,[91]],26],[[8,[240]]]],[[[298,[91]],26],[[8,[240]]]],[[[295,[91]],26],[[8,[240]]]],[[[291,[91]],26],[[8,[240]]]],[[[286,[91]],26],[[8,[240]]]],[[[290,[91]],26],[[8,[240]]]],[[[311,[91]],26],[[8,[240]]]],[[[297,[91]],26],[[8,[240]]]],[[[302,[91]],26],[[8,[240]]]],[[[301,[91]],26],[[8,[240]]]],[[[300,[91]],26],[[8,[240]]]],[[[303,[91]],26],[[8,[240]]]],[[[308,[91]],26],[[8,[240]]]],[[[294,[91]],26],[[8,[240]]]],[[[306,[91]],26],[[8,[240]]]],[[[23,[279]]],[[281,[[303,[279]]]]]],[[[23,[279]]],[[281,[[305,[279]]]]]],[[]],[[[23,[279]]],[[281,[[307,[279]]]]]],[[[23,[279]]],[[281,[[283,[279]]]]]],[[[23,[279]]],[[281,[[306,[279]]]]]],[[[23,[279]]],[[281,[[296,[279]]]]]],[[[23,[279]]],[[281,[[300,[279]]]]]],[[[23,[279]]],[[281,[[308,[279]]]]]],[[[23,[279]]],[[281,[[286,[279]]]]]],[[[23,[279]]],[[281,[[292,[279]]]]]],[[[23,[279]]],[[281,[[293,[279]]]]]],[[[23,[279]]],[[281,[[284,[279]]]]]],[[[23,[279]]],[[281,[[294,[279]]]]]],[[[23,[279]]],[[281,[[299,[279]]]]]],[322,[[281,[[288,[15]]]]]],[[[23,[279]]],[[281,[[287,[279]]]]]],[[[23,[279]]],[[281,[[282,[279]]]]]],[[[23,[279]]],[[281,[[280,[279]]]]]],[[[23,[279]]],[[281,[[310,[279]]]]]],[[[23,[279]]],[[281,[[316,[279]]]]]],[[[23,[279]]],[[281,[[297,[279]]]]]],[[[23,[279]]],[[281,[[298,[279]]]]]],[[[23,[279]]],[[281,[[301,[279]]]]]],[[[23,[279]]],[[281,[[295,[279]]]]]],[322,[[281,[[288,[172]]]]]],[322,[[281,[[288,[12]]]]]],[[[23,[279]]],[[281,[[289,[279]]]]]],[[[23,[279]]],[[281,[[309,[279]]]]]],[[[23,[279]]],[[281,[[314,[279]]]]]],[[[23,[279]]],[[281,[[285,[279]]]]]],[[[23,[279]]],[[281,[[315,[279]]]]]],[[[23,[279]]],[[281,[[291,[279]]]]]],[[[23,[279]]],[[281,[[288,[279]]]]]],[[[23,[279]]],[[281,[[312,[279]]]]]],[[[23,[279]]],[[281,[[304,[279]]]]]],[[[23,[279]]],[[281,[[311,[279]]]]]],[[[23,[279]]],[[281,[[290,[279]]]]]],[[[23,[279]]],[[281,[[302,[279]]]]]],[[[23,[279]]],[[281,[[313,[279]]]]]],[[[23,[279]]],[[317,[[313,[279]]]]]],[[[23,[279]]],[[317,[[302,[279]]]]]],[[[23,[279]]],[[317,[[294,[279]]]]]],[[[23,[279]]],[[317,[[308,[279]]]]]],[[[23,[279]]],[[317,[[301,[279]]]]]],[[[23,[279]]],[[317,[[312,[279]]]]]],[[[23,[279]]],[[317,[[315,[279]]]]]],[[[23,[279]]],[[317,[[307,[279]]]]]],[[[23,[279]]],[[317,[[292,[279]]]]]],[[[23,[279]]],[[317,[[297,[279]]]]]],[[[23,[279]]],[[317,[[314,[279]]]]]],[[[23,[279]]],[[317,[[288,[279]]]]]],[[[23,[279]]],[[317,[[304,[279]]]]]],[[[23,[279]]],[[317,[[285,[279]]]]]],[[[23,[279]]],[[317,[[306,[279]]]]]],[[[23,[279]]],[[317,[[310,[279]]]]]],[[[23,[279]]],[[317,[[283,[279]]]]]],[[[23,[279]]],[[317,[[295,[279]]]]]],[[[23,[279]]],[[317,[[298,[279]]]]]],[[[23,[279]]],[[317,[[303,[279]]]]]],[[[23,[279]]],[[317,[[282,[279]]]]]],[[[23,[279]]],[[317,[[284,[279]]]]]],[[[23,[279]]],[[317,[[316,[279]]]]]],[[[23,[279]]],[[317,[[280,[279]]]]]],[[[23,[279]]],[[317,[[286,[279]]]]]],[[[23,[279]]],[[317,[[287,[279]]]]]],[[]],[[[23,[279]]],[[317,[[289,[279]]]]]],[[[23,[279]]],[[317,[[296,[279]]]]]],[[[23,[279]]],[[317,[[309,[279]]]]]],[[[23,[279]]],[[317,[[305,[279]]]]]],[[[23,[279]]],[[317,[[291,[279]]]]]],[[[23,[279]]],[[317,[[299,[279]]]]]],[[[23,[279]]],[[317,[[311,[279]]]]]],[[[23,[279]]],[[317,[[293,[279]]]]]],[[[23,[279]]],[[317,[[300,[279]]]]]],[[[23,[279]]],[[317,[[290,[279]]]]]],[[]],[322,[[288,[12]]]],[322,[[288,[172]]]],[[[281,[[288,[279]]]]],[[288,[279]]]],[322,[[288,[15]]]],[[]],[23,288],[[[317,[[288,[279]]]]],[[288,[279]]]],[[[281,[[304,[279]]]]],[[304,[279]]]],[23,304],[[[317,[[304,[279]]]]],[[304,[279]]]],[[]],[[[281,[[289,[279]]]]],[[289,[279]]]],[[[317,[[289,[279]]]]],[[289,[279]]]],[[]],[23,289],[[[317,[[285,[279]]]]],[[285,[279]]]],[23,285],[[[281,[[285,[279]]]]],[[285,[279]]]],[[]],[[]],[[[281,[[296,[279]]]]],[[296,[279]]]],[23,296],[[[317,[[296,[279]]]]],[[296,[279]]]],[[[317,[[287,[279]]]]],[[287,[279]]]],[[]],[23,287],[[[281,[[287,[279]]]]],[[287,[279]]]],[[]],[[[281,[[282,[279]]]]],[[282,[279]]]],[[[317,[[282,[279]]]]],[[282,[279]]]],[23,282],[[[281,[[283,[279]]]]],[[283,[279]]]],[23,283],[[]],[[[317,[[283,[279]]]]],[[283,[279]]]],[23,316],[[[317,[[316,[279]]]]],[[316,[279]]]],[[]],[[[281,[[316,[279]]]]],[[316,[279]]]],[[[317,[[310,[279]]]]],[[310,[279]]]],[23,310],[[[281,[[310,[279]]]]],[[310,[279]]]],[[]],[[[317,[[280,[279]]]]],[[280,[279]]]],[23,280],[[]],[[[281,[[280,[279]]]]],[[280,[279]]]],[[[281,[[305,[279]]]]],[[305,[279]]]],[[[317,[[305,[279]]]]],[[305,[279]]]],[23,305],[[]],[[]],[[[317,[[284,[279]]]]],[[284,[279]]]],[[[281,[[284,[279]]]]],[[284,[279]]]],[23,284],[[[281,[[314,[279]]]]],[[314,[279]]]],[23,314],[[]],[[[317,[[314,[279]]]]],[[314,[279]]]],[23,309],[[[281,[[309,[279]]]]],[[309,[279]]]],[[[317,[[309,[279]]]]],[[309,[279]]]],[[]],[23,292],[[[317,[[292,[279]]]]],[[292,[279]]]],[[]],[[[281,[[292,[279]]]]],[[292,[279]]]],[[[281,[[299,[279]]]]],[[299,[279]]]],[[[317,[[299,[279]]]]],[[299,[279]]]],[23,299],[[]],[[[317,[[313,[279]]]]],[[313,[279]]]],[23,313],[[[281,[[313,[279]]]]],[[313,[279]]]],[[]],[[[281,[[315,[279]]]]],[[315,[279]]]],[[]],[[[317,[[315,[279]]]]],[[315,[279]]]],[23,315],[23,307],[[[317,[[307,[279]]]]],[[307,[279]]]],[[[281,[[307,[279]]]]],[[307,[279]]]],[[]],[[[317,[[293,[279]]]]],[[293,[279]]]],[[]],[23,293],[[[281,[[293,[279]]]]],[[293,[279]]]],[23,312],[[[281,[[312,[279]]]]],[[312,[279]]]],[[]],[[[317,[[312,[279]]]]],[[312,[279]]]],[[[281,[[298,[279]]]]],[[298,[279]]]],[[[317,[[298,[279]]]]],[[298,[279]]]],[23,298],[[]],[[[317,[[295,[279]]]]],[[295,[279]]]],[[[281,[[295,[279]]]]],[[295,[279]]]],[23,295],[[]],[[[317,[[291,[279]]]]],[[291,[279]]]],[[]],[23,291],[[[281,[[291,[279]]]]],[[291,[279]]]],[[[281,[[286,[279]]]]],[[286,[279]]]],[23,286],[[[317,[[286,[279]]]]],[[286,[279]]]],[[]],[[[317,[[290,[279]]]]],[[290,[279]]]],[[]],[23,290],[[[281,[[290,[279]]]]],[[290,[279]]]],[[[317,[[311,[279]]]]],[[311,[279]]]],[[[281,[[311,[279]]]]],[[311,[279]]]],[23,311],[[]],[[[317,[[297,[279]]]]],[[297,[279]]]],[[[281,[[297,[279]]]]],[[297,[279]]]],[[]],[23,297],[23,302],[[[281,[[302,[279]]]]],[[302,[279]]]],[[]],[[[317,[[302,[279]]]]],[[302,[279]]]],[[]],[[[317,[[301,[279]]]]],[[301,[279]]]],[23,301],[[[281,[[301,[279]]]]],[[301,[279]]]],[[[281,[[300,[279]]]]],[[300,[279]]]],[23,300],[[[317,[[300,[279]]]]],[[300,[279]]]],[[]],[[[281,[[303,[279]]]]],[[303,[279]]]],[23,303],[[[317,[[303,[279]]]]],[[303,[279]]]],[[]],[[]],[[[281,[[308,[279]]]]],[[308,[279]]]],[[[317,[[308,[279]]]]],[[308,[279]]]],[23,308],[[]],[[[317,[[294,[279]]]]],[[294,[279]]]],[[[281,[[294,[279]]]]],[[294,[279]]]],[23,294],[[[317,[[306,[279]]]]],[[306,[279]]]],[23,306],[[]],[[[281,[[306,[279]]]]],[[306,[279]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[281,[[0,[323,318]]]],25]],[[[317,[[0,[323,318]]]],25]],[[319,25]],[[[288,[323]],25]],[[[304,[323]],25]],[[[289,[323]],25]],[[[285,[323]],25]],[[[296,[323]],25]],[[[287,[323]],25]],[[[282,[323]],25]],[[[283,[323]],25]],[[[316,[323]],25]],[[[310,[323]],25]],[[[280,[323]],25]],[[[305,[323]],25]],[[[284,[323]],25]],[[[314,[323]],25]],[[[309,[323]],25]],[[[292,[323]],25]],[[[299,[323]],25]],[[[313,[323]],25]],[[[315,[323]],25]],[[[307,[323]],25]],[[[293,[323]],25]],[[[312,[323]],25]],[[[298,[323]],25]],[[[295,[323]],25]],[[[291,[323]],25]],[[[286,[323]],25]],[[[290,[323]],25]],[[[311,[323]],25]],[[[297,[323]],25]],[[[302,[323]],25]],[[[301,[323]],25]],[[[300,[323]],25]],[[[303,[323]],25]],[[[308,[323]],25]],[[[294,[323]],25]],[[[306,[323]],25]],0,0,[[[281,[[313,[279]]]]],[[23,[279]]]],[[[281,[[286,[279]]]]],[[23,[279]]]],[[[281,[[299,[279]]]]],[[23,[279]]]],[[[281,[[295,[279]]]]],[[23,[279]]]],[[[281,[[296,[279]]]]],[[23,[279]]]],[[[281,[[288,[279]]]]],[[23,[279]]]],[[[281,[[287,[279]]]]],[[23,[279]]]],[[[281,[[292,[279]]]]],[[23,[279]]]],[[[281,[[304,[279]]]]],[[23,[279]]]],[[[281,[[316,[279]]]]],[[23,[279]]]],[[[281,[[308,[279]]]]],[[23,[279]]]],[[[281,[[289,[279]]]]],[[23,[279]]]],[[[281,[[307,[279]]]]],[[23,[279]]]],[[[281,[[297,[279]]]]],[[23,[279]]]],[[[281,[[305,[279]]]]],[[23,[279]]]],[[[281,[[314,[279]]]]],[[23,[279]]]],[[[281,[[301,[279]]]]],[[23,[279]]]],[[[281,[[306,[279]]]]],[[23,[279]]]],[[[281,[[298,[279]]]]],[[23,[279]]]],[[[281,[[290,[279]]]]],[[23,[279]]]],[[[281,[[282,[279]]]]],[[23,[279]]]],[[[281,[[311,[279]]]]],[[23,[279]]]],[[[281,[[303,[279]]]]],[[23,[279]]]],[[[281,[[309,[279]]]]],[[23,[279]]]],[[[281,[[293,[279]]]]],[[23,[279]]]],[[[281,[[310,[279]]]]],[[23,[279]]]],[[[281,[[285,[279]]]]],[[23,[279]]]],[[[281,[[315,[279]]]]],[[23,[279]]]],[[[281,[[280,[279]]]]],[[23,[279]]]],[[[281,[[312,[279]]]]],[[23,[279]]]],[[[281,[[302,[279]]]]],[[23,[279]]]],[[[281,[[300,[279]]]]],[[23,[279]]]],[[[281,[[294,[279]]]]],[[23,[279]]]],[[[281,[[284,[279]]]]],[[23,[279]]]],[[]],[[[281,[[283,[279]]]]],[[23,[279]]]],[[[281,[[291,[279]]]]],[[23,[279]]]],[[[317,[[293,[279]]]]],[[23,[279]]]],[[[317,[[284,[279]]]]],[[23,[279]]]],[[[317,[[301,[279]]]]],[[23,[279]]]],[[]],[[[317,[[300,[279]]]]],[[23,[279]]]],[[[317,[[311,[279]]]]],[[23,[279]]]],[[[317,[[316,[279]]]]],[[23,[279]]]],[[[317,[[282,[279]]]]],[[23,[279]]]],[[[317,[[289,[279]]]]],[[23,[279]]]],[[[317,[[313,[279]]]]],[[23,[279]]]],[[[317,[[292,[279]]]]],[[23,[279]]]],[[[317,[[303,[279]]]]],[[23,[279]]]],[[[317,[[283,[279]]]]],[[23,[279]]]],[[[317,[[295,[279]]]]],[[23,[279]]]],[[[317,[[304,[279]]]]],[[23,[279]]]],[[[317,[[296,[279]]]]],[[23,[279]]]],[[[317,[[294,[279]]]]],[[23,[279]]]],[[[317,[[287,[279]]]]],[[23,[279]]]],[[[317,[[297,[279]]]]],[[23,[279]]]],[[[317,[[291,[279]]]]],[[23,[279]]]],[[[317,[[305,[279]]]]],[[23,[279]]]],[[[317,[[315,[279]]]]],[[23,[279]]]],[[[317,[[312,[279]]]]],[[23,[279]]]],[[[317,[[308,[279]]]]],[[23,[279]]]],[[[317,[[310,[279]]]]],[[23,[279]]]],[[[317,[[286,[279]]]]],[[23,[279]]]],[[[317,[[302,[279]]]]],[[23,[279]]]],[[[317,[[299,[279]]]]],[[23,[279]]]],[[[317,[[280,[279]]]]],[[23,[279]]]],[[[317,[[309,[279]]]]],[[23,[279]]]],[[[317,[[307,[279]]]]],[[23,[279]]]],[[[317,[[285,[279]]]]],[[23,[279]]]],[[[317,[[298,[279]]]]],[[23,[279]]]],[[[317,[[314,[279]]]]],[[23,[279]]]],[[[317,[[306,[279]]]]],[[23,[279]]]],[[[317,[[290,[279]]]]],[[23,[279]]]],[[[317,[[288,[279]]]]],[[23,[279]]]],[[]],[288,23],[[]],[304,23],[[]],[289,23],[[]],[285,23],[[]],[296,23],[[]],[287,23],[[]],[[]],[282,23],[[]],[283,23],[316,23],[[]],[310,23],[[]],[[]],[280,23],[[]],[305,23],[[]],[284,23],[[]],[314,23],[309,23],[[]],[[]],[292,23],[[]],[299,23],[[]],[313,23],[[]],[315,23],[[]],[307,23],[293,23],[[]],[312,23],[[]],[298,23],[[]],[295,23],[[]],[[]],[291,23],[286,23],[[]],[[]],[290,23],[311,23],[[]],[[]],[297,23],[302,23],[[]],[301,23],[[]],[300,23],[[]],[[]],[303,23],[[]],[308,23],[294,23],[[]],[[]],[306,23],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,0,0,0,[319,37],[[[288,[[87,[[87,[[87,[87]]]]]]]],[288,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[304,[[87,[[87,[[87,[87]]]]]]]],[304,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[289,[[87,[[87,[[87,[87]]]]]]]],[289,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[285,[[87,[[87,[[87,[87]]]]]]]],[285,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[296,[[87,[[87,[[87,[87]]]]]]]],[296,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[287,[[87,[[87,[[87,[87]]]]]]]],[287,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[282,[[87,[[87,[[87,[87]]]]]]]],[282,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[283,[[87,[[87,[[87,[87]]]]]]]],[283,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[316,[[87,[[87,[[87,[87]]]]]]]],[316,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[310,[[87,[[87,[[87,[87]]]]]]]],[310,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[280,[[87,[[87,[[87,[87]]]]]]]],[280,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[305,[[87,[[87,[[87,[87]]]]]]]],[305,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[284,[[87,[[87,[[87,[87]]]]]]]],[284,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[314,[[87,[[87,[[87,[87]]]]]]]],[314,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[309,[[87,[[87,[[87,[87]]]]]]]],[309,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[292,[[87,[[87,[[87,[87]]]]]]]],[292,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[299,[[87,[[87,[[87,[87]]]]]]]],[299,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[313,[[87,[[87,[[87,[87]]]]]]]],[313,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[315,[[87,[[87,[[87,[87]]]]]]]],[315,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[307,[[87,[[87,[[87,[87]]]]]]]],[307,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[293,[[87,[[87,[[87,[87]]]]]]]],[293,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[312,[[87,[[87,[[87,[87]]]]]]]],[312,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[298,[[87,[[87,[[87,[87]]]]]]]],[298,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[295,[[87,[[87,[[87,[87]]]]]]]],[295,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[291,[[87,[[87,[[87,[87]]]]]]]],[291,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[286,[[87,[[87,[[87,[87]]]]]]]],[286,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[290,[[87,[[87,[[87,[87]]]]]]]],[290,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[311,[[87,[[87,[[87,[87]]]]]]]],[311,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[297,[[87,[[87,[[87,[87]]]]]]]],[297,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[302,[[87,[[87,[[87,[87]]]]]]]],[302,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[301,[[87,[[87,[[87,[87]]]]]]]],[301,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[300,[[87,[[87,[[87,[87]]]]]]]],[300,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[303,[[87,[[87,[[87,[87]]]]]]]],[303,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[308,[[87,[[87,[[87,[87]]]]]]]],[308,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[294,[[87,[[87,[[87,[87]]]]]]]],[294,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],[[[306,[[87,[[87,[[87,[87]]]]]]]],[306,[[87,[[87,[[87,[87]]]]]]]]],[[10,[22]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[324,324],[325,325],[326,326],[327,327],[328,328],[[]],[[]],[[]],[[]],[[]],[[],328],[24,[[8,[324]]]],[24,[[8,[325]]]],[24,[[8,[326]]]],[24,[[8,[327]]]],[24,[[8,[328]]]],[[]],[[]],[[]],[[]],[[]],0,[[324,26],27],[[325,26],27],[[326,26],27],[[327,26],27],[[328,26],27],[[]],[[]],[[]],[[]],[[]],[327,[[10,[[281,[[288,[172]]]]]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,[[324,38],8],[[325,38],8],[[326,38],8],[[327,38],8],[[328,38],8],0,0,[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[329,329],[330,330],[[]],[[]],[[],330],[24,[[8,[329]]]],[24,[[8,[330]]]],[[]],[[]],[[329,26],27],[[330,26],27],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],0,0,0,0,0,0,0,0,[[329,38],8],[[330,38],8],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[32,32],[331,331],[332,332],[[]],[[]],[[]],[[],32],[24,[[8,[32]]]],[24,[[8,[331]]]],[24,[[8,[332]]]],[[]],[[]],[[]],[[32,26],27],[[331,26],27],[[332,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[],5],0,0,0,[[32,38],8],[[331,38],8],[[332,38],8],0,[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],0,[[],1],[[],1],[[]],[[]],0,[114,114],[[]],[[],114],[24,[[8,[114]]]],[[]],[[114,26],27],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[[],5],0,0,0,0,[[114,38],8],0,[[]],[[],8],[[],8],[[],9],[[],10],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[],333],[334,333],[335],[335,334],[[],335],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],0,0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[]],[[]],[[],336],[[[3,[337]]],[[8,[[3,[337]],[3,[337]]]]]],[[]],[337,[[10,[337]]]],[[[4,[337]]],[[8,[[4,[337]],[4,[337]]]]]],[337,[[10,[337]]]],[336,5],[[]],[336,[[10,[337]]]],[336,[[10,[337]]]],[336,[[0,[337,338]]]],0,0,[336],[[336,337]],[[]],[[[3,[2]]],[[3,[1,2]]]],[4,[[4,[1]]]],[337,5],[[],5],[336,10],[336,10],[336,10],[336,10],[336,10],0,[[],8],[[],8],[[],9],[[],10],0,0,0,0,[[],1],[[],1],[[]],[[]],[[]],[[]],0,[[]],[[[3,[2]]],[[3,[1,2]]]],[4,[[4,[1]]]],[[],339],[339,339],[[],5],[[],[[127,[88]]]],[340,339],[6],0,0,[[],8],[[],8],[[],9],[[],10],0,0,0,[[],1],[[],1],[[]],[[]],[[]],[[]],0,[[]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[[]],[[],5],[[[341,[77]]],[[127,[88]]]],[[[341,[77]],6]],[[],8],[[],8],[[],9],[[],10],0,[[342,276],342],[[],1],[[],1],[[]],[[]],[[],342],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[4,[[4,[1]]]],[[],5],[[342,6]],0,[[],8],[[],8],[[],9],[[],10],[[342,276],342],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[149],[343,343],[[]],[[],344],[345,344],0,0,[346],[346,345],[[],149],[[],346],[[[3,[347]]],[[8,[[3,[347]],[3,[347]]]]]],[[]],[[]],[[]],[[]],[[]],[347,[[10,[347]]]],[[[4,[347]]],[[8,[[4,[347]],[4,[347]]]]]],[347,[[10,[347]]]],[[149,17],5],[[343,26],27],[[]],[[]],[[]],[[]],[[]],0,[[348,347],348],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[347,5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[149,343],10],[[149,17],10],[[149,343],10],[[149,17],10],[[149,343],10],[[149,17],[[10,[348]]]],0,0,0,0,[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],0,[[],1],[[],1],[[]],[[]],[[],45],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[4,[[4,[1]]]],[[],5],0,0,[[],8],[[],8],[[],9],[[],10],0,0,0,0,0,[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],0,[[[349,[85,85]]],[[349,[85,85]]]],[[]],[[]],[[]],[[],349],[[]],[[]],[[[351,[350,350]]],[[349,[350,350]]]],[[205,205,7],349],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[352,353],248],[[352,354],248],[[]],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],10],[[],10],0,0,0,0,[[],1],[[],1],[[]],[[]],0,0,[[],[[359,[[0,[355,[357,[356]],358]]]]]],[[]],[[[359,[[0,[355,[357,[356]],358]]]],5]],[[[359,[[0,[355,[357,[356]],358]]]],64],360],0,[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[4,[[4,[1]]]],0,[[],5],[[[359,[[0,[355,[357,[356]],358]]]],5,37,37],360],[[[359,[[0,[355,[357,[356]],358]]]],5,37],360],[[[359,[[0,[355,[357,[356]],358]]]],37,37],360],[[[359,[[0,[355,[357,[356]],358]]]],37],360],[[[359,[[0,[355,[357,[356]],358]]]],37,37],360],[[[359,[[0,[355,[357,[356]],358]]]],37],360],[[[359,[[0,[355,[357,[356]],358]]]],37,37],360],[[[359,[[0,[355,[357,[356]],358]]]],37],360],0,0,[[[359,[[0,[355,[357,[356]],358]]]],37],360],[[[359,[[0,[355,[357,[356]],358]]]],37],360],[[[359,[[0,[355,[357,[356]],358]]]],5,37,37],360],[[[359,[[0,[355,[357,[356]],358]]]],5,37],360],[[[359,[[0,[355,[357,[356]],358]]]]]],[[[359,[[0,[355,[357,[356]],358]]]]]],[[],8],[[],8],[[],9],[[],10],[[[359,[[0,[355,[357,[356]],358]]]]]],[[[359,[[0,[355,[357,[356]],358]]]],15,15,37],360],0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],14],[361,88],[362,5],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[362],[363],[364],[362,362],[363,363],[364,364],[361,361],[[]],[[]],[[]],[[]],[[361,361],22],[[],362],[[],363],[[],364],[[],361],[362,15],0,[[]],[[]],[[]],[[]],[14,5],[25],[362,37],[363,37],[364,37],[[362,362],5],[[363,363],5],[[364,364],5],[[361,361],5],[[],5],[[],5],[[],5],[364,7],0,0,[362,172],0,[[362,26],[[8,[240]]]],[[363,26],[[8,[240]]]],[[364,26],[[8,[240]]]],[[361,26],[[8,[240]]]],[[]],[365,362],[[]],[[]],[[]],[36,[[10,[361]]]],[88,[[10,[361]]]],0,[[361,25]],[363,64],0,[362,366],0,[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[36,5],[[],5],[[],5],[[],5],[[],5],0,0,[[361,361],[[10,[22]]]],[[364,367],[[8,[89]]]],[[363,368],[[8,[89]]]],[[363,361]],[362,366],0,[362,88],0,0,[[],[[8,[[369,[15]],89]]]],[[7,15,15,15,15],[[8,[363,89]]]],[[],[[8,[363,89]]]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[363,361],0,[[],9],[[],9],[[],9],[[],9],[362,64],0,[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,[[],1],[[],1],[[]],[[]],[[],[[370,[338]]]],[370],[370],[[[370,[[0,[85,371]]]]],5],[[]],0,0,[[]],0,0,[[]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[[],5],0,0,[[],5],[[],370],0,0,[[],8],[[],8],[[],9],[[],10],[[[370,[[0,[85,371]]]]]],0,[[],1],[[],1],[[]],[[]],[[],372],[[]],0,[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[[],5],[[],372],0,[[],8],[[],8],[[],9],[[],10],[372],[[],373],[[373,12],52],0,0,[[],1],[[],14],[14,5],[25],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,10],[374,374],[[]],[[374,374],22],0,[[36,36],36],[[36,36],36],[[36,36],36],[[]],[[]],[[]],[[]],[14,5],[[374,374],5],[[],5],[[],5],[[],5],[[[376,[375]],26],27],[[[35,[377]],26],27],[[[378,[377]],26],27],[[374,26],27],[[]],[[]],[[]],[[]],[[[29,[375]],[272,[375]]],[[376,[375]]]],[[[29,[375]],[29,[375]],[29,[375]]],[[10,[[376,[375]]]]]],[[[376,[375]],[272,[375]],[272,[375]]],[[10,[375]]]],[[[376,[375]],[378,[375]]],[[52,[[272,[375]]]]]],[[[376,[375]],[378,[375]]],[[52,[[272,[375]]]]]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[],5],[[],5],[[[0,[87,279]],[0,[87,279]]],[[0,[87,279]]]],0,0,[[[0,[87,279]],[0,[87,279]]],[[0,[87,279]]]],0,0,0,[[[272,[375]],375],[[376,[375]]]],[[[168,[377]],[168,[377]]],[[35,[377]]]],[[[29,[377]],[29,[377]]],[[378,[377]]]],[[374,374],[[10,[22]]]],[[[35,[377]]],[[23,[[168,[377]]]]]],[[[378,[377]]],[[23,[[29,[377]]]]]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[380,[379]],42,[4,[[44,[43]]]],45,46]],[17,381],[[17,39],381],[[17,[349,[248,382]],[52,[7]],364],381],[[17,95],381],0,[[],17],[[],17],[[],17],[[],17],0,0,0,[[],[[380,[379]]]],[[],383],[[],384],[385],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[383,17,45],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],88],0,0,[[],72],[[],72],[[],72],[[],72],0,0,0,[[[34,[12]],386,[387,[379,129]]],[[8,[388]]]],0,0,0,0,0,0,0,[[],389],[[],390],[[],95],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[4,[[4,[1]]]],[[],5],0,[[[391,[43,379]]],[[127,[88]]]],[[[4,[[44,[43]]]]],[[391,[43]]]],0,[[[391,[43,379]],6]],[[],8],[[],8],[[],9],[[],10],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[388,26],27],[[388,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[],5],[[[387,[379,129]],17,[52,[[80,[15]]]]],[[8,[388]]]],[[[387,[379,129]],17,88],[[8,[388]]]],[[[387,[379,129]],17,[349,[248,382]],[52,[7]],364],[[8,[388]]]],0,[129,[[387,[379,129]]]],0,[[[34,[12]],386,[387,[379,129]]],[[8,[388]]]],[62],[[[387,[379,129]]],129],[[[387,[379,129]],17],[[8,[388]]]],[[],39],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[6],0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[45,57,58],59],[[45,132,58],59],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],10],[[],10],0,[[],1],[[],1],[[]],[[]],[[]],[[65,[0,[129,85,99]],68],133],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[4,[[4,[1]]]],[[],5],0,[[[392,[43,379]]],[[127,[88]]]],[[[4,[[44,[43]]]]],[[392,[43]]]],0,[[[392,[43,379]],6]],[[],8],[[],8],[[],9],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[214,214,214]],[[[393,[268,350,350,350,350]],268,17,328,[349,[350,350]],350,[34,[350]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[394,[[10,[395]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[[393,[268,350,350,350,350]]]],[394],[396,396],[395,395],[[]],[[]],0,[[],394],[[]],[[]],[[]],[[]],[[]],[[]],[[[393,[268,350,350,350,350]]]],0,[395,[[228,[214]]]],[[394,396,214],[[228,[214]]]],[[[393,[91,91,91,91,91,91]],26],27],[[396,26],27],[[[397,[91]],26],27],[[395,26],27],[[398,26],27],[[394,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[136,[[393,[148,190,350,350,350,350]]]],[394,[[10,[395]]]],[[394,17],[[10,[[399,[395]]]]]],[[[393,[268,350,350,350,350]],17],[[10,[[400,[88]]]]]],[[[393,[268,350,350,350,350]],17,45],5],[[[393,[268,350,350,350,350]]],394],0,[[[393,[268,350,350,350,350]]]],0,[395,[[228,[214]]]],[395,[[228,[7]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[394,33],0,[395,[[228,[214]]]],0,0,[[394,214,396,214],[[228,[214]]]],[[[393,[268,350,350,350,350]]]],[[215,215,215,215],[[393,[268,350,350,350,350]]]],[[214,396],397],[[],394],0,0,0,0,0,[394,[[10,[395]]]],[[394,395]],0,[[]],[[]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[[393,[268,350,350,350,350]],268,395,[34,[350]]]],[[[393,[268,350,350,350,350]],268,395,350]],0,[[[393,[268,350,350,350,350]]]],0,[395,[[228,[214]]]],[6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[17,381],[[17,39],381],[[17,[349,[248,382]],[52,[7]],364],381],[[17,95],381],[17,401],[[17,39],402],[[17,95],403],[[17,[349,[248,382]],[52,[7]],364],404],[405,405],[404,404],[406,406],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[401,17],[402,17],[403,17],[404,17],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[14,5],[25],[[405,405],5],[[],5],[[],5],[[],5],0,[[401,26],27],[[402,26],27],[[403,26],27],[[405,26],27],[[404,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[405,25]],0,[401,74],[[]],[402,74],[[]],[403,74],[[]],[[]],[[]],[404,74],[[]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[4,[[4,[1]]]],[[],5],[404,5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[],88],[402,88],0,[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],389],[[],390],[402,389],[404,390],[[]],[[]],[[]],[[],95],[403,95],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[6],[[407,136,148,149,114,28]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[]],[[]],[223,223],[[]],[[]],[[]],[14,5],[[223,223],5],[[],5],[[],5],[[],5],[[]],[223,7],0,[223,408],[[],64],[[]],[[[3,[2]]],[[3,[1,2]]]],[31,[[31,[1]]]],[4,[[4,[1]]]],[[],5],[[7,7],[[10,[223]]]],[[]],[[]],[[],223],[[]],[[],8],[[],8],[[],9],[[],10],[223,7],0,[223,408]],"c":[],"p":[[8,"Any"],[3,"Global"],[3,"Box"],[3,"Rc"],[15,"bool"],[3,"MapContext"],[15,"u32"],[4,"Result"],[3,"TypeId"],[4,"Option"],[3,"ZoomLevel"],[15,"u8"],[3,"Zoom"],[8,"DynEq"],[15,"f64"],[3,"WorldCoords"],[3,"WorldTileCoords"],[3,"Quadkey"],[3,"LatLon"],[3,"InnerCoords"],[3,"TileCoords"],[4,"Ordering"],[15,"array"],[8,"Deserializer"],[8,"Hasher"],[3,"Formatter"],[6,"Result"],[3,"ViewRegion"],[3,"Point3"],[3,"AlignedWorldTileCoords"],[3,"Arc"],[4,"TileAddressingScheme"],[8,"Iterator"],[15,"slice"],[3,"Aabb2"],[15,"i32"],[15,"usize"],[8,"Serializer"],[3,"String"],[3,"Matrix4"],[3,"DebugPlugin"],[3,"Schedule"],[8,"Environment"],[3,"Kernel"],[3,"World"],[3,"RenderGraph"],[3,"DebugPipeline"],[3,"TileDebugItem"],[8,"Draw"],[3,"DebugPassNode"],[3,"SlotInfo"],[3,"Vec"],[3,"RenderGraphContext"],[3,"RenderContext"],[3,"RenderResources"],[4,"NodeRunError"],[8,"PhaseItem"],[3,"TrackedRenderPass"],[4,"RenderCommandResult"],[3,"SourceClient"],[4,"SendEventError"],[3,"Demand"],[3,"Map"],[15,"u64"],[4,"Input"],[6,"AsyncProcedure"],[4,"CallError"],[8,"OffscreenKernelEnvironment"],[8,"Scheduler"],[3,"SchedulerAsyncProcedureCall"],[3,"SchedulerContext"],[8,"MessageTag"],[4,"MessageError"],[3,"Message"],[4,"SendError"],[4,"ProcedureError"],[8,"FnMut"],[8,"IntoMessage"],[3,"IndexProcessor"],[3,"IndexedGeometry"],[3,"RTree"],[8,"CoordFloat"],[8,"Bounded"],[8,"Signed"],[8,"Clone"],[4,"ExactGeometry"],[8,"PartialOrd"],[15,"str"],[4,"GeozeroError"],[3,"GeometryIndex"],[8,"Debug"],[3,"LineString"],[3,"HashMap"],[3,"Polygon"],[4,"TileIndex"],[4,"ColumnValue"],[4,"ScheduleError"],[8,"FnOnce"],[8,"Send"],[3,"NopScheduler"],[8,"HttpClient"],[3,"HttpSourceClient"],[8,"Future"],[3,"Pin"],[4,"SourceType"],[3,"SourceFetchError"],[4,"Error"],[3,"Error"],[8,"Error"],[3,"TessellateSource"],[3,"RasterSource"],[3,"KernelBuilder"],[4,"MapError"],[3,"Style"],[3,"RendererBuilder"],[8,"Plugin"],[3,"ReqwestOffscreenKernelEnvironment"],[3,"ReqwestHttpClient"],[3,"TokioScheduler"],[8,"RasterTransferables"],[3,"RasterPlugin"],[6,"RgbaImage"],[3,"RasterLayersDataComponent"],[3,"AvailableRasterLayerData"],[3,"MissingRasterLayerData"],[3,"PopulateWorldSystem"],[4,"Cow"],[4,"ProcessRasterError"],[8,"Context"],[3,"ProcessRasterContext"],[3,"RasterTileRequest"],[3,"LayerItem"],[6,"AsyncProcedureFuture"],[3,"RequestSystem"],[3,"RasterResources"],[3,"Device"],[3,"Texture"],[6,"Label"],[4,"TextureFormat"],[3,"TextureUsages"],[3,"BindGroup"],[3,"Msaa"],[3,"RenderPipeline"],[3,"DefaultLayerRaster"],[3,"DefaultLayerRasterMissing"],[4,"RasterMessageTag"],[3,"DefaultRasterTransferables"],[3,"Queue"],[3,"Tiles"],[3,"RenderPlugin"],[4,"RenderStageLabel"],[3,"MaskPipeline"],[3,"Renderer"],[8,"MapWindow"],[8,"HeadedMapWindow"],[3,"WgpuSettings"],[3,"RendererSettings"],[4,"RenderError"],[3,"Instance"],[3,"Surface"],[6,"RequestAdapterOptions"],[3,"RequestDeviceError"],[3,"UninitializedRenderer"],[4,"InitializationResult"],[3,"InitializedRenderer"],[3,"Perspective"],[3,"Camera"],[3,"Point2"],[3,"EdgeInsets"],[3,"ViewProjection"],[3,"ModelViewProjection"],[15,"f32"],[3,"Rad"],[3,"InvertedViewProjection"],[3,"Vector2"],[8,"Into"],[3,"Vector4"],[3,"CreateSurfaceError"],[4,"RenderGraphError"],[4,"SurfaceError"],[4,"Eventually"],[8,"HasTile"],[8,"HasChanged"],[4,"RunSubGraphError"],[4,"OutputSlotError"],[4,"InputSlotError"],[3,"RunSubGraph"],[4,"SlotLabel"],[4,"SlotValue"],[3,"Buffer"],[3,"Sampler"],[4,"TextureView"],[3,"SlotInfos"],[3,"NodeState"],[4,"Edge"],[4,"EdgeExistence"],[3,"NodeId"],[8,"Node"],[4,"NodeLabel"],[8,"AsRef"],[3,"GraphInputNode"],[3,"Edges"],[3,"EmptyNode"],[4,"SlotType"],[8,"IntoIterator"],[4,"RenderGraphRunnerError"],[3,"MainPassNode"],[3,"MainPassDriverNode"],[3,"TileMaskItem"],[3,"RenderPhase"],[8,"RenderCommand"],[3,"DrawState"],[3,"RenderPipelineDescriptor"],[6,"BufferAddress"],[3,"BackingBufferDescriptor"],[3,"VertexBufferLayout"],[3,"FragmentState"],[3,"VertexState"],[3,"WindowHead"],[3,"Surface"],[3,"Adapter"],[4,"Head"],[3,"WindowSize"],[3,"BufferDimensions"],[3,"TextureView"],[3,"SurfaceTexture"],[3,"TilePipeline"],[3,"Range"],[3,"RenderPass"],[3,"Color"],[3,"BufferSlice"],[4,"IndexFormat"],[3,"ShaderStages"],[3,"Backends"],[3,"Features"],[4,"TextureAspect"],[3,"Limits"],[4,"PowerPreference"],[4,"SurfaceType"],[3,"Error"],[4,"Backend"],[3,"TextureFormatFeatures"],[3,"Iter"],[3,"IterNames"],[4,"TextureSampleType"],[3,"ShaderCamera"],[3,"ShaderGlobals"],[3,"ShaderVertex"],[3,"ShaderFeatureStyle"],[3,"ShaderLayerMetadata"],[3,"ShaderTileMetadata"],[3,"ShaderTextureVertex"],[3,"TileMaskShader"],[3,"VectorTileShader"],[3,"RasterTileShader"],[6,"Vec3f32"],[6,"Mat4x4f32"],[6,"Vec4f32"],[6,"Vec2f32"],[3,"GraphRunnerSystem"],[3,"ResourceSystem"],[3,"ViewTileSources"],[3,"TileShape"],[4,"SourceShapes"],[3,"ViewTile"],[8,"ResourceQuery"],[3,"QueryHasTile"],[8,"Queue"],[3,"TileViewPattern"],[3,"BackingBuffer"],[3,"ViewState"],[3,"Vector3"],[3,"Deg"],[8,"StageLabel"],[8,"Stage"],[8,"IntoSystemContainer"],[3,"MultiStage"],[3,"NopStage"],[8,"Copy"],[3,"AcesCc"],[3,"Alpha"],[3,"Luminance"],[3,"Luma"],[3,"DisplayP3"],[3,"Rec709"],[3,"CieLCh"],[3,"GenericColor1"],[3,"EncodedSrgb"],[3,"EncodedRec709"],[3,"Oklab"],[3,"CieLab"],[3,"DciXYZPrime"],[3,"EncodedBt2100HLG"],[3,"Yuv"],[3,"CieXYZ"],[3,"GenericColor3"],[3,"Hsl"],[3,"ICtCpHLG"],[3,"Bt2020"],[3,"YPrimeCbCr"],[3,"YCbCr"],[3,"Hsv"],[3,"YPbPr"],[3,"LinearSrgb"],[3,"AcesCct"],[3,"YCxCz"],[3,"EncodedBt2100PQ"],[3,"YPrimePbPr"],[3,"DciP3"],[3,"Aces2065"],[3,"Oklch"],[3,"ICtCpPQ"],[3,"EncodedBt2020"],[3,"EncodedDisplayP3"],[3,"Bt2100"],[3,"AcesCg"],[3,"PremultipliedAlpha"],[8,"ColorType"],[4,"Spaces"],[8,"Ord"],[8,"PartialEq"],[3,"Color"],[8,"Hash"],[3,"BackgroundPaint"],[3,"FillPaint"],[3,"LinePaint"],[4,"LayerPaint"],[3,"StyleLayer"],[4,"RasterResampling"],[3,"RasterLayer"],[3,"VectorSource"],[4,"Source"],[8,"QueryState"],[3,"EphemeralQueryState"],[3,"GlobalQueryState"],[3,"Resources"],[8,"Resource"],[8,"Default"],[3,"SystemContainer"],[8,"System"],[3,"FunctionSystem"],[3,"SystemStage"],[3,"Tile"],[8,"QueryState"],[3,"EphemeralQueryState"],[3,"GlobalQueryState"],[8,"TileComponent"],[3,"TileSpawnResult"],[3,"OverAlignedVertexBuffer"],[8,"Pod"],[3,"VertexBuffers"],[3,"VertexConstructor"],[3,"FillVertex"],[3,"StrokeVertex"],[8,"Add"],[3,"VertexId"],[8,"From"],[8,"MaxIndex"],[3,"ZeroTessellator"],[6,"Result"],[4,"GeomType"],[3,"Value"],[3,"Feature"],[3,"Layer"],[4,"TileValue"],[15,"i64"],[8,"FeatureProcessor"],[8,"GeomProcessor"],[4,"Geometry"],[3,"ChangeObserver"],[8,"SignificantlyDifferent"],[3,"FPSMeter"],[3,"Grid"],[3,"FloatOrd"],[8,"BaseFloat"],[3,"Plane"],[8,"BaseNum"],[3,"Aabb3"],[8,"VectorTransferables"],[3,"VectorPlugin"],[8,"Sized"],[6,"IndexDataType"],[3,"VectorTilesDone"],[3,"VectorLayersDataComponent"],[3,"VectorPipeline"],[3,"VectorTileRequest"],[3,"ProcessVectorContext"],[4,"ProcessVectorError"],[3,"MissingVectorLayerData"],[3,"AvailableVectorLayerData"],[3,"PopulateWorldSystem"],[3,"RequestSystem"],[3,"BufferPool"],[3,"RingIndex"],[3,"IndexEntry"],[4,"BackingBufferType"],[3,"BackingBuffer"],[3,"RingIndexEntry"],[3,"VecDeque"],[3,"HashSet"],[3,"DefaultTileTessellated"],[3,"DefaultLayerMissing"],[3,"DefaultLayerIndexed"],[3,"DefaultLayerTesselated"],[4,"VectorMessageTag"],[3,"DefaultVectorTransferables"],[6,"VectorBufferPool"],[3,"NonZeroU32"],[3,"SetDebugPipeline"],[3,"DrawDebugOutline"],[8,"EventLoopConfig"],[8,"EventLoop"],[8,"EventLoopProxy"],[8,"AsyncProcedureCall"],[13,"TileRequest"],[13,"Linear"],[13,"Spatial"],[4,"CurrentMapContext"],[13,"Pending"],[4,"RasterLayerData"],[8,"LayerRaster"],[8,"LayerRasterMissing"],[3,"SetRasterTilePipeline"],[3,"SetRasterViewBindGroup"],[3,"DrawRasterTile"],[13,"SlotEdge"],[13,"NodeEdge"],[13,"MismatchedSlotType"],[13,"MismatchedSlotType"],[13,"MismatchedNodeSlots"],[13,"UnconnectedNodeInputSlot"],[13,"NodeInputSlotAlreadyOccupied"],[13,"UnconnectedNodeOutputSlot"],[13,"MismatchedInputSlotType"],[13,"MissingInput"],[3,"RenderGraphRunner"],[13,"MismatchedInputSlotType"],[13,"MissingInput"],[13,"EmptyNodeOutputSlot"],[3,"SetMaskPipeline"],[3,"DrawMask"],[3,"BufferedTextureHead"],[8,"RenderPipeline"],[13,"SurfaceTexture"],[13,"Astc"],[8,"Shader"],[8,"ColorInterop"],[8,"ResourceQueryMut"],[8,"ResourceQueryUnsafe"],[8,"IntoSystem"],[8,"ComponentQuery"],[8,"ComponentQueryMut"],[8,"ComponentQueryUnsafe"],[8,"Align"],[8,"DynHash"],[4,"VectorLayerData"],[8,"TileTessellated"],[8,"LayerMissing"],[8,"LayerTessellated"],[8,"LayerIndexed"],[3,"SetVectorTilePipeline"],[3,"DrawVectorTile"],[8,"MapWindowConfig"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
